{
	"id": "27cc17445ef16e5054d070aade0020e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\";\n\ncontract VoluntariadoUFV is ERC1155, Ownable, ERC1155Pausable {\n\n    uint256 private constant OLD = 1;  // TOKEN POR AYUDAR A GENTE MAYOR\n    uint256 private constant YOUNG = 2; // TOKEN POR AYUDAR A NIÑOS/ADOLESCENTES EN RIESGO DE EXCLUSIÓN SOCIAL\n    uint256 private constant FOOD = 3; // TOKEN POR AYUDAR A GENTE SIN TECHO PROPORCIONANDO COMIDA\n\n\n    constructor(address initialOwner)\n        ERC1155(\"https://raw.githubusercontent.com/JLDSjr/metadata_blockchain/main/{id}.json\")\n        Ownable(initialOwner)\n    {}\n\n    function setURI(string memory newuri) public onlyOwner {\n        _setURI(newuri);\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address account, uint256 id, uint256 amount, bytes memory data)\n        public\n        onlyOwner\n    {\n        _mint(account, id, amount, data);\n    }\n\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\n        public\n        onlyOwner\n    {\n        _mintBatch(to, ids, amounts, data);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values)\n        internal\n        override(ERC1155, ERC1155Pausable)\n    {\n        super._update(from, to, ids, values);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC1155 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC1155Pausable is ERC1155, Pausable {\n    /**\n     * @dev See {ERC1155-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal virtual override whenNotPaused {\n        super._update(from, to, ids, values);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol": {
				"ERC1155Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1155 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"paused()": "5c975abb",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1155 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":\"ERC1155Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":{\"keccak256\":\"0x866feab1d0ba71404ed131a1bcea272ce84f6215da28ff91d6dc2bebb7614b66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a21bd8f0cfb2d359c09562a3e2b2cc2a80b408a90f9e9801a1b8f67a891f082c\",\"dweb:/ipfs/QmeSVGiEnDjDoBEsz1P35NwYXk8u7DMspKkLzQjavTPdqM\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol:ERC1155Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol:ERC1155Pausable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol:ERC1155Pausable",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1777,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol:ERC1155Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f9cfcdfd73b4ba8363273c8dd601b1a4feadc1cbfde410777c91fdfb5971b81164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f9cfcdfd73b4ba8363273c8dd601b1a4feadc1cbfde410777c91fdfb5971b81164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xCF 0xCD REVERT PUSH20 0xB4BA8363273C8DD601B1A4FEADC1CBFDE410777C SWAP2 REVERT 0xFB MSIZE PUSH18 0xB81164736F6C634300081900330000000000 ",
							"sourceMap": "276:4526:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f9cfcdfd73b4ba8363273c8dd601b1a4feadc1cbfde410777c91fdfb5971b81164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xCF 0xCD REVERT PUSH20 0xB4BA8363273C8DD601B1A4FEADC1CBFDE410777C SWAP2 REVERT 0xFB MSIZE PUSH18 0xB81164736F6C634300081900330000000000 ",
							"sourceMap": "276:4526:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9cfcdfd73b4ba8363273c8dd601b1a4feadc1cbfde410777c91fdfb5971b81164736f6c63430008190033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1777,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1F PUSH31 0x6FFA154B5AB493A9AFE982EA25312076F3D20EFA211B038F476023B0EB6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1245:2685:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1F PUSH31 0x6FFA154B5AB493A9AFE982EA25312076F3D20EFA211B038F476023B0EB6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1245:2685:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol": {
				"VoluntariadoUFV": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":300:1693  contract VoluntariadoUFV is ERC1155, Ownable, ERC1155Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":656:821  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":801:813  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n  0x4b\n  dup2\n  mstore\n  0x20\n  add\n  data_eae80a2c7bf2c9d096e554e5e4405cf6aefa68f606389f34d4cda8a311083ded\n  0x4b\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x03\n  0x14\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":656:821  constructor(address initialOwner)... */\n  pop\n    /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":300:1693  contract VoluntariadoUFV is ERC1155, Ownable, ERC1155Pausable {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x03\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_27:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_28:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_58\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_27\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_29:\n    /* \"#utility.yul\":641:665   */\n  tag_60\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_28\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_61:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_30:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_63\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_29\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_66\n  tag_25\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":932:1051   */\ntag_65:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_67\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_30\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_31:\n    /* \"#utility.yul\":1289:1313   */\n  tag_69\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_28\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_14:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_71\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_31\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1653   */\ntag_32:\n    /* \"#utility.yul\":1606:1612   */\n  0x00\n    /* \"#utility.yul\":1640:1645   */\n  dup2\n    /* \"#utility.yul\":1634:1646   */\n  mload\n    /* \"#utility.yul\":1624:1646   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1653   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1659:1839   */\ntag_33:\n    /* \"#utility.yul\":1707:1784   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1704:1705   */\n  0x00\n    /* \"#utility.yul\":1697:1785   */\n  mstore\n    /* \"#utility.yul\":1804:1808   */\n  0x41\n    /* \"#utility.yul\":1801:1802   */\n  0x04\n    /* \"#utility.yul\":1794:1809   */\n  mstore\n    /* \"#utility.yul\":1828:1832   */\n  0x24\n    /* \"#utility.yul\":1825:1826   */\n  0x00\n    /* \"#utility.yul\":1818:1833   */\n  revert\n    /* \"#utility.yul\":1845:2025   */\ntag_34:\n    /* \"#utility.yul\":1893:1970   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1890:1891   */\n  0x00\n    /* \"#utility.yul\":1883:1971   */\n  mstore\n    /* \"#utility.yul\":1990:1994   */\n  0x22\n    /* \"#utility.yul\":1987:1988   */\n  0x04\n    /* \"#utility.yul\":1980:1995   */\n  mstore\n    /* \"#utility.yul\":2014:2018   */\n  0x24\n    /* \"#utility.yul\":2011:2012   */\n  0x00\n    /* \"#utility.yul\":2004:2019   */\n  revert\n    /* \"#utility.yul\":2031:2351   */\ntag_35:\n    /* \"#utility.yul\":2075:2081   */\n  0x00\n    /* \"#utility.yul\":2112:2113   */\n  0x02\n    /* \"#utility.yul\":2106:2110   */\n  dup3\n    /* \"#utility.yul\":2102:2114   */\n  div\n    /* \"#utility.yul\":2092:2114   */\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2160   */\n  0x01\n    /* \"#utility.yul\":2153:2157   */\n  dup3\n    /* \"#utility.yul\":2149:2161   */\n  and\n    /* \"#utility.yul\":2180:2198   */\n  dup1\n    /* \"#utility.yul\":2170:2251   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2236:2240   */\n  0x7f\n    /* \"#utility.yul\":2228:2234   */\n  dup3\n    /* \"#utility.yul\":2224:2241   */\n  and\n    /* \"#utility.yul\":2214:2241   */\n  swap2\n  pop\n    /* \"#utility.yul\":2170:2251   */\ntag_76:\n    /* \"#utility.yul\":2298:2300   */\n  0x20\n    /* \"#utility.yul\":2290:2296   */\n  dup3\n    /* \"#utility.yul\":2287:2301   */\n  lt\n    /* \"#utility.yul\":2267:2285   */\n  dup2\n    /* \"#utility.yul\":2264:2302   */\n  sub\n    /* \"#utility.yul\":2261:2345   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2317:2335   */\n  tag_78\n  tag_34\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2261:2345   */\ntag_77:\n    /* \"#utility.yul\":2082:2351   */\n  pop\n    /* \"#utility.yul\":2031:2351   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2357:2498   */\ntag_36:\n    /* \"#utility.yul\":2406:2410   */\n  0x00\n    /* \"#utility.yul\":2429:2432   */\n  dup2\n    /* \"#utility.yul\":2421:2432   */\n  swap1\n  pop\n    /* \"#utility.yul\":2452:2455   */\n  dup2\n    /* \"#utility.yul\":2449:2450   */\n  0x00\n    /* \"#utility.yul\":2442:2456   */\n  mstore\n    /* \"#utility.yul\":2486:2490   */\n  0x20\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2473:2491   */\n  keccak256\n    /* \"#utility.yul\":2465:2491   */\n  swap1\n  pop\n    /* \"#utility.yul\":2357:2498   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2504:2597   */\ntag_37:\n    /* \"#utility.yul\":2541:2547   */\n  0x00\n    /* \"#utility.yul\":2588:2590   */\n  0x20\n    /* \"#utility.yul\":2583:2585   */\n  0x1f\n    /* \"#utility.yul\":2576:2581   */\n  dup4\n    /* \"#utility.yul\":2572:2586   */\n  add\n    /* \"#utility.yul\":2568:2591   */\n  div\n    /* \"#utility.yul\":2558:2591   */\n  swap1\n  pop\n    /* \"#utility.yul\":2504:2597   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2603:2710   */\ntag_38:\n    /* \"#utility.yul\":2647:2655   */\n  0x00\n    /* \"#utility.yul\":2697:2702   */\n  dup3\n    /* \"#utility.yul\":2691:2695   */\n  dup3\n    /* \"#utility.yul\":2687:2703   */\n  shl\n    /* \"#utility.yul\":2666:2703   */\n  swap1\n  pop\n    /* \"#utility.yul\":2603:2710   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2716:3109   */\ntag_39:\n    /* \"#utility.yul\":2785:2791   */\n  0x00\n    /* \"#utility.yul\":2835:2836   */\n  0x08\n    /* \"#utility.yul\":2823:2833   */\n  dup4\n    /* \"#utility.yul\":2819:2837   */\n  mul\n    /* \"#utility.yul\":2858:2955   */\n  tag_83\n    /* \"#utility.yul\":2888:2954   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2877:2886   */\n  dup3\n    /* \"#utility.yul\":2858:2955   */\n  tag_38\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2976:3015   */\n  tag_84\n    /* \"#utility.yul\":3006:3014   */\n  dup7\n    /* \"#utility.yul\":2995:3004   */\n  dup4\n    /* \"#utility.yul\":2976:3015   */\n  tag_38\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2964:3015   */\n  swap6\n  pop\n    /* \"#utility.yul\":3048:3052   */\n  dup1\n    /* \"#utility.yul\":3044:3053   */\n  not\n    /* \"#utility.yul\":3037:3042   */\n  dup5\n    /* \"#utility.yul\":3033:3054   */\n  and\n    /* \"#utility.yul\":3024:3054   */\n  swap4\n  pop\n    /* \"#utility.yul\":3097:3101   */\n  dup1\n    /* \"#utility.yul\":3087:3095   */\n  dup7\n    /* \"#utility.yul\":3083:3102   */\n  and\n    /* \"#utility.yul\":3076:3081   */\n  dup5\n    /* \"#utility.yul\":3073:3103   */\n  or\n    /* \"#utility.yul\":3063:3103   */\n  swap3\n  pop\n    /* \"#utility.yul\":2792:3109   */\n  pop\n  pop\n    /* \"#utility.yul\":2716:3109   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3115:3192   */\ntag_40:\n    /* \"#utility.yul\":3152:3159   */\n  0x00\n    /* \"#utility.yul\":3181:3186   */\n  dup2\n    /* \"#utility.yul\":3170:3186   */\n  swap1\n  pop\n    /* \"#utility.yul\":3115:3192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3198:3258   */\ntag_41:\n    /* \"#utility.yul\":3226:3229   */\n  0x00\n    /* \"#utility.yul\":3247:3252   */\n  dup2\n    /* \"#utility.yul\":3240:3252   */\n  swap1\n  pop\n    /* \"#utility.yul\":3198:3258   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3264:3406   */\ntag_42:\n    /* \"#utility.yul\":3314:3323   */\n  0x00\n    /* \"#utility.yul\":3347:3400   */\n  tag_88\n    /* \"#utility.yul\":3365:3399   */\n  tag_89\n    /* \"#utility.yul\":3374:3398   */\n  tag_90\n    /* \"#utility.yul\":3392:3397   */\n  dup5\n    /* \"#utility.yul\":3374:3398   */\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3365:3399   */\n  tag_41\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3347:3400   */\n  tag_40\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3334:3400   */\n  swap1\n  pop\n    /* \"#utility.yul\":3264:3406   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3412:3487   */\ntag_43:\n    /* \"#utility.yul\":3455:3458   */\n  0x00\n    /* \"#utility.yul\":3476:3481   */\n  dup2\n    /* \"#utility.yul\":3469:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3412:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3762   */\ntag_44:\n    /* \"#utility.yul\":3603:3642   */\n  tag_93\n    /* \"#utility.yul\":3634:3641   */\n  dup4\n    /* \"#utility.yul\":3603:3642   */\n  tag_42\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3664:3755   */\n  tag_94\n    /* \"#utility.yul\":3713:3754   */\n  tag_95\n    /* \"#utility.yul\":3737:3753   */\n  dup3\n    /* \"#utility.yul\":3713:3754   */\n  tag_43\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3705:3711   */\n  dup5\n    /* \"#utility.yul\":3698:3702   */\n  dup5\n    /* \"#utility.yul\":3692:3703   */\n  sload\n    /* \"#utility.yul\":3664:3755   */\n  tag_39\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3658:3662   */\n  dup3\n    /* \"#utility.yul\":3651:3756   */\n  sstore\n    /* \"#utility.yul\":3569:3762   */\n  pop\n    /* \"#utility.yul\":3493:3762   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3768:3841   */\ntag_45:\n    /* \"#utility.yul\":3813:3816   */\n  0x00\n    /* \"#utility.yul\":3768:3841   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3847:4036   */\ntag_46:\n    /* \"#utility.yul\":3924:3956   */\n  tag_98\n  tag_45\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3965:4030   */\n  tag_99\n    /* \"#utility.yul\":4023:4029   */\n  dup2\n    /* \"#utility.yul\":4015:4021   */\n  dup5\n    /* \"#utility.yul\":4009:4013   */\n  dup5\n    /* \"#utility.yul\":3965:4030   */\n  tag_44\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3900:4036   */\n  pop\n    /* \"#utility.yul\":3847:4036   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4042:4228   */\ntag_47:\n    /* \"#utility.yul\":4102:4222   */\ntag_101:\n    /* \"#utility.yul\":4119:4122   */\n  dup2\n    /* \"#utility.yul\":4112:4117   */\n  dup2\n    /* \"#utility.yul\":4109:4123   */\n  lt\n    /* \"#utility.yul\":4102:4222   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4173:4212   */\n  tag_104\n    /* \"#utility.yul\":4210:4211   */\n  0x00\n    /* \"#utility.yul\":4203:4208   */\n  dup3\n    /* \"#utility.yul\":4173:4212   */\n  tag_46\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4146:4147   */\n  0x01\n    /* \"#utility.yul\":4139:4144   */\n  dup2\n    /* \"#utility.yul\":4135:4148   */\n  add\n    /* \"#utility.yul\":4126:4148   */\n  swap1\n  pop\n    /* \"#utility.yul\":4102:4222   */\n  jump(tag_101)\ntag_103:\n    /* \"#utility.yul\":4042:4228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4234:4777   */\ntag_48:\n    /* \"#utility.yul\":4335:4337   */\n  0x1f\n    /* \"#utility.yul\":4330:4333   */\n  dup3\n    /* \"#utility.yul\":4327:4338   */\n  gt\n    /* \"#utility.yul\":4324:4770   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4369:4407   */\n  tag_107\n    /* \"#utility.yul\":4401:4406   */\n  dup2\n    /* \"#utility.yul\":4369:4407   */\n  tag_36\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4453:4482   */\n  tag_108\n    /* \"#utility.yul\":4471:4481   */\n  dup5\n    /* \"#utility.yul\":4453:4482   */\n  tag_37\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4443:4451   */\n  dup2\n    /* \"#utility.yul\":4439:4483   */\n  add\n    /* \"#utility.yul\":4636:4638   */\n  0x20\n    /* \"#utility.yul\":4624:4634   */\n  dup6\n    /* \"#utility.yul\":4621:4639   */\n  lt\n    /* \"#utility.yul\":4618:4667   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":4657:4665   */\n  dup2\n    /* \"#utility.yul\":4642:4665   */\n  swap1\n  pop\n    /* \"#utility.yul\":4618:4667   */\ntag_109:\n    /* \"#utility.yul\":4680:4760   */\n  tag_110\n    /* \"#utility.yul\":4736:4758   */\n  tag_111\n    /* \"#utility.yul\":4754:4757   */\n  dup6\n    /* \"#utility.yul\":4736:4758   */\n  tag_37\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4726:4734   */\n  dup4\n    /* \"#utility.yul\":4722:4759   */\n  add\n    /* \"#utility.yul\":4709:4720   */\n  dup3\n    /* \"#utility.yul\":4680:4760   */\n  tag_47\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4339:4770   */\n  pop\n  pop\n    /* \"#utility.yul\":4324:4770   */\ntag_106:\n    /* \"#utility.yul\":4234:4777   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4783:4900   */\ntag_49:\n    /* \"#utility.yul\":4837:4845   */\n  0x00\n    /* \"#utility.yul\":4887:4892   */\n  dup3\n    /* \"#utility.yul\":4881:4885   */\n  dup3\n    /* \"#utility.yul\":4877:4893   */\n  shr\n    /* \"#utility.yul\":4856:4893   */\n  swap1\n  pop\n    /* \"#utility.yul\":4783:4900   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4906:5075   */\ntag_50:\n    /* \"#utility.yul\":4950:4956   */\n  0x00\n    /* \"#utility.yul\":4983:5034   */\n  tag_114\n    /* \"#utility.yul\":5031:5032   */\n  0x00\n    /* \"#utility.yul\":5027:5033   */\n  not\n    /* \"#utility.yul\":5019:5024   */\n  dup5\n    /* \"#utility.yul\":5016:5017   */\n  0x08\n    /* \"#utility.yul\":5012:5025   */\n  mul\n    /* \"#utility.yul\":4983:5034   */\n  tag_49\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":4979:5035   */\n  not\n    /* \"#utility.yul\":5064:5068   */\n  dup1\n    /* \"#utility.yul\":5058:5062   */\n  dup4\n    /* \"#utility.yul\":5054:5069   */\n  and\n    /* \"#utility.yul\":5044:5069   */\n  swap2\n  pop\n    /* \"#utility.yul\":4957:5075   */\n  pop\n    /* \"#utility.yul\":4906:5075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5080:5375   */\ntag_51:\n    /* \"#utility.yul\":5156:5160   */\n  0x00\n    /* \"#utility.yul\":5302:5331   */\n  tag_116\n    /* \"#utility.yul\":5327:5330   */\n  dup4\n    /* \"#utility.yul\":5321:5325   */\n  dup4\n    /* \"#utility.yul\":5302:5331   */\n  tag_50\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5294:5331   */\n  swap2\n  pop\n    /* \"#utility.yul\":5364:5367   */\n  dup3\n    /* \"#utility.yul\":5361:5362   */\n  0x02\n    /* \"#utility.yul\":5357:5368   */\n  mul\n    /* \"#utility.yul\":5351:5355   */\n  dup3\n    /* \"#utility.yul\":5348:5369   */\n  or\n    /* \"#utility.yul\":5340:5369   */\n  swap1\n  pop\n    /* \"#utility.yul\":5080:5375   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5380:6775   */\ntag_22:\n    /* \"#utility.yul\":5497:5534   */\n  tag_118\n    /* \"#utility.yul\":5530:5533   */\n  dup3\n    /* \"#utility.yul\":5497:5534   */\n  tag_32\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5599:5617   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5591:5597   */\n  dup2\n    /* \"#utility.yul\":5588:5618   */\n  gt\n    /* \"#utility.yul\":5585:5641   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":5621:5639   */\n  tag_120\n  tag_33\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5585:5641   */\ntag_119:\n    /* \"#utility.yul\":5665:5703   */\n  tag_121\n    /* \"#utility.yul\":5697:5701   */\n  dup3\n    /* \"#utility.yul\":5691:5702   */\n  sload\n    /* \"#utility.yul\":5665:5703   */\n  tag_35\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5750:5817   */\n  tag_122\n    /* \"#utility.yul\":5810:5816   */\n  dup3\n    /* \"#utility.yul\":5802:5808   */\n  dup3\n    /* \"#utility.yul\":5796:5800   */\n  dup6\n    /* \"#utility.yul\":5750:5817   */\n  tag_48\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5844:5845   */\n  0x00\n    /* \"#utility.yul\":5868:5872   */\n  0x20\n    /* \"#utility.yul\":5855:5872   */\n  swap1\n  pop\n    /* \"#utility.yul\":5900:5902   */\n  0x1f\n    /* \"#utility.yul\":5892:5898   */\n  dup4\n    /* \"#utility.yul\":5889:5903   */\n  gt\n    /* \"#utility.yul\":5917:5918   */\n  0x01\n    /* \"#utility.yul\":5912:6530   */\n  dup2\n  eq\n  tag_124\n  jumpi\n    /* \"#utility.yul\":6574:6575   */\n  0x00\n    /* \"#utility.yul\":6591:6597   */\n  dup5\n    /* \"#utility.yul\":6588:6665   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":6640:6649   */\n  dup3\n    /* \"#utility.yul\":6635:6638   */\n  dup8\n    /* \"#utility.yul\":6631:6650   */\n  add\n    /* \"#utility.yul\":6625:6651   */\n  mload\n    /* \"#utility.yul\":6616:6651   */\n  swap1\n  pop\n    /* \"#utility.yul\":6588:6665   */\ntag_125:\n    /* \"#utility.yul\":6691:6758   */\n  tag_126\n    /* \"#utility.yul\":6751:6757   */\n  dup6\n    /* \"#utility.yul\":6744:6749   */\n  dup3\n    /* \"#utility.yul\":6691:6758   */\n  tag_51\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6685:6689   */\n  dup7\n    /* \"#utility.yul\":6678:6759   */\n  sstore\n    /* \"#utility.yul\":6547:6769   */\n  pop\n    /* \"#utility.yul\":5882:6769   */\n  jump(tag_123)\n    /* \"#utility.yul\":5912:6530   */\ntag_124:\n    /* \"#utility.yul\":5964:5968   */\n  0x1f\n    /* \"#utility.yul\":5960:5969   */\n  not\n    /* \"#utility.yul\":5952:5958   */\n  dup5\n    /* \"#utility.yul\":5948:5970   */\n  and\n    /* \"#utility.yul\":5998:6035   */\n  tag_127\n    /* \"#utility.yul\":6030:6034   */\n  dup7\n    /* \"#utility.yul\":5998:6035   */\n  tag_36\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6057:6058   */\n  0x00\n    /* \"#utility.yul\":6071:6279   */\ntag_128:\n    /* \"#utility.yul\":6085:6092   */\n  dup3\n    /* \"#utility.yul\":6082:6083   */\n  dup2\n    /* \"#utility.yul\":6079:6093   */\n  lt\n    /* \"#utility.yul\":6071:6279   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":6164:6173   */\n  dup5\n    /* \"#utility.yul\":6159:6162   */\n  dup10\n    /* \"#utility.yul\":6155:6174   */\n  add\n    /* \"#utility.yul\":6149:6175   */\n  mload\n    /* \"#utility.yul\":6141:6147   */\n  dup3\n    /* \"#utility.yul\":6134:6176   */\n  sstore\n    /* \"#utility.yul\":6215:6216   */\n  0x01\n    /* \"#utility.yul\":6207:6213   */\n  dup3\n    /* \"#utility.yul\":6203:6217   */\n  add\n    /* \"#utility.yul\":6193:6217   */\n  swap2\n  pop\n    /* \"#utility.yul\":6262:6264   */\n  0x20\n    /* \"#utility.yul\":6251:6260   */\n  dup6\n    /* \"#utility.yul\":6247:6265   */\n  add\n    /* \"#utility.yul\":6234:6265   */\n  swap5\n  pop\n    /* \"#utility.yul\":6108:6112   */\n  0x20\n    /* \"#utility.yul\":6105:6106   */\n  dup2\n    /* \"#utility.yul\":6101:6113   */\n  add\n    /* \"#utility.yul\":6096:6113   */\n  swap1\n  pop\n    /* \"#utility.yul\":6071:6279   */\n  jump(tag_128)\ntag_130:\n    /* \"#utility.yul\":6307:6313   */\n  dup7\n    /* \"#utility.yul\":6298:6305   */\n  dup4\n    /* \"#utility.yul\":6295:6314   */\n  lt\n    /* \"#utility.yul\":6292:6471   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":6365:6374   */\n  dup5\n    /* \"#utility.yul\":6360:6363   */\n  dup10\n    /* \"#utility.yul\":6356:6375   */\n  add\n    /* \"#utility.yul\":6350:6376   */\n  mload\n    /* \"#utility.yul\":6408:6456   */\n  tag_132\n    /* \"#utility.yul\":6450:6454   */\n  0x1f\n    /* \"#utility.yul\":6442:6448   */\n  dup10\n    /* \"#utility.yul\":6438:6455   */\n  and\n    /* \"#utility.yul\":6427:6436   */\n  dup3\n    /* \"#utility.yul\":6408:6456   */\n  tag_50\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6400:6406   */\n  dup4\n    /* \"#utility.yul\":6393:6457   */\n  sstore\n    /* \"#utility.yul\":6315:6471   */\n  pop\n    /* \"#utility.yul\":6292:6471   */\ntag_131:\n    /* \"#utility.yul\":6517:6518   */\n  0x01\n    /* \"#utility.yul\":6513:6514   */\n  0x02\n    /* \"#utility.yul\":6505:6511   */\n  dup9\n    /* \"#utility.yul\":6501:6515   */\n  mul\n    /* \"#utility.yul\":6497:6519   */\n  add\n    /* \"#utility.yul\":6491:6495   */\n  dup9\n    /* \"#utility.yul\":6484:6520   */\n  sstore\n    /* \"#utility.yul\":5919:6530   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5882:6769   */\ntag_123:\n  pop\n    /* \"#utility.yul\":5472:6775   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5380:6775   */\n  pop\n  pop\n  jump\t// out\n    /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":300:1693  contract VoluntariadoUFV is ERC1155, Ownable, ERC1155Pausable {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_eae80a2c7bf2c9d096e554e5e4405cf6aefa68f606389f34d4cda8a311083ded 68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4a4c44536a722f6d657461646174615f626c6f636b636861696e2f6d61696e2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":300:1693  contract VoluntariadoUFV is ERC1155, Ownable, ERC1155Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x731133e9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x1f7fdffa\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":827:914  function setURI(string memory newuri) public onlyOwner {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1224:1410  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":985:1048  function unpause() public onlyOwner {... */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1054:1218  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":920:979  function pause() public onlyOwner {... */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_95\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_96\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":827:914  function setURI(string memory newuri) public onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_100:\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":892:907  _setURI(newuri) */\n      tag_103\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":900:906  newuri */\n      dup2\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":892:899  _setURI */\n      tag_104\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":892:907  _setURI(newuri) */\n      jump\t// in\n    tag_103:\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":827:914  function setURI(string memory newuri) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_107\n      jump\t// in\n    tag_108:\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n    tag_110:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_111:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_111\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1224:1410  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_113:\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1369:1403  _mintBatch(to, ids, amounts, data) */\n      tag_115\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1380:1382  to */\n      dup5\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1384:1387  ids */\n      dup5\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1389:1396  amounts */\n      dup5\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1398:1402  data */\n      dup5\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1369:1379  _mintBatch */\n      tag_116\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1369:1403  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_115:\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1224:1410  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_120\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap3\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":985:1048  function unpause() public onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1031:1041  _unpause() */\n      tag_130\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1031:1039  _unpause */\n      tag_131\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1031:1041  _unpause() */\n      jump\t// in\n    tag_130:\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":985:1048  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_136\n      jumpi\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n    tag_136:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_139\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_139:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_145\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_147\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_26\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_148\n      jumpi\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n    tag_148:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_140)\n    tag_141:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      0x03\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1054:1218  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1179:1211  _mint(account, id, amount, data) */\n      tag_160\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1185:1192  account */\n      dup5\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1194:1196  id */\n      dup5\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1198:1204  amount */\n      dup5\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1206:1210  data */\n      dup5\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1179:1184  _mint */\n      tag_161\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1179:1211  _mint(account, id, amount, data) */\n      jump\t// in\n    tag_160:\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1054:1218  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":920:979  function pause() public onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":964:972  _pause() */\n      tag_165\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":964:970  _pause */\n      tag_166\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":964:972  _pause() */\n      jump\t// in\n    tag_165:\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":920:979  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap3\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n      swap1\n      dup2\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11523:11805  function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11658:11659  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11644:11660  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11644:11646  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11644:11660  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11640:11728  if (to == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11714:11715  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11683:11717  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11640:11728  if (to == address(0)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11737:11798  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11772:11773  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11776:11778  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11780:11783  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11785:11791  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11793:11797  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11737:11763  _updateWithAcceptanceCheck */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11737:11798  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11523:11805  function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_210\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_211\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x03\n      0x14\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_213\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_214\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10844  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_225\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x03\n      0x14\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_228\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_229\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_233\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_147\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_147\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_251)\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      tag_255\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2271  paused */\n      tag_62\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      tag_259\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n      tag_62\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1484:1691  function _update(address from, address to, uint256[] memory ids, uint256[] memory values)... */\n    tag_243:\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1648:1684  super._update(from, to, ids, values) */\n      tag_262\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1662:1666  from */\n      dup5\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1668:1670  to */\n      dup5\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1672:1675  ids */\n      dup5\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1677:1683  values */\n      dup5\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1648:1661  super._update */\n      tag_263\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1648:1684  super._update(from, to, ids, values) */\n      jump\t// in\n    tag_262:\n        /* \"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":1484:1691  function _update(address from, address to, uint256[] memory ids, uint256[] memory values)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      iszero\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_268\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_269\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      0x01\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_271\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_276\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_275)\n    tag_276:\n      0x60\n      swap2\n      pop\n    tag_275:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15156  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15209:15211  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_287\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_288\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_288:\n      0x01\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_289\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_294\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_293)\n    tag_294:\n      0x60\n      swap2\n      pop\n    tag_293:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15716:15718  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15357  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":1128:1349  function _update(... */\n    tag_263:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_302\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":1306:1342  super._update(from, to, ids, values) */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":1320:1324  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":1326:1328  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":1330:1333  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":1335:1341  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":1306:1319  super._update */\n      tag_305\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":1306:1342  super._update(from, to, ids, values) */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":1128:1349  function _update(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_313\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_147\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_147\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_318\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_320\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_310)\n    tag_311:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_147\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_147\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_325\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_326)\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_327\n      swap3\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_329:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_330:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_331:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_332:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_333:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_405\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_332\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_334:\n        /* \"#utility.yul\":641:665   */\n      tag_407\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_333\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_408:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_335:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_410\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_334\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_336:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_337:\n        /* \"#utility.yul\":997:1021   */\n      tag_413\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_336\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_414:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_338:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_416\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_337\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_25:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_419\n      tag_330\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1290:1409   */\n    tag_418:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_420\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_335\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_421\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_338\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_339:\n        /* \"#utility.yul\":1764:1788   */\n      tag_423\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_336\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_28:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_425\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_339\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_340:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_341:\n        /* \"#utility.yul\":2256:2279   */\n      tag_428\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_340\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_429:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_342:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_431\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_341\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_31:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_434\n      tag_330\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":2528:2647   */\n    tag_433:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_435\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_342\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_343:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_344:\n        /* \"#utility.yul\":2963:2984   */\n      tag_438\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_343\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_34:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_440\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_344\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3330   */\n    tag_345:\n        /* \"#utility.yul\":3322:3323   */\n      0x00\n        /* \"#utility.yul\":3319:3320   */\n      dup1\n        /* \"#utility.yul\":3312:3324   */\n      revert\n        /* \"#utility.yul\":3336:3453   */\n    tag_346:\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3442:3443   */\n      dup1\n        /* \"#utility.yul\":3435:3447   */\n      revert\n        /* \"#utility.yul\":3459:3561   */\n    tag_347:\n        /* \"#utility.yul\":3500:3506   */\n      0x00\n        /* \"#utility.yul\":3551:3553   */\n      0x1f\n        /* \"#utility.yul\":3547:3554   */\n      not\n        /* \"#utility.yul\":3542:3544   */\n      0x1f\n        /* \"#utility.yul\":3535:3540   */\n      dup4\n        /* \"#utility.yul\":3531:3545   */\n      add\n        /* \"#utility.yul\":3527:3555   */\n      and\n        /* \"#utility.yul\":3517:3555   */\n      swap1\n      pop\n        /* \"#utility.yul\":3459:3561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3567:3747   */\n    tag_138:\n        /* \"#utility.yul\":3615:3692   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3612:3613   */\n      0x00\n        /* \"#utility.yul\":3605:3693   */\n      mstore\n        /* \"#utility.yul\":3712:3716   */\n      0x41\n        /* \"#utility.yul\":3709:3710   */\n      0x04\n        /* \"#utility.yul\":3702:3717   */\n      mstore\n        /* \"#utility.yul\":3736:3740   */\n      0x24\n        /* \"#utility.yul\":3733:3734   */\n      0x00\n        /* \"#utility.yul\":3726:3741   */\n      revert\n        /* \"#utility.yul\":3753:4034   */\n    tag_348:\n        /* \"#utility.yul\":3836:3863   */\n      tag_446\n        /* \"#utility.yul\":3858:3862   */\n      dup3\n        /* \"#utility.yul\":3836:3863   */\n      tag_347\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3828:3834   */\n      dup2\n        /* \"#utility.yul\":3824:3864   */\n      add\n        /* \"#utility.yul\":3966:3972   */\n      dup2\n        /* \"#utility.yul\":3954:3964   */\n      dup2\n        /* \"#utility.yul\":3951:3973   */\n      lt\n        /* \"#utility.yul\":3930:3948   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3918:3928   */\n      dup3\n        /* \"#utility.yul\":3915:3949   */\n      gt\n        /* \"#utility.yul\":3912:3974   */\n      or\n        /* \"#utility.yul\":3909:3997   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":3977:3995   */\n      tag_448\n      tag_138\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":3909:3997   */\n    tag_447:\n        /* \"#utility.yul\":4017:4027   */\n      dup1\n        /* \"#utility.yul\":4013:4015   */\n      0x40\n        /* \"#utility.yul\":4006:4028   */\n      mstore\n        /* \"#utility.yul\":3796:4034   */\n      pop\n        /* \"#utility.yul\":3753:4034   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4040:4169   */\n    tag_349:\n        /* \"#utility.yul\":4074:4080   */\n      0x00\n        /* \"#utility.yul\":4101:4121   */\n      tag_450\n      tag_329\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4091:4121   */\n      swap1\n      pop\n        /* \"#utility.yul\":4130:4163   */\n      tag_451\n        /* \"#utility.yul\":4158:4162   */\n      dup3\n        /* \"#utility.yul\":4150:4156   */\n      dup3\n        /* \"#utility.yul\":4130:4163   */\n      tag_348\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4040:4169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4175:4483   */\n    tag_350:\n        /* \"#utility.yul\":4237:4241   */\n      0x00\n        /* \"#utility.yul\":4327:4345   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4319:4325   */\n      dup3\n        /* \"#utility.yul\":4316:4346   */\n      gt\n        /* \"#utility.yul\":4313:4369   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":4349:4367   */\n      tag_454\n      tag_138\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":4313:4369   */\n    tag_453:\n        /* \"#utility.yul\":4387:4416   */\n      tag_455\n        /* \"#utility.yul\":4409:4415   */\n      dup3\n        /* \"#utility.yul\":4387:4416   */\n      tag_347\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":4379:4416   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4475   */\n      0x20\n        /* \"#utility.yul\":4465:4469   */\n      dup2\n        /* \"#utility.yul\":4461:4476   */\n      add\n        /* \"#utility.yul\":4453:4476   */\n      swap1\n      pop\n        /* \"#utility.yul\":4175:4483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4489:4637   */\n    tag_351:\n        /* \"#utility.yul\":4587:4593   */\n      dup3\n        /* \"#utility.yul\":4582:4585   */\n      dup2\n        /* \"#utility.yul\":4577:4580   */\n      dup4\n        /* \"#utility.yul\":4564:4594   */\n      calldatacopy\n        /* \"#utility.yul\":4628:4629   */\n      0x00\n        /* \"#utility.yul\":4619:4625   */\n      dup4\n        /* \"#utility.yul\":4614:4617   */\n      dup4\n        /* \"#utility.yul\":4610:4626   */\n      add\n        /* \"#utility.yul\":4603:4630   */\n      mstore\n        /* \"#utility.yul\":4489:4637   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4643:5068   */\n    tag_352:\n        /* \"#utility.yul\":4721:4726   */\n      0x00\n        /* \"#utility.yul\":4746:4812   */\n      tag_458\n        /* \"#utility.yul\":4762:4811   */\n      tag_459\n        /* \"#utility.yul\":4804:4810   */\n      dup5\n        /* \"#utility.yul\":4762:4811   */\n      tag_350\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":4746:4812   */\n      tag_349\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":4737:4812   */\n      swap1\n      pop\n        /* \"#utility.yul\":4835:4841   */\n      dup3\n        /* \"#utility.yul\":4828:4833   */\n      dup2\n        /* \"#utility.yul\":4821:4842   */\n      mstore\n        /* \"#utility.yul\":4873:4877   */\n      0x20\n        /* \"#utility.yul\":4866:4871   */\n      dup2\n        /* \"#utility.yul\":4862:4878   */\n      add\n        /* \"#utility.yul\":4911:4914   */\n      dup5\n        /* \"#utility.yul\":4902:4908   */\n      dup5\n        /* \"#utility.yul\":4897:4900   */\n      dup5\n        /* \"#utility.yul\":4893:4909   */\n      add\n        /* \"#utility.yul\":4890:4915   */\n      gt\n        /* \"#utility.yul\":4887:4999   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":4918:4997   */\n      tag_461\n      tag_346\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":4887:4999   */\n    tag_460:\n        /* \"#utility.yul\":5008:5062   */\n      tag_462\n        /* \"#utility.yul\":5055:5061   */\n      dup5\n        /* \"#utility.yul\":5050:5053   */\n      dup3\n        /* \"#utility.yul\":5045:5048   */\n      dup6\n        /* \"#utility.yul\":5008:5062   */\n      tag_351\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":4727:5068   */\n      pop\n        /* \"#utility.yul\":4643:5068   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5088:5428   */\n    tag_353:\n        /* \"#utility.yul\":5144:5149   */\n      0x00\n        /* \"#utility.yul\":5193:5196   */\n      dup3\n        /* \"#utility.yul\":5186:5190   */\n      0x1f\n        /* \"#utility.yul\":5178:5184   */\n      dup4\n        /* \"#utility.yul\":5174:5191   */\n      add\n        /* \"#utility.yul\":5170:5197   */\n      slt\n        /* \"#utility.yul\":5160:5282   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":5201:5280   */\n      tag_465\n      tag_345\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5160:5282   */\n    tag_464:\n        /* \"#utility.yul\":5318:5324   */\n      dup2\n        /* \"#utility.yul\":5305:5325   */\n      calldataload\n        /* \"#utility.yul\":5343:5422   */\n      tag_466\n        /* \"#utility.yul\":5418:5421   */\n      dup5\n        /* \"#utility.yul\":5410:5416   */\n      dup3\n        /* \"#utility.yul\":5403:5407   */\n      0x20\n        /* \"#utility.yul\":5395:5401   */\n      dup7\n        /* \"#utility.yul\":5391:5408   */\n      add\n        /* \"#utility.yul\":5343:5422   */\n      tag_352\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5334:5422   */\n      swap2\n      pop\n        /* \"#utility.yul\":5150:5428   */\n      pop\n        /* \"#utility.yul\":5088:5428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5434:5943   */\n    tag_37:\n        /* \"#utility.yul\":5503:5509   */\n      0x00\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"#utility.yul\":5540:5549   */\n      dup3\n        /* \"#utility.yul\":5531:5538   */\n      dup5\n        /* \"#utility.yul\":5527:5550   */\n      sub\n        /* \"#utility.yul\":5523:5555   */\n      slt\n        /* \"#utility.yul\":5520:5639   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":5558:5637   */\n      tag_469\n      tag_330\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":5520:5639   */\n    tag_468:\n        /* \"#utility.yul\":5706:5707   */\n      0x00\n        /* \"#utility.yul\":5695:5704   */\n      dup3\n        /* \"#utility.yul\":5691:5708   */\n      add\n        /* \"#utility.yul\":5678:5709   */\n      calldataload\n        /* \"#utility.yul\":5736:5754   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5728:5734   */\n      dup2\n        /* \"#utility.yul\":5725:5755   */\n      gt\n        /* \"#utility.yul\":5722:5839   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":5758:5837   */\n      tag_471\n      tag_331\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":5722:5839   */\n    tag_470:\n        /* \"#utility.yul\":5863:5926   */\n      tag_472\n        /* \"#utility.yul\":5918:5925   */\n      dup5\n        /* \"#utility.yul\":5909:5915   */\n      dup3\n        /* \"#utility.yul\":5898:5907   */\n      dup6\n        /* \"#utility.yul\":5894:5916   */\n      add\n        /* \"#utility.yul\":5863:5926   */\n      tag_353\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":5853:5926   */\n      swap2\n      pop\n        /* \"#utility.yul\":5649:5936   */\n      pop\n        /* \"#utility.yul\":5434:5943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5949:6278   */\n    tag_41:\n        /* \"#utility.yul\":6008:6014   */\n      0x00\n        /* \"#utility.yul\":6057:6059   */\n      0x20\n        /* \"#utility.yul\":6045:6054   */\n      dup3\n        /* \"#utility.yul\":6036:6043   */\n      dup5\n        /* \"#utility.yul\":6032:6055   */\n      sub\n        /* \"#utility.yul\":6028:6060   */\n      slt\n        /* \"#utility.yul\":6025:6144   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":6063:6142   */\n      tag_475\n      tag_330\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6025:6144   */\n    tag_474:\n        /* \"#utility.yul\":6183:6184   */\n      0x00\n        /* \"#utility.yul\":6208:6261   */\n      tag_476\n        /* \"#utility.yul\":6253:6260   */\n      dup5\n        /* \"#utility.yul\":6244:6250   */\n      dup3\n        /* \"#utility.yul\":6233:6242   */\n      dup6\n        /* \"#utility.yul\":6229:6251   */\n      add\n        /* \"#utility.yul\":6208:6261   */\n      tag_338\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6198:6261   */\n      swap2\n      pop\n        /* \"#utility.yul\":6154:6271   */\n      pop\n        /* \"#utility.yul\":5949:6278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6284:6383   */\n    tag_354:\n        /* \"#utility.yul\":6336:6342   */\n      0x00\n        /* \"#utility.yul\":6370:6375   */\n      dup2\n        /* \"#utility.yul\":6364:6376   */\n      mload\n        /* \"#utility.yul\":6354:6376   */\n      swap1\n      pop\n        /* \"#utility.yul\":6284:6383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6389:6558   */\n    tag_355:\n        /* \"#utility.yul\":6473:6484   */\n      0x00\n        /* \"#utility.yul\":6507:6513   */\n      dup3\n        /* \"#utility.yul\":6502:6505   */\n      dup3\n        /* \"#utility.yul\":6495:6514   */\n      mstore\n        /* \"#utility.yul\":6547:6551   */\n      0x20\n        /* \"#utility.yul\":6542:6545   */\n      dup3\n        /* \"#utility.yul\":6538:6552   */\n      add\n        /* \"#utility.yul\":6523:6552   */\n      swap1\n      pop\n        /* \"#utility.yul\":6389:6558   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6564:6703   */\n    tag_356:\n        /* \"#utility.yul\":6653:6659   */\n      dup3\n        /* \"#utility.yul\":6648:6651   */\n      dup2\n        /* \"#utility.yul\":6643:6646   */\n      dup4\n        /* \"#utility.yul\":6637:6660   */\n      mcopy\n        /* \"#utility.yul\":6694:6695   */\n      0x00\n        /* \"#utility.yul\":6685:6691   */\n      dup4\n        /* \"#utility.yul\":6680:6683   */\n      dup4\n        /* \"#utility.yul\":6676:6692   */\n      add\n        /* \"#utility.yul\":6669:6696   */\n      mstore\n        /* \"#utility.yul\":6564:6703   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6709:7086   */\n    tag_357:\n        /* \"#utility.yul\":6797:6800   */\n      0x00\n        /* \"#utility.yul\":6825:6864   */\n      tag_481\n        /* \"#utility.yul\":6858:6863   */\n      dup3\n        /* \"#utility.yul\":6825:6864   */\n      tag_354\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":6880:6951   */\n      tag_482\n        /* \"#utility.yul\":6944:6950   */\n      dup2\n        /* \"#utility.yul\":6939:6942   */\n      dup6\n        /* \"#utility.yul\":6880:6951   */\n      tag_355\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":6873:6951   */\n      swap4\n      pop\n        /* \"#utility.yul\":6960:7025   */\n      tag_483\n        /* \"#utility.yul\":7018:7024   */\n      dup2\n        /* \"#utility.yul\":7013:7016   */\n      dup6\n        /* \"#utility.yul\":7006:7010   */\n      0x20\n        /* \"#utility.yul\":6999:7004   */\n      dup7\n        /* \"#utility.yul\":6995:7011   */\n      add\n        /* \"#utility.yul\":6960:7025   */\n      tag_356\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":7050:7079   */\n      tag_484\n        /* \"#utility.yul\":7072:7078   */\n      dup2\n        /* \"#utility.yul\":7050:7079   */\n      tag_347\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7045:7048   */\n      dup5\n        /* \"#utility.yul\":7041:7080   */\n      add\n        /* \"#utility.yul\":7034:7080   */\n      swap2\n      pop\n        /* \"#utility.yul\":6801:7086   */\n      pop\n        /* \"#utility.yul\":6709:7086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7092:7405   */\n    tag_44:\n        /* \"#utility.yul\":7205:7209   */\n      0x00\n        /* \"#utility.yul\":7243:7245   */\n      0x20\n        /* \"#utility.yul\":7232:7241   */\n      dup3\n        /* \"#utility.yul\":7228:7246   */\n      add\n        /* \"#utility.yul\":7220:7246   */\n      swap1\n      pop\n        /* \"#utility.yul\":7292:7301   */\n      dup2\n        /* \"#utility.yul\":7286:7290   */\n      dup2\n        /* \"#utility.yul\":7282:7302   */\n      sub\n        /* \"#utility.yul\":7278:7279   */\n      0x00\n        /* \"#utility.yul\":7267:7276   */\n      dup4\n        /* \"#utility.yul\":7263:7280   */\n      add\n        /* \"#utility.yul\":7256:7303   */\n      mstore\n        /* \"#utility.yul\":7320:7398   */\n      tag_486\n        /* \"#utility.yul\":7393:7397   */\n      dup2\n        /* \"#utility.yul\":7384:7390   */\n      dup5\n        /* \"#utility.yul\":7320:7398   */\n      tag_357\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":7312:7398   */\n      swap1\n      pop\n        /* \"#utility.yul\":7092:7405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7411:7722   */\n    tag_358:\n        /* \"#utility.yul\":7488:7492   */\n      0x00\n        /* \"#utility.yul\":7578:7596   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7570:7576   */\n      dup3\n        /* \"#utility.yul\":7567:7597   */\n      gt\n        /* \"#utility.yul\":7564:7620   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":7600:7618   */\n      tag_489\n      tag_138\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":7564:7620   */\n    tag_488:\n        /* \"#utility.yul\":7650:7654   */\n      0x20\n        /* \"#utility.yul\":7642:7648   */\n      dup3\n        /* \"#utility.yul\":7638:7655   */\n      mul\n        /* \"#utility.yul\":7630:7655   */\n      swap1\n      pop\n        /* \"#utility.yul\":7710:7714   */\n      0x20\n        /* \"#utility.yul\":7704:7708   */\n      dup2\n        /* \"#utility.yul\":7700:7715   */\n      add\n        /* \"#utility.yul\":7692:7715   */\n      swap1\n      pop\n        /* \"#utility.yul\":7411:7722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7728:7845   */\n    tag_359:\n        /* \"#utility.yul\":7837:7838   */\n      0x00\n        /* \"#utility.yul\":7834:7835   */\n      dup1\n        /* \"#utility.yul\":7827:7839   */\n      revert\n        /* \"#utility.yul\":7868:8578   */\n    tag_360:\n        /* \"#utility.yul\":7964:7969   */\n      0x00\n        /* \"#utility.yul\":7989:8070   */\n      tag_492\n        /* \"#utility.yul\":8005:8069   */\n      tag_493\n        /* \"#utility.yul\":8062:8068   */\n      dup5\n        /* \"#utility.yul\":8005:8069   */\n      tag_358\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":7989:8070   */\n      tag_349\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":7980:8070   */\n      swap1\n      pop\n        /* \"#utility.yul\":8090:8095   */\n      dup1\n        /* \"#utility.yul\":8119:8125   */\n      dup4\n        /* \"#utility.yul\":8112:8117   */\n      dup3\n        /* \"#utility.yul\":8105:8126   */\n      mstore\n        /* \"#utility.yul\":8153:8157   */\n      0x20\n        /* \"#utility.yul\":8146:8151   */\n      dup3\n        /* \"#utility.yul\":8142:8158   */\n      add\n        /* \"#utility.yul\":8135:8158   */\n      swap1\n      pop\n        /* \"#utility.yul\":8206:8210   */\n      0x20\n        /* \"#utility.yul\":8198:8204   */\n      dup5\n        /* \"#utility.yul\":8194:8211   */\n      mul\n        /* \"#utility.yul\":8186:8192   */\n      dup4\n        /* \"#utility.yul\":8182:8212   */\n      add\n        /* \"#utility.yul\":8235:8238   */\n      dup6\n        /* \"#utility.yul\":8227:8233   */\n      dup2\n        /* \"#utility.yul\":8224:8239   */\n      gt\n        /* \"#utility.yul\":8221:8343   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":8254:8333   */\n      tag_495\n      tag_359\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8221:8343   */\n    tag_494:\n        /* \"#utility.yul\":8369:8375   */\n      dup4\n        /* \"#utility.yul\":8352:8572   */\n    tag_496:\n        /* \"#utility.yul\":8386:8392   */\n      dup2\n        /* \"#utility.yul\":8381:8384   */\n      dup2\n        /* \"#utility.yul\":8378:8393   */\n      lt\n        /* \"#utility.yul\":8352:8572   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":8461:8464   */\n      dup1\n        /* \"#utility.yul\":8490:8527   */\n      tag_499\n        /* \"#utility.yul\":8523:8526   */\n      dup9\n        /* \"#utility.yul\":8511:8521   */\n      dup3\n        /* \"#utility.yul\":8490:8527   */\n      tag_338\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8485:8488   */\n      dup5\n        /* \"#utility.yul\":8478:8528   */\n      mstore\n        /* \"#utility.yul\":8557:8561   */\n      0x20\n        /* \"#utility.yul\":8552:8555   */\n      dup5\n        /* \"#utility.yul\":8548:8562   */\n      add\n        /* \"#utility.yul\":8541:8562   */\n      swap4\n      pop\n        /* \"#utility.yul\":8428:8572   */\n      pop\n        /* \"#utility.yul\":8412:8416   */\n      0x20\n        /* \"#utility.yul\":8407:8410   */\n      dup2\n        /* \"#utility.yul\":8403:8417   */\n      add\n        /* \"#utility.yul\":8396:8417   */\n      swap1\n      pop\n        /* \"#utility.yul\":8352:8572   */\n      jump(tag_496)\n    tag_498:\n        /* \"#utility.yul\":8356:8377   */\n      pop\n        /* \"#utility.yul\":7970:8578   */\n      pop\n      pop\n        /* \"#utility.yul\":7868:8578   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8601:8971   */\n    tag_361:\n        /* \"#utility.yul\":8672:8677   */\n      0x00\n        /* \"#utility.yul\":8721:8724   */\n      dup3\n        /* \"#utility.yul\":8714:8718   */\n      0x1f\n        /* \"#utility.yul\":8706:8712   */\n      dup4\n        /* \"#utility.yul\":8702:8719   */\n      add\n        /* \"#utility.yul\":8698:8725   */\n      slt\n        /* \"#utility.yul\":8688:8810   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":8729:8808   */\n      tag_502\n      tag_345\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8688:8810   */\n    tag_501:\n        /* \"#utility.yul\":8846:8852   */\n      dup2\n        /* \"#utility.yul\":8833:8853   */\n      calldataload\n        /* \"#utility.yul\":8871:8965   */\n      tag_503\n        /* \"#utility.yul\":8961:8964   */\n      dup5\n        /* \"#utility.yul\":8953:8959   */\n      dup3\n        /* \"#utility.yul\":8946:8950   */\n      0x20\n        /* \"#utility.yul\":8938:8944   */\n      dup7\n        /* \"#utility.yul\":8934:8951   */\n      add\n        /* \"#utility.yul\":8871:8965   */\n      tag_360\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":8862:8965   */\n      swap2\n      pop\n        /* \"#utility.yul\":8678:8971   */\n      pop\n        /* \"#utility.yul\":8601:8971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8977:9284   */\n    tag_362:\n        /* \"#utility.yul\":9038:9042   */\n      0x00\n        /* \"#utility.yul\":9128:9146   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9120:9126   */\n      dup3\n        /* \"#utility.yul\":9117:9147   */\n      gt\n        /* \"#utility.yul\":9114:9170   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":9150:9168   */\n      tag_506\n      tag_138\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":9114:9170   */\n    tag_505:\n        /* \"#utility.yul\":9188:9217   */\n      tag_507\n        /* \"#utility.yul\":9210:9216   */\n      dup3\n        /* \"#utility.yul\":9188:9217   */\n      tag_347\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9180:9217   */\n      swap1\n      pop\n        /* \"#utility.yul\":9272:9276   */\n      0x20\n        /* \"#utility.yul\":9266:9270   */\n      dup2\n        /* \"#utility.yul\":9262:9277   */\n      add\n        /* \"#utility.yul\":9254:9277   */\n      swap1\n      pop\n        /* \"#utility.yul\":8977:9284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9290:9713   */\n    tag_363:\n        /* \"#utility.yul\":9367:9372   */\n      0x00\n        /* \"#utility.yul\":9392:9457   */\n      tag_509\n        /* \"#utility.yul\":9408:9456   */\n      tag_510\n        /* \"#utility.yul\":9449:9455   */\n      dup5\n        /* \"#utility.yul\":9408:9456   */\n      tag_362\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9392:9457   */\n      tag_349\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9383:9457   */\n      swap1\n      pop\n        /* \"#utility.yul\":9480:9486   */\n      dup3\n        /* \"#utility.yul\":9473:9478   */\n      dup2\n        /* \"#utility.yul\":9466:9487   */\n      mstore\n        /* \"#utility.yul\":9518:9522   */\n      0x20\n        /* \"#utility.yul\":9511:9516   */\n      dup2\n        /* \"#utility.yul\":9507:9523   */\n      add\n        /* \"#utility.yul\":9556:9559   */\n      dup5\n        /* \"#utility.yul\":9547:9553   */\n      dup5\n        /* \"#utility.yul\":9542:9545   */\n      dup5\n        /* \"#utility.yul\":9538:9554   */\n      add\n        /* \"#utility.yul\":9535:9560   */\n      gt\n        /* \"#utility.yul\":9532:9644   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":9563:9642   */\n      tag_512\n      tag_346\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":9532:9644   */\n    tag_511:\n        /* \"#utility.yul\":9653:9707   */\n      tag_513\n        /* \"#utility.yul\":9700:9706   */\n      dup5\n        /* \"#utility.yul\":9695:9698   */\n      dup3\n        /* \"#utility.yul\":9690:9693   */\n      dup6\n        /* \"#utility.yul\":9653:9707   */\n      tag_351\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":9373:9713   */\n      pop\n        /* \"#utility.yul\":9290:9713   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9732:10070   */\n    tag_364:\n        /* \"#utility.yul\":9787:9792   */\n      0x00\n        /* \"#utility.yul\":9836:9839   */\n      dup3\n        /* \"#utility.yul\":9829:9833   */\n      0x1f\n        /* \"#utility.yul\":9821:9827   */\n      dup4\n        /* \"#utility.yul\":9817:9834   */\n      add\n        /* \"#utility.yul\":9813:9840   */\n      slt\n        /* \"#utility.yul\":9803:9925   */\n      tag_515\n      jumpi\n        /* \"#utility.yul\":9844:9923   */\n      tag_516\n      tag_345\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":9803:9925   */\n    tag_515:\n        /* \"#utility.yul\":9961:9967   */\n      dup2\n        /* \"#utility.yul\":9948:9968   */\n      calldataload\n        /* \"#utility.yul\":9986:10064   */\n      tag_517\n        /* \"#utility.yul\":10060:10063   */\n      dup5\n        /* \"#utility.yul\":10052:10058   */\n      dup3\n        /* \"#utility.yul\":10045:10049   */\n      0x20\n        /* \"#utility.yul\":10037:10043   */\n      dup7\n        /* \"#utility.yul\":10033:10050   */\n      add\n        /* \"#utility.yul\":9986:10064   */\n      tag_363\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":9977:10064   */\n      swap2\n      pop\n        /* \"#utility.yul\":9793:10070   */\n      pop\n        /* \"#utility.yul\":9732:10070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10076:11439   */\n    tag_47:\n        /* \"#utility.yul\":10221:10227   */\n      0x00\n        /* \"#utility.yul\":10229:10235   */\n      dup1\n        /* \"#utility.yul\":10237:10243   */\n      0x00\n        /* \"#utility.yul\":10245:10251   */\n      dup1\n        /* \"#utility.yul\":10294:10297   */\n      0x80\n        /* \"#utility.yul\":10282:10291   */\n      dup6\n        /* \"#utility.yul\":10273:10280   */\n      dup8\n        /* \"#utility.yul\":10269:10292   */\n      sub\n        /* \"#utility.yul\":10265:10298   */\n      slt\n        /* \"#utility.yul\":10262:10382   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":10301:10380   */\n      tag_520\n      tag_330\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":10262:10382   */\n    tag_519:\n        /* \"#utility.yul\":10421:10422   */\n      0x00\n        /* \"#utility.yul\":10446:10499   */\n      tag_521\n        /* \"#utility.yul\":10491:10498   */\n      dup8\n        /* \"#utility.yul\":10482:10488   */\n      dup3\n        /* \"#utility.yul\":10471:10480   */\n      dup9\n        /* \"#utility.yul\":10467:10489   */\n      add\n        /* \"#utility.yul\":10446:10499   */\n      tag_335\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10436:10499   */\n      swap5\n      pop\n        /* \"#utility.yul\":10392:10509   */\n      pop\n        /* \"#utility.yul\":10576:10578   */\n      0x20\n        /* \"#utility.yul\":10565:10574   */\n      dup6\n        /* \"#utility.yul\":10561:10579   */\n      add\n        /* \"#utility.yul\":10548:10580   */\n      calldataload\n        /* \"#utility.yul\":10607:10625   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10599:10605   */\n      dup2\n        /* \"#utility.yul\":10596:10626   */\n      gt\n        /* \"#utility.yul\":10593:10710   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":10629:10708   */\n      tag_523\n      tag_331\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":10593:10710   */\n    tag_522:\n        /* \"#utility.yul\":10734:10812   */\n      tag_524\n        /* \"#utility.yul\":10804:10811   */\n      dup8\n        /* \"#utility.yul\":10795:10801   */\n      dup3\n        /* \"#utility.yul\":10784:10793   */\n      dup9\n        /* \"#utility.yul\":10780:10802   */\n      add\n        /* \"#utility.yul\":10734:10812   */\n      tag_361\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":10724:10812   */\n      swap4\n      pop\n        /* \"#utility.yul\":10519:10822   */\n      pop\n        /* \"#utility.yul\":10889:10891   */\n      0x40\n        /* \"#utility.yul\":10878:10887   */\n      dup6\n        /* \"#utility.yul\":10874:10892   */\n      add\n        /* \"#utility.yul\":10861:10893   */\n      calldataload\n        /* \"#utility.yul\":10920:10938   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10912:10918   */\n      dup2\n        /* \"#utility.yul\":10909:10939   */\n      gt\n        /* \"#utility.yul\":10906:11023   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":10942:11021   */\n      tag_526\n      tag_331\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":10906:11023   */\n    tag_525:\n        /* \"#utility.yul\":11047:11125   */\n      tag_527\n        /* \"#utility.yul\":11117:11124   */\n      dup8\n        /* \"#utility.yul\":11108:11114   */\n      dup3\n        /* \"#utility.yul\":11097:11106   */\n      dup9\n        /* \"#utility.yul\":11093:11115   */\n      add\n        /* \"#utility.yul\":11047:11125   */\n      tag_361\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":11037:11125   */\n      swap3\n      pop\n        /* \"#utility.yul\":10832:11135   */\n      pop\n        /* \"#utility.yul\":11202:11204   */\n      0x60\n        /* \"#utility.yul\":11191:11200   */\n      dup6\n        /* \"#utility.yul\":11187:11205   */\n      add\n        /* \"#utility.yul\":11174:11206   */\n      calldataload\n        /* \"#utility.yul\":11233:11251   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11225:11231   */\n      dup2\n        /* \"#utility.yul\":11222:11252   */\n      gt\n        /* \"#utility.yul\":11219:11336   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":11255:11334   */\n      tag_529\n      tag_331\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11219:11336   */\n    tag_528:\n        /* \"#utility.yul\":11360:11422   */\n      tag_530\n        /* \"#utility.yul\":11414:11421   */\n      dup8\n        /* \"#utility.yul\":11405:11411   */\n      dup3\n        /* \"#utility.yul\":11394:11403   */\n      dup9\n        /* \"#utility.yul\":11390:11412   */\n      add\n        /* \"#utility.yul\":11360:11422   */\n      tag_364\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":11350:11422   */\n      swap2\n      pop\n        /* \"#utility.yul\":11145:11432   */\n      pop\n        /* \"#utility.yul\":10076:11439   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11445:12954   */\n    tag_51:\n        /* \"#utility.yul\":11599:11605   */\n      0x00\n        /* \"#utility.yul\":11607:11613   */\n      dup1\n        /* \"#utility.yul\":11615:11621   */\n      0x00\n        /* \"#utility.yul\":11623:11629   */\n      dup1\n        /* \"#utility.yul\":11631:11637   */\n      0x00\n        /* \"#utility.yul\":11680:11683   */\n      0xa0\n        /* \"#utility.yul\":11668:11677   */\n      dup7\n        /* \"#utility.yul\":11659:11666   */\n      dup9\n        /* \"#utility.yul\":11655:11678   */\n      sub\n        /* \"#utility.yul\":11651:11684   */\n      slt\n        /* \"#utility.yul\":11648:11768   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":11687:11766   */\n      tag_533\n      tag_330\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":11648:11768   */\n    tag_532:\n        /* \"#utility.yul\":11807:11808   */\n      0x00\n        /* \"#utility.yul\":11832:11885   */\n      tag_534\n        /* \"#utility.yul\":11877:11884   */\n      dup9\n        /* \"#utility.yul\":11868:11874   */\n      dup3\n        /* \"#utility.yul\":11857:11866   */\n      dup10\n        /* \"#utility.yul\":11853:11875   */\n      add\n        /* \"#utility.yul\":11832:11885   */\n      tag_335\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":11822:11885   */\n      swap6\n      pop\n        /* \"#utility.yul\":11778:11895   */\n      pop\n        /* \"#utility.yul\":11934:11936   */\n      0x20\n        /* \"#utility.yul\":11960:12013   */\n      tag_535\n        /* \"#utility.yul\":12005:12012   */\n      dup9\n        /* \"#utility.yul\":11996:12002   */\n      dup3\n        /* \"#utility.yul\":11985:11994   */\n      dup10\n        /* \"#utility.yul\":11981:12003   */\n      add\n        /* \"#utility.yul\":11960:12013   */\n      tag_335\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":11950:12013   */\n      swap5\n      pop\n        /* \"#utility.yul\":11905:12023   */\n      pop\n        /* \"#utility.yul\":12090:12092   */\n      0x40\n        /* \"#utility.yul\":12079:12088   */\n      dup7\n        /* \"#utility.yul\":12075:12093   */\n      add\n        /* \"#utility.yul\":12062:12094   */\n      calldataload\n        /* \"#utility.yul\":12121:12139   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12113:12119   */\n      dup2\n        /* \"#utility.yul\":12110:12140   */\n      gt\n        /* \"#utility.yul\":12107:12224   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":12143:12222   */\n      tag_537\n      tag_331\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":12107:12224   */\n    tag_536:\n        /* \"#utility.yul\":12248:12326   */\n      tag_538\n        /* \"#utility.yul\":12318:12325   */\n      dup9\n        /* \"#utility.yul\":12309:12315   */\n      dup3\n        /* \"#utility.yul\":12298:12307   */\n      dup10\n        /* \"#utility.yul\":12294:12316   */\n      add\n        /* \"#utility.yul\":12248:12326   */\n      tag_361\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":12238:12326   */\n      swap4\n      pop\n        /* \"#utility.yul\":12033:12336   */\n      pop\n        /* \"#utility.yul\":12403:12405   */\n      0x60\n        /* \"#utility.yul\":12392:12401   */\n      dup7\n        /* \"#utility.yul\":12388:12406   */\n      add\n        /* \"#utility.yul\":12375:12407   */\n      calldataload\n        /* \"#utility.yul\":12434:12452   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12426:12432   */\n      dup2\n        /* \"#utility.yul\":12423:12453   */\n      gt\n        /* \"#utility.yul\":12420:12537   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":12456:12535   */\n      tag_540\n      tag_331\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":12420:12537   */\n    tag_539:\n        /* \"#utility.yul\":12561:12639   */\n      tag_541\n        /* \"#utility.yul\":12631:12638   */\n      dup9\n        /* \"#utility.yul\":12622:12628   */\n      dup3\n        /* \"#utility.yul\":12611:12620   */\n      dup10\n        /* \"#utility.yul\":12607:12629   */\n      add\n        /* \"#utility.yul\":12561:12639   */\n      tag_361\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":12551:12639   */\n      swap3\n      pop\n        /* \"#utility.yul\":12346:12649   */\n      pop\n        /* \"#utility.yul\":12716:12719   */\n      0x80\n        /* \"#utility.yul\":12705:12714   */\n      dup7\n        /* \"#utility.yul\":12701:12720   */\n      add\n        /* \"#utility.yul\":12688:12721   */\n      calldataload\n        /* \"#utility.yul\":12748:12766   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12740:12746   */\n      dup2\n        /* \"#utility.yul\":12737:12767   */\n      gt\n        /* \"#utility.yul\":12734:12851   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":12770:12849   */\n      tag_543\n      tag_331\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":12734:12851   */\n    tag_542:\n        /* \"#utility.yul\":12875:12937   */\n      tag_544\n        /* \"#utility.yul\":12929:12936   */\n      dup9\n        /* \"#utility.yul\":12920:12926   */\n      dup3\n        /* \"#utility.yul\":12909:12918   */\n      dup10\n        /* \"#utility.yul\":12905:12927   */\n      add\n        /* \"#utility.yul\":12875:12937   */\n      tag_364\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":12865:12937   */\n      swap2\n      pop\n        /* \"#utility.yul\":12659:12947   */\n      pop\n        /* \"#utility.yul\":11445:12954   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12960:13271   */\n    tag_365:\n        /* \"#utility.yul\":13037:13041   */\n      0x00\n        /* \"#utility.yul\":13127:13145   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13119:13125   */\n      dup3\n        /* \"#utility.yul\":13116:13146   */\n      gt\n        /* \"#utility.yul\":13113:13169   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":13149:13167   */\n      tag_547\n      tag_138\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13113:13169   */\n    tag_546:\n        /* \"#utility.yul\":13199:13203   */\n      0x20\n        /* \"#utility.yul\":13191:13197   */\n      dup3\n        /* \"#utility.yul\":13187:13204   */\n      mul\n        /* \"#utility.yul\":13179:13204   */\n      swap1\n      pop\n        /* \"#utility.yul\":13259:13263   */\n      0x20\n        /* \"#utility.yul\":13253:13257   */\n      dup2\n        /* \"#utility.yul\":13249:13264   */\n      add\n        /* \"#utility.yul\":13241:13264   */\n      swap1\n      pop\n        /* \"#utility.yul\":12960:13271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13294:14004   */\n    tag_366:\n        /* \"#utility.yul\":13390:13395   */\n      0x00\n        /* \"#utility.yul\":13415:13496   */\n      tag_549\n        /* \"#utility.yul\":13431:13495   */\n      tag_550\n        /* \"#utility.yul\":13488:13494   */\n      dup5\n        /* \"#utility.yul\":13431:13495   */\n      tag_365\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13415:13496   */\n      tag_349\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13406:13496   */\n      swap1\n      pop\n        /* \"#utility.yul\":13516:13521   */\n      dup1\n        /* \"#utility.yul\":13545:13551   */\n      dup4\n        /* \"#utility.yul\":13538:13543   */\n      dup3\n        /* \"#utility.yul\":13531:13552   */\n      mstore\n        /* \"#utility.yul\":13579:13583   */\n      0x20\n        /* \"#utility.yul\":13572:13577   */\n      dup3\n        /* \"#utility.yul\":13568:13584   */\n      add\n        /* \"#utility.yul\":13561:13584   */\n      swap1\n      pop\n        /* \"#utility.yul\":13632:13636   */\n      0x20\n        /* \"#utility.yul\":13624:13630   */\n      dup5\n        /* \"#utility.yul\":13620:13637   */\n      mul\n        /* \"#utility.yul\":13612:13618   */\n      dup4\n        /* \"#utility.yul\":13608:13638   */\n      add\n        /* \"#utility.yul\":13661:13664   */\n      dup6\n        /* \"#utility.yul\":13653:13659   */\n      dup2\n        /* \"#utility.yul\":13650:13665   */\n      gt\n        /* \"#utility.yul\":13647:13769   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":13680:13759   */\n      tag_552\n      tag_359\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":13647:13769   */\n    tag_551:\n        /* \"#utility.yul\":13795:13801   */\n      dup4\n        /* \"#utility.yul\":13778:13998   */\n    tag_553:\n        /* \"#utility.yul\":13812:13818   */\n      dup2\n        /* \"#utility.yul\":13807:13810   */\n      dup2\n        /* \"#utility.yul\":13804:13819   */\n      lt\n        /* \"#utility.yul\":13778:13998   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":13887:13890   */\n      dup1\n        /* \"#utility.yul\":13916:13953   */\n      tag_556\n        /* \"#utility.yul\":13949:13952   */\n      dup9\n        /* \"#utility.yul\":13937:13947   */\n      dup3\n        /* \"#utility.yul\":13916:13953   */\n      tag_335\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":13911:13914   */\n      dup5\n        /* \"#utility.yul\":13904:13954   */\n      mstore\n        /* \"#utility.yul\":13983:13987   */\n      0x20\n        /* \"#utility.yul\":13978:13981   */\n      dup5\n        /* \"#utility.yul\":13974:13988   */\n      add\n        /* \"#utility.yul\":13967:13988   */\n      swap4\n      pop\n        /* \"#utility.yul\":13854:13998   */\n      pop\n        /* \"#utility.yul\":13838:13842   */\n      0x20\n        /* \"#utility.yul\":13833:13836   */\n      dup2\n        /* \"#utility.yul\":13829:13843   */\n      add\n        /* \"#utility.yul\":13822:13843   */\n      swap1\n      pop\n        /* \"#utility.yul\":13778:13998   */\n      jump(tag_553)\n    tag_555:\n        /* \"#utility.yul\":13782:13803   */\n      pop\n        /* \"#utility.yul\":13396:14004   */\n      pop\n      pop\n        /* \"#utility.yul\":13294:14004   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14027:14397   */\n    tag_367:\n        /* \"#utility.yul\":14098:14103   */\n      0x00\n        /* \"#utility.yul\":14147:14150   */\n      dup3\n        /* \"#utility.yul\":14140:14144   */\n      0x1f\n        /* \"#utility.yul\":14132:14138   */\n      dup4\n        /* \"#utility.yul\":14128:14145   */\n      add\n        /* \"#utility.yul\":14124:14151   */\n      slt\n        /* \"#utility.yul\":14114:14236   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":14155:14234   */\n      tag_559\n      tag_345\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":14114:14236   */\n    tag_558:\n        /* \"#utility.yul\":14272:14278   */\n      dup2\n        /* \"#utility.yul\":14259:14279   */\n      calldataload\n        /* \"#utility.yul\":14297:14391   */\n      tag_560\n        /* \"#utility.yul\":14387:14390   */\n      dup5\n        /* \"#utility.yul\":14379:14385   */\n      dup3\n        /* \"#utility.yul\":14372:14376   */\n      0x20\n        /* \"#utility.yul\":14364:14370   */\n      dup7\n        /* \"#utility.yul\":14360:14377   */\n      add\n        /* \"#utility.yul\":14297:14391   */\n      tag_366\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14288:14391   */\n      swap2\n      pop\n        /* \"#utility.yul\":14104:14397   */\n      pop\n        /* \"#utility.yul\":14027:14397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14403:15297   */\n    tag_57:\n        /* \"#utility.yul\":14521:14527   */\n      0x00\n        /* \"#utility.yul\":14529:14535   */\n      dup1\n        /* \"#utility.yul\":14578:14580   */\n      0x40\n        /* \"#utility.yul\":14566:14575   */\n      dup4\n        /* \"#utility.yul\":14557:14564   */\n      dup6\n        /* \"#utility.yul\":14553:14576   */\n      sub\n        /* \"#utility.yul\":14549:14581   */\n      slt\n        /* \"#utility.yul\":14546:14665   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":14584:14663   */\n      tag_563\n      tag_330\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":14546:14665   */\n    tag_562:\n        /* \"#utility.yul\":14732:14733   */\n      0x00\n        /* \"#utility.yul\":14721:14730   */\n      dup4\n        /* \"#utility.yul\":14717:14734   */\n      add\n        /* \"#utility.yul\":14704:14735   */\n      calldataload\n        /* \"#utility.yul\":14762:14780   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14754:14760   */\n      dup2\n        /* \"#utility.yul\":14751:14781   */\n      gt\n        /* \"#utility.yul\":14748:14865   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":14784:14863   */\n      tag_565\n      tag_331\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":14748:14865   */\n    tag_564:\n        /* \"#utility.yul\":14889:14967   */\n      tag_566\n        /* \"#utility.yul\":14959:14966   */\n      dup6\n        /* \"#utility.yul\":14950:14956   */\n      dup3\n        /* \"#utility.yul\":14939:14948   */\n      dup7\n        /* \"#utility.yul\":14935:14957   */\n      add\n        /* \"#utility.yul\":14889:14967   */\n      tag_367\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":14879:14967   */\n      swap3\n      pop\n        /* \"#utility.yul\":14675:14977   */\n      pop\n        /* \"#utility.yul\":15044:15046   */\n      0x20\n        /* \"#utility.yul\":15033:15042   */\n      dup4\n        /* \"#utility.yul\":15029:15047   */\n      add\n        /* \"#utility.yul\":15016:15048   */\n      calldataload\n        /* \"#utility.yul\":15075:15093   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15067:15073   */\n      dup2\n        /* \"#utility.yul\":15064:15094   */\n      gt\n        /* \"#utility.yul\":15061:15178   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":15097:15176   */\n      tag_568\n      tag_331\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":15061:15178   */\n    tag_567:\n        /* \"#utility.yul\":15202:15280   */\n      tag_569\n        /* \"#utility.yul\":15272:15279   */\n      dup6\n        /* \"#utility.yul\":15263:15269   */\n      dup3\n        /* \"#utility.yul\":15252:15261   */\n      dup7\n        /* \"#utility.yul\":15248:15270   */\n      add\n        /* \"#utility.yul\":15202:15280   */\n      tag_361\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":15192:15280   */\n      swap2\n      pop\n        /* \"#utility.yul\":14987:15290   */\n      pop\n        /* \"#utility.yul\":14403:15297   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15303:15417   */\n    tag_368:\n        /* \"#utility.yul\":15370:15376   */\n      0x00\n        /* \"#utility.yul\":15404:15409   */\n      dup2\n        /* \"#utility.yul\":15398:15410   */\n      mload\n        /* \"#utility.yul\":15388:15410   */\n      swap1\n      pop\n        /* \"#utility.yul\":15303:15417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15423:15607   */\n    tag_369:\n        /* \"#utility.yul\":15522:15533   */\n      0x00\n        /* \"#utility.yul\":15556:15562   */\n      dup3\n        /* \"#utility.yul\":15551:15554   */\n      dup3\n        /* \"#utility.yul\":15544:15563   */\n      mstore\n        /* \"#utility.yul\":15596:15600   */\n      0x20\n        /* \"#utility.yul\":15591:15594   */\n      dup3\n        /* \"#utility.yul\":15587:15601   */\n      add\n        /* \"#utility.yul\":15572:15601   */\n      swap1\n      pop\n        /* \"#utility.yul\":15423:15607   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15613:15745   */\n    tag_370:\n        /* \"#utility.yul\":15680:15684   */\n      0x00\n        /* \"#utility.yul\":15703:15706   */\n      dup2\n        /* \"#utility.yul\":15695:15706   */\n      swap1\n      pop\n        /* \"#utility.yul\":15733:15737   */\n      0x20\n        /* \"#utility.yul\":15728:15731   */\n      dup3\n        /* \"#utility.yul\":15724:15738   */\n      add\n        /* \"#utility.yul\":15716:15738   */\n      swap1\n      pop\n        /* \"#utility.yul\":15613:15745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15751:15859   */\n    tag_371:\n        /* \"#utility.yul\":15828:15852   */\n      tag_574\n        /* \"#utility.yul\":15846:15851   */\n      dup2\n        /* \"#utility.yul\":15828:15852   */\n      tag_336\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":15823:15826   */\n      dup3\n        /* \"#utility.yul\":15816:15853   */\n      mstore\n        /* \"#utility.yul\":15751:15859   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15865:16044   */\n    tag_372:\n        /* \"#utility.yul\":15934:15944   */\n      0x00\n        /* \"#utility.yul\":15955:16001   */\n      tag_576\n        /* \"#utility.yul\":15997:16000   */\n      dup4\n        /* \"#utility.yul\":15989:15995   */\n      dup4\n        /* \"#utility.yul\":15955:16001   */\n      tag_371\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":16033:16037   */\n      0x20\n        /* \"#utility.yul\":16028:16031   */\n      dup4\n        /* \"#utility.yul\":16024:16038   */\n      add\n        /* \"#utility.yul\":16010:16038   */\n      swap1\n      pop\n        /* \"#utility.yul\":15865:16044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16050:16163   */\n    tag_373:\n        /* \"#utility.yul\":16120:16124   */\n      0x00\n        /* \"#utility.yul\":16152:16156   */\n      0x20\n        /* \"#utility.yul\":16147:16150   */\n      dup3\n        /* \"#utility.yul\":16143:16157   */\n      add\n        /* \"#utility.yul\":16135:16157   */\n      swap1\n      pop\n        /* \"#utility.yul\":16050:16163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16199:16931   */\n    tag_374:\n        /* \"#utility.yul\":16318:16321   */\n      0x00\n        /* \"#utility.yul\":16347:16401   */\n      tag_579\n        /* \"#utility.yul\":16395:16400   */\n      dup3\n        /* \"#utility.yul\":16347:16401   */\n      tag_368\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":16417:16503   */\n      tag_580\n        /* \"#utility.yul\":16496:16502   */\n      dup2\n        /* \"#utility.yul\":16491:16494   */\n      dup6\n        /* \"#utility.yul\":16417:16503   */\n      tag_369\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":16410:16503   */\n      swap4\n      pop\n        /* \"#utility.yul\":16527:16583   */\n      tag_581\n        /* \"#utility.yul\":16577:16582   */\n      dup4\n        /* \"#utility.yul\":16527:16583   */\n      tag_370\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":16606:16613   */\n      dup1\n        /* \"#utility.yul\":16637:16638   */\n      0x00\n        /* \"#utility.yul\":16622:16906   */\n    tag_582:\n        /* \"#utility.yul\":16647:16653   */\n      dup4\n        /* \"#utility.yul\":16644:16645   */\n      dup2\n        /* \"#utility.yul\":16641:16654   */\n      lt\n        /* \"#utility.yul\":16622:16906   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":16723:16729   */\n      dup2\n        /* \"#utility.yul\":16717:16730   */\n      mload\n        /* \"#utility.yul\":16750:16813   */\n      tag_585\n        /* \"#utility.yul\":16809:16812   */\n      dup9\n        /* \"#utility.yul\":16794:16807   */\n      dup3\n        /* \"#utility.yul\":16750:16813   */\n      tag_372\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":16743:16813   */\n      swap8\n      pop\n        /* \"#utility.yul\":16836:16896   */\n      tag_586\n        /* \"#utility.yul\":16889:16895   */\n      dup4\n        /* \"#utility.yul\":16836:16896   */\n      tag_373\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":16826:16896   */\n      swap3\n      pop\n        /* \"#utility.yul\":16682:16906   */\n      pop\n        /* \"#utility.yul\":16669:16670   */\n      0x01\n        /* \"#utility.yul\":16666:16667   */\n      dup2\n        /* \"#utility.yul\":16662:16671   */\n      add\n        /* \"#utility.yul\":16657:16671   */\n      swap1\n      pop\n        /* \"#utility.yul\":16622:16906   */\n      jump(tag_582)\n    tag_584:\n        /* \"#utility.yul\":16626:16640   */\n      pop\n        /* \"#utility.yul\":16922:16925   */\n      dup6\n        /* \"#utility.yul\":16915:16925   */\n      swap4\n      pop\n        /* \"#utility.yul\":16323:16931   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16199:16931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16937:17310   */\n    tag_60:\n        /* \"#utility.yul\":17080:17084   */\n      0x00\n        /* \"#utility.yul\":17118:17120   */\n      0x20\n        /* \"#utility.yul\":17107:17116   */\n      dup3\n        /* \"#utility.yul\":17103:17121   */\n      add\n        /* \"#utility.yul\":17095:17121   */\n      swap1\n      pop\n        /* \"#utility.yul\":17167:17176   */\n      dup2\n        /* \"#utility.yul\":17161:17165   */\n      dup2\n        /* \"#utility.yul\":17157:17177   */\n      sub\n        /* \"#utility.yul\":17153:17154   */\n      0x00\n        /* \"#utility.yul\":17142:17151   */\n      dup4\n        /* \"#utility.yul\":17138:17155   */\n      add\n        /* \"#utility.yul\":17131:17178   */\n      mstore\n        /* \"#utility.yul\":17195:17303   */\n      tag_588\n        /* \"#utility.yul\":17298:17302   */\n      dup2\n        /* \"#utility.yul\":17289:17295   */\n      dup5\n        /* \"#utility.yul\":17195:17303   */\n      tag_374\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":17187:17303   */\n      swap1\n      pop\n        /* \"#utility.yul\":16937:17310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17316:18259   */\n    tag_68:\n        /* \"#utility.yul\":17411:17417   */\n      0x00\n        /* \"#utility.yul\":17419:17425   */\n      dup1\n        /* \"#utility.yul\":17427:17433   */\n      0x00\n        /* \"#utility.yul\":17435:17441   */\n      dup1\n        /* \"#utility.yul\":17484:17487   */\n      0x80\n        /* \"#utility.yul\":17472:17481   */\n      dup6\n        /* \"#utility.yul\":17463:17470   */\n      dup8\n        /* \"#utility.yul\":17459:17482   */\n      sub\n        /* \"#utility.yul\":17455:17488   */\n      slt\n        /* \"#utility.yul\":17452:17572   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":17491:17570   */\n      tag_591\n      tag_330\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":17452:17572   */\n    tag_590:\n        /* \"#utility.yul\":17611:17612   */\n      0x00\n        /* \"#utility.yul\":17636:17689   */\n      tag_592\n        /* \"#utility.yul\":17681:17688   */\n      dup8\n        /* \"#utility.yul\":17672:17678   */\n      dup3\n        /* \"#utility.yul\":17661:17670   */\n      dup9\n        /* \"#utility.yul\":17657:17679   */\n      add\n        /* \"#utility.yul\":17636:17689   */\n      tag_335\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":17626:17689   */\n      swap5\n      pop\n        /* \"#utility.yul\":17582:17699   */\n      pop\n        /* \"#utility.yul\":17738:17740   */\n      0x20\n        /* \"#utility.yul\":17764:17817   */\n      tag_593\n        /* \"#utility.yul\":17809:17816   */\n      dup8\n        /* \"#utility.yul\":17800:17806   */\n      dup3\n        /* \"#utility.yul\":17789:17798   */\n      dup9\n        /* \"#utility.yul\":17785:17807   */\n      add\n        /* \"#utility.yul\":17764:17817   */\n      tag_338\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":17754:17817   */\n      swap4\n      pop\n        /* \"#utility.yul\":17709:17827   */\n      pop\n        /* \"#utility.yul\":17866:17868   */\n      0x40\n        /* \"#utility.yul\":17892:17945   */\n      tag_594\n        /* \"#utility.yul\":17937:17944   */\n      dup8\n        /* \"#utility.yul\":17928:17934   */\n      dup3\n        /* \"#utility.yul\":17917:17926   */\n      dup9\n        /* \"#utility.yul\":17913:17935   */\n      add\n        /* \"#utility.yul\":17892:17945   */\n      tag_338\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":17882:17945   */\n      swap3\n      pop\n        /* \"#utility.yul\":17837:17955   */\n      pop\n        /* \"#utility.yul\":18022:18024   */\n      0x60\n        /* \"#utility.yul\":18011:18020   */\n      dup6\n        /* \"#utility.yul\":18007:18025   */\n      add\n        /* \"#utility.yul\":17994:18026   */\n      calldataload\n        /* \"#utility.yul\":18053:18071   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18045:18051   */\n      dup2\n        /* \"#utility.yul\":18042:18072   */\n      gt\n        /* \"#utility.yul\":18039:18156   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":18075:18154   */\n      tag_596\n      tag_331\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":18039:18156   */\n    tag_595:\n        /* \"#utility.yul\":18180:18242   */\n      tag_597\n        /* \"#utility.yul\":18234:18241   */\n      dup8\n        /* \"#utility.yul\":18225:18231   */\n      dup3\n        /* \"#utility.yul\":18214:18223   */\n      dup9\n        /* \"#utility.yul\":18210:18232   */\n      add\n        /* \"#utility.yul\":18180:18242   */\n      tag_364\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":18170:18242   */\n      swap2\n      pop\n        /* \"#utility.yul\":17965:18252   */\n      pop\n        /* \"#utility.yul\":17316:18259   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18265:18383   */\n    tag_375:\n        /* \"#utility.yul\":18352:18376   */\n      tag_599\n        /* \"#utility.yul\":18370:18375   */\n      dup2\n        /* \"#utility.yul\":18352:18376   */\n      tag_333\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":18347:18350   */\n      dup3\n        /* \"#utility.yul\":18340:18377   */\n      mstore\n        /* \"#utility.yul\":18265:18383   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18389:18611   */\n    tag_75:\n        /* \"#utility.yul\":18482:18486   */\n      0x00\n        /* \"#utility.yul\":18520:18522   */\n      0x20\n        /* \"#utility.yul\":18509:18518   */\n      dup3\n        /* \"#utility.yul\":18505:18523   */\n      add\n        /* \"#utility.yul\":18497:18523   */\n      swap1\n      pop\n        /* \"#utility.yul\":18533:18604   */\n      tag_601\n        /* \"#utility.yul\":18601:18602   */\n      0x00\n        /* \"#utility.yul\":18590:18599   */\n      dup4\n        /* \"#utility.yul\":18586:18603   */\n      add\n        /* \"#utility.yul\":18577:18583   */\n      dup5\n        /* \"#utility.yul\":18533:18604   */\n      tag_375\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":18389:18611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18617:18733   */\n    tag_376:\n        /* \"#utility.yul\":18687:18708   */\n      tag_603\n        /* \"#utility.yul\":18702:18707   */\n      dup2\n        /* \"#utility.yul\":18687:18708   */\n      tag_343\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":18680:18685   */\n      dup2\n        /* \"#utility.yul\":18677:18709   */\n      eq\n        /* \"#utility.yul\":18667:18727   */\n      tag_604\n      jumpi\n        /* \"#utility.yul\":18723:18724   */\n      0x00\n        /* \"#utility.yul\":18720:18721   */\n      dup1\n        /* \"#utility.yul\":18713:18725   */\n      revert\n        /* \"#utility.yul\":18667:18727   */\n    tag_604:\n        /* \"#utility.yul\":18617:18733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18739:18872   */\n    tag_377:\n        /* \"#utility.yul\":18782:18787   */\n      0x00\n        /* \"#utility.yul\":18820:18826   */\n      dup2\n        /* \"#utility.yul\":18807:18827   */\n      calldataload\n        /* \"#utility.yul\":18798:18827   */\n      swap1\n      pop\n        /* \"#utility.yul\":18836:18866   */\n      tag_606\n        /* \"#utility.yul\":18860:18865   */\n      dup2\n        /* \"#utility.yul\":18836:18866   */\n      tag_376\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":18739:18872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18878:19346   */\n    tag_78:\n        /* \"#utility.yul\":18943:18949   */\n      0x00\n        /* \"#utility.yul\":18951:18957   */\n      dup1\n        /* \"#utility.yul\":19000:19002   */\n      0x40\n        /* \"#utility.yul\":18988:18997   */\n      dup4\n        /* \"#utility.yul\":18979:18986   */\n      dup6\n        /* \"#utility.yul\":18975:18998   */\n      sub\n        /* \"#utility.yul\":18971:19003   */\n      slt\n        /* \"#utility.yul\":18968:19087   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":19006:19085   */\n      tag_609\n      tag_330\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":18968:19087   */\n    tag_608:\n        /* \"#utility.yul\":19126:19127   */\n      0x00\n        /* \"#utility.yul\":19151:19204   */\n      tag_610\n        /* \"#utility.yul\":19196:19203   */\n      dup6\n        /* \"#utility.yul\":19187:19193   */\n      dup3\n        /* \"#utility.yul\":19176:19185   */\n      dup7\n        /* \"#utility.yul\":19172:19194   */\n      add\n        /* \"#utility.yul\":19151:19204   */\n      tag_335\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":19141:19204   */\n      swap3\n      pop\n        /* \"#utility.yul\":19097:19214   */\n      pop\n        /* \"#utility.yul\":19253:19255   */\n      0x20\n        /* \"#utility.yul\":19279:19329   */\n      tag_611\n        /* \"#utility.yul\":19321:19328   */\n      dup6\n        /* \"#utility.yul\":19312:19318   */\n      dup3\n        /* \"#utility.yul\":19301:19310   */\n      dup7\n        /* \"#utility.yul\":19297:19319   */\n      add\n        /* \"#utility.yul\":19279:19329   */\n      tag_377\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":19269:19329   */\n      swap2\n      pop\n        /* \"#utility.yul\":19224:19339   */\n      pop\n        /* \"#utility.yul\":18878:19346   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19352:19826   */\n    tag_82:\n        /* \"#utility.yul\":19420:19426   */\n      0x00\n        /* \"#utility.yul\":19428:19434   */\n      dup1\n        /* \"#utility.yul\":19477:19479   */\n      0x40\n        /* \"#utility.yul\":19465:19474   */\n      dup4\n        /* \"#utility.yul\":19456:19463   */\n      dup6\n        /* \"#utility.yul\":19452:19475   */\n      sub\n        /* \"#utility.yul\":19448:19480   */\n      slt\n        /* \"#utility.yul\":19445:19564   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":19483:19562   */\n      tag_614\n      tag_330\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":19445:19564   */\n    tag_613:\n        /* \"#utility.yul\":19603:19604   */\n      0x00\n        /* \"#utility.yul\":19628:19681   */\n      tag_615\n        /* \"#utility.yul\":19673:19680   */\n      dup6\n        /* \"#utility.yul\":19664:19670   */\n      dup3\n        /* \"#utility.yul\":19653:19662   */\n      dup7\n        /* \"#utility.yul\":19649:19671   */\n      add\n        /* \"#utility.yul\":19628:19681   */\n      tag_335\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":19618:19681   */\n      swap3\n      pop\n        /* \"#utility.yul\":19574:19691   */\n      pop\n        /* \"#utility.yul\":19730:19732   */\n      0x20\n        /* \"#utility.yul\":19756:19809   */\n      tag_616\n        /* \"#utility.yul\":19801:19808   */\n      dup6\n        /* \"#utility.yul\":19792:19798   */\n      dup3\n        /* \"#utility.yul\":19781:19790   */\n      dup7\n        /* \"#utility.yul\":19777:19799   */\n      add\n        /* \"#utility.yul\":19756:19809   */\n      tag_335\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":19746:19809   */\n      swap2\n      pop\n        /* \"#utility.yul\":19701:19819   */\n      pop\n        /* \"#utility.yul\":19352:19826   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19832:20921   */\n    tag_87:\n        /* \"#utility.yul\":19936:19942   */\n      0x00\n        /* \"#utility.yul\":19944:19950   */\n      dup1\n        /* \"#utility.yul\":19952:19958   */\n      0x00\n        /* \"#utility.yul\":19960:19966   */\n      dup1\n        /* \"#utility.yul\":19968:19974   */\n      0x00\n        /* \"#utility.yul\":20017:20020   */\n      0xa0\n        /* \"#utility.yul\":20005:20014   */\n      dup7\n        /* \"#utility.yul\":19996:20003   */\n      dup9\n        /* \"#utility.yul\":19992:20015   */\n      sub\n        /* \"#utility.yul\":19988:20021   */\n      slt\n        /* \"#utility.yul\":19985:20105   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":20024:20103   */\n      tag_619\n      tag_330\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":19985:20105   */\n    tag_618:\n        /* \"#utility.yul\":20144:20145   */\n      0x00\n        /* \"#utility.yul\":20169:20222   */\n      tag_620\n        /* \"#utility.yul\":20214:20221   */\n      dup9\n        /* \"#utility.yul\":20205:20211   */\n      dup3\n        /* \"#utility.yul\":20194:20203   */\n      dup10\n        /* \"#utility.yul\":20190:20212   */\n      add\n        /* \"#utility.yul\":20169:20222   */\n      tag_335\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":20159:20222   */\n      swap6\n      pop\n        /* \"#utility.yul\":20115:20232   */\n      pop\n        /* \"#utility.yul\":20271:20273   */\n      0x20\n        /* \"#utility.yul\":20297:20350   */\n      tag_621\n        /* \"#utility.yul\":20342:20349   */\n      dup9\n        /* \"#utility.yul\":20333:20339   */\n      dup3\n        /* \"#utility.yul\":20322:20331   */\n      dup10\n        /* \"#utility.yul\":20318:20340   */\n      add\n        /* \"#utility.yul\":20297:20350   */\n      tag_335\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":20287:20350   */\n      swap5\n      pop\n        /* \"#utility.yul\":20242:20360   */\n      pop\n        /* \"#utility.yul\":20399:20401   */\n      0x40\n        /* \"#utility.yul\":20425:20478   */\n      tag_622\n        /* \"#utility.yul\":20470:20477   */\n      dup9\n        /* \"#utility.yul\":20461:20467   */\n      dup3\n        /* \"#utility.yul\":20450:20459   */\n      dup10\n        /* \"#utility.yul\":20446:20468   */\n      add\n        /* \"#utility.yul\":20425:20478   */\n      tag_338\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":20415:20478   */\n      swap4\n      pop\n        /* \"#utility.yul\":20370:20488   */\n      pop\n        /* \"#utility.yul\":20527:20529   */\n      0x60\n        /* \"#utility.yul\":20553:20606   */\n      tag_623\n        /* \"#utility.yul\":20598:20605   */\n      dup9\n        /* \"#utility.yul\":20589:20595   */\n      dup3\n        /* \"#utility.yul\":20578:20587   */\n      dup10\n        /* \"#utility.yul\":20574:20596   */\n      add\n        /* \"#utility.yul\":20553:20606   */\n      tag_338\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":20543:20606   */\n      swap3\n      pop\n        /* \"#utility.yul\":20498:20616   */\n      pop\n        /* \"#utility.yul\":20683:20686   */\n      0x80\n        /* \"#utility.yul\":20672:20681   */\n      dup7\n        /* \"#utility.yul\":20668:20687   */\n      add\n        /* \"#utility.yul\":20655:20688   */\n      calldataload\n        /* \"#utility.yul\":20715:20733   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20707:20713   */\n      dup2\n        /* \"#utility.yul\":20704:20734   */\n      gt\n        /* \"#utility.yul\":20701:20818   */\n      iszero\n      tag_624\n      jumpi\n        /* \"#utility.yul\":20737:20816   */\n      tag_625\n      tag_331\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":20701:20818   */\n    tag_624:\n        /* \"#utility.yul\":20842:20904   */\n      tag_626\n        /* \"#utility.yul\":20896:20903   */\n      dup9\n        /* \"#utility.yul\":20887:20893   */\n      dup3\n        /* \"#utility.yul\":20876:20885   */\n      dup10\n        /* \"#utility.yul\":20872:20894   */\n      add\n        /* \"#utility.yul\":20842:20904   */\n      tag_364\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":20832:20904   */\n      swap2\n      pop\n        /* \"#utility.yul\":20626:20914   */\n      pop\n        /* \"#utility.yul\":19832:20921   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20927:21256   */\n    tag_91:\n        /* \"#utility.yul\":20986:20992   */\n      0x00\n        /* \"#utility.yul\":21035:21037   */\n      0x20\n        /* \"#utility.yul\":21023:21032   */\n      dup3\n        /* \"#utility.yul\":21014:21021   */\n      dup5\n        /* \"#utility.yul\":21010:21033   */\n      sub\n        /* \"#utility.yul\":21006:21038   */\n      slt\n        /* \"#utility.yul\":21003:21122   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":21041:21120   */\n      tag_629\n      tag_330\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":21003:21122   */\n    tag_628:\n        /* \"#utility.yul\":21161:21162   */\n      0x00\n        /* \"#utility.yul\":21186:21239   */\n      tag_630\n        /* \"#utility.yul\":21231:21238   */\n      dup5\n        /* \"#utility.yul\":21222:21228   */\n      dup3\n        /* \"#utility.yul\":21211:21220   */\n      dup6\n        /* \"#utility.yul\":21207:21229   */\n      add\n        /* \"#utility.yul\":21186:21239   */\n      tag_335\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":21176:21239   */\n      swap2\n      pop\n        /* \"#utility.yul\":21132:21249   */\n      pop\n        /* \"#utility.yul\":20927:21256   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21262:21442   */\n    tag_378:\n        /* \"#utility.yul\":21310:21387   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21307:21308   */\n      0x00\n        /* \"#utility.yul\":21300:21388   */\n      mstore\n        /* \"#utility.yul\":21407:21411   */\n      0x22\n        /* \"#utility.yul\":21404:21405   */\n      0x04\n        /* \"#utility.yul\":21397:21412   */\n      mstore\n        /* \"#utility.yul\":21431:21435   */\n      0x24\n        /* \"#utility.yul\":21428:21429   */\n      0x00\n        /* \"#utility.yul\":21421:21436   */\n      revert\n        /* \"#utility.yul\":21448:21768   */\n    tag_107:\n        /* \"#utility.yul\":21492:21498   */\n      0x00\n        /* \"#utility.yul\":21529:21530   */\n      0x02\n        /* \"#utility.yul\":21523:21527   */\n      dup3\n        /* \"#utility.yul\":21519:21531   */\n      div\n        /* \"#utility.yul\":21509:21531   */\n      swap1\n      pop\n        /* \"#utility.yul\":21576:21577   */\n      0x01\n        /* \"#utility.yul\":21570:21574   */\n      dup3\n        /* \"#utility.yul\":21566:21578   */\n      and\n        /* \"#utility.yul\":21597:21615   */\n      dup1\n        /* \"#utility.yul\":21587:21668   */\n      tag_633\n      jumpi\n        /* \"#utility.yul\":21653:21657   */\n      0x7f\n        /* \"#utility.yul\":21645:21651   */\n      dup3\n        /* \"#utility.yul\":21641:21658   */\n      and\n        /* \"#utility.yul\":21631:21658   */\n      swap2\n      pop\n        /* \"#utility.yul\":21587:21668   */\n    tag_633:\n        /* \"#utility.yul\":21715:21717   */\n      0x20\n        /* \"#utility.yul\":21707:21713   */\n      dup3\n        /* \"#utility.yul\":21704:21718   */\n      lt\n        /* \"#utility.yul\":21684:21702   */\n      dup2\n        /* \"#utility.yul\":21681:21719   */\n      sub\n        /* \"#utility.yul\":21678:21762   */\n      tag_634\n      jumpi\n        /* \"#utility.yul\":21734:21752   */\n      tag_635\n      tag_378\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":21678:21762   */\n    tag_634:\n        /* \"#utility.yul\":21499:21768   */\n      pop\n        /* \"#utility.yul\":21448:21768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21774:22106   */\n    tag_124:\n        /* \"#utility.yul\":21895:21899   */\n      0x00\n        /* \"#utility.yul\":21933:21935   */\n      0x40\n        /* \"#utility.yul\":21922:21931   */\n      dup3\n        /* \"#utility.yul\":21918:21936   */\n      add\n        /* \"#utility.yul\":21910:21936   */\n      swap1\n      pop\n        /* \"#utility.yul\":21946:22017   */\n      tag_637\n        /* \"#utility.yul\":22014:22015   */\n      0x00\n        /* \"#utility.yul\":22003:22012   */\n      dup4\n        /* \"#utility.yul\":21999:22016   */\n      add\n        /* \"#utility.yul\":21990:21996   */\n      dup6\n        /* \"#utility.yul\":21946:22017   */\n      tag_375\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":22027:22099   */\n      tag_638\n        /* \"#utility.yul\":22095:22097   */\n      0x20\n        /* \"#utility.yul\":22084:22093   */\n      dup4\n        /* \"#utility.yul\":22080:22098   */\n      add\n        /* \"#utility.yul\":22071:22077   */\n      dup5\n        /* \"#utility.yul\":22027:22099   */\n      tag_375\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":21774:22106   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22112:22444   */\n    tag_135:\n        /* \"#utility.yul\":22233:22237   */\n      0x00\n        /* \"#utility.yul\":22271:22273   */\n      0x40\n        /* \"#utility.yul\":22260:22269   */\n      dup3\n        /* \"#utility.yul\":22256:22274   */\n      add\n        /* \"#utility.yul\":22248:22274   */\n      swap1\n      pop\n        /* \"#utility.yul\":22284:22355   */\n      tag_640\n        /* \"#utility.yul\":22352:22353   */\n      0x00\n        /* \"#utility.yul\":22341:22350   */\n      dup4\n        /* \"#utility.yul\":22337:22354   */\n      add\n        /* \"#utility.yul\":22328:22334   */\n      dup6\n        /* \"#utility.yul\":22284:22355   */\n      tag_339\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":22365:22437   */\n      tag_641\n        /* \"#utility.yul\":22433:22435   */\n      0x20\n        /* \"#utility.yul\":22422:22431   */\n      dup4\n        /* \"#utility.yul\":22418:22436   */\n      add\n        /* \"#utility.yul\":22409:22415   */\n      dup5\n        /* \"#utility.yul\":22365:22437   */\n      tag_339\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":22112:22444   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22450:22630   */\n    tag_150:\n        /* \"#utility.yul\":22498:22575   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22495:22496   */\n      0x00\n        /* \"#utility.yul\":22488:22576   */\n      mstore\n        /* \"#utility.yul\":22595:22599   */\n      0x32\n        /* \"#utility.yul\":22592:22593   */\n      0x04\n        /* \"#utility.yul\":22585:22600   */\n      mstore\n        /* \"#utility.yul\":22619:22623   */\n      0x24\n        /* \"#utility.yul\":22616:22617   */\n      0x00\n        /* \"#utility.yul\":22609:22624   */\n      revert\n        /* \"#utility.yul\":22636:22777   */\n    tag_379:\n        /* \"#utility.yul\":22685:22689   */\n      0x00\n        /* \"#utility.yul\":22708:22711   */\n      dup2\n        /* \"#utility.yul\":22700:22711   */\n      swap1\n      pop\n        /* \"#utility.yul\":22731:22734   */\n      dup2\n        /* \"#utility.yul\":22728:22729   */\n      0x00\n        /* \"#utility.yul\":22721:22735   */\n      mstore\n        /* \"#utility.yul\":22765:22769   */\n      0x20\n        /* \"#utility.yul\":22762:22763   */\n      0x00\n        /* \"#utility.yul\":22752:22770   */\n      keccak256\n        /* \"#utility.yul\":22744:22770   */\n      swap1\n      pop\n        /* \"#utility.yul\":22636:22777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22783:22876   */\n    tag_380:\n        /* \"#utility.yul\":22820:22826   */\n      0x00\n        /* \"#utility.yul\":22867:22869   */\n      0x20\n        /* \"#utility.yul\":22862:22864   */\n      0x1f\n        /* \"#utility.yul\":22855:22860   */\n      dup4\n        /* \"#utility.yul\":22851:22865   */\n      add\n        /* \"#utility.yul\":22847:22870   */\n      div\n        /* \"#utility.yul\":22837:22870   */\n      swap1\n      pop\n        /* \"#utility.yul\":22783:22876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22882:22989   */\n    tag_381:\n        /* \"#utility.yul\":22926:22934   */\n      0x00\n        /* \"#utility.yul\":22976:22981   */\n      dup3\n        /* \"#utility.yul\":22970:22974   */\n      dup3\n        /* \"#utility.yul\":22966:22982   */\n      shl\n        /* \"#utility.yul\":22945:22982   */\n      swap1\n      pop\n        /* \"#utility.yul\":22882:22989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22995:23388   */\n    tag_382:\n        /* \"#utility.yul\":23064:23070   */\n      0x00\n        /* \"#utility.yul\":23114:23115   */\n      0x08\n        /* \"#utility.yul\":23102:23112   */\n      dup4\n        /* \"#utility.yul\":23098:23116   */\n      mul\n        /* \"#utility.yul\":23137:23234   */\n      tag_647\n        /* \"#utility.yul\":23167:23233   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23156:23165   */\n      dup3\n        /* \"#utility.yul\":23137:23234   */\n      tag_381\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":23255:23294   */\n      tag_648\n        /* \"#utility.yul\":23285:23293   */\n      dup7\n        /* \"#utility.yul\":23274:23283   */\n      dup4\n        /* \"#utility.yul\":23255:23294   */\n      tag_381\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":23243:23294   */\n      swap6\n      pop\n        /* \"#utility.yul\":23327:23331   */\n      dup1\n        /* \"#utility.yul\":23323:23332   */\n      not\n        /* \"#utility.yul\":23316:23321   */\n      dup5\n        /* \"#utility.yul\":23312:23333   */\n      and\n        /* \"#utility.yul\":23303:23333   */\n      swap4\n      pop\n        /* \"#utility.yul\":23376:23380   */\n      dup1\n        /* \"#utility.yul\":23366:23374   */\n      dup7\n        /* \"#utility.yul\":23362:23381   */\n      and\n        /* \"#utility.yul\":23355:23360   */\n      dup5\n        /* \"#utility.yul\":23352:23382   */\n      or\n        /* \"#utility.yul\":23342:23382   */\n      swap3\n      pop\n        /* \"#utility.yul\":23071:23388   */\n      pop\n      pop\n        /* \"#utility.yul\":22995:23388   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23394:23454   */\n    tag_383:\n        /* \"#utility.yul\":23422:23425   */\n      0x00\n        /* \"#utility.yul\":23443:23448   */\n      dup2\n        /* \"#utility.yul\":23436:23448   */\n      swap1\n      pop\n        /* \"#utility.yul\":23394:23454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23460:23602   */\n    tag_384:\n        /* \"#utility.yul\":23510:23519   */\n      0x00\n        /* \"#utility.yul\":23543:23596   */\n      tag_651\n        /* \"#utility.yul\":23561:23595   */\n      tag_652\n        /* \"#utility.yul\":23570:23594   */\n      tag_653\n        /* \"#utility.yul\":23588:23593   */\n      dup5\n        /* \"#utility.yul\":23570:23594   */\n      tag_336\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":23561:23595   */\n      tag_383\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":23543:23596   */\n      tag_336\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":23530:23596   */\n      swap1\n      pop\n        /* \"#utility.yul\":23460:23602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23608:23683   */\n    tag_385:\n        /* \"#utility.yul\":23651:23654   */\n      0x00\n        /* \"#utility.yul\":23672:23677   */\n      dup2\n        /* \"#utility.yul\":23665:23677   */\n      swap1\n      pop\n        /* \"#utility.yul\":23608:23683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23689:23958   */\n    tag_386:\n        /* \"#utility.yul\":23799:23838   */\n      tag_656\n        /* \"#utility.yul\":23830:23837   */\n      dup4\n        /* \"#utility.yul\":23799:23838   */\n      tag_384\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":23860:23951   */\n      tag_657\n        /* \"#utility.yul\":23909:23950   */\n      tag_658\n        /* \"#utility.yul\":23933:23949   */\n      dup3\n        /* \"#utility.yul\":23909:23950   */\n      tag_385\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":23901:23907   */\n      dup5\n        /* \"#utility.yul\":23894:23898   */\n      dup5\n        /* \"#utility.yul\":23888:23899   */\n      sload\n        /* \"#utility.yul\":23860:23951   */\n      tag_382\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":23854:23858   */\n      dup3\n        /* \"#utility.yul\":23847:23952   */\n      sstore\n        /* \"#utility.yul\":23765:23958   */\n      pop\n        /* \"#utility.yul\":23689:23958   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23964:24037   */\n    tag_387:\n        /* \"#utility.yul\":24009:24012   */\n      0x00\n        /* \"#utility.yul\":23964:24037   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":24043:24232   */\n    tag_388:\n        /* \"#utility.yul\":24120:24152   */\n      tag_661\n      tag_387\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":24161:24226   */\n      tag_662\n        /* \"#utility.yul\":24219:24225   */\n      dup2\n        /* \"#utility.yul\":24211:24217   */\n      dup5\n        /* \"#utility.yul\":24205:24209   */\n      dup5\n        /* \"#utility.yul\":24161:24226   */\n      tag_386\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":24096:24232   */\n      pop\n        /* \"#utility.yul\":24043:24232   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24238:24424   */\n    tag_389:\n        /* \"#utility.yul\":24298:24418   */\n    tag_664:\n        /* \"#utility.yul\":24315:24318   */\n      dup2\n        /* \"#utility.yul\":24308:24313   */\n      dup2\n        /* \"#utility.yul\":24305:24319   */\n      lt\n        /* \"#utility.yul\":24298:24418   */\n      iszero\n      tag_666\n      jumpi\n        /* \"#utility.yul\":24369:24408   */\n      tag_667\n        /* \"#utility.yul\":24406:24407   */\n      0x00\n        /* \"#utility.yul\":24399:24404   */\n      dup3\n        /* \"#utility.yul\":24369:24408   */\n      tag_388\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":24342:24343   */\n      0x01\n        /* \"#utility.yul\":24335:24340   */\n      dup2\n        /* \"#utility.yul\":24331:24344   */\n      add\n        /* \"#utility.yul\":24322:24344   */\n      swap1\n      pop\n        /* \"#utility.yul\":24298:24418   */\n      jump(tag_664)\n    tag_666:\n        /* \"#utility.yul\":24238:24424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24430:24973   */\n    tag_390:\n        /* \"#utility.yul\":24531:24533   */\n      0x1f\n        /* \"#utility.yul\":24526:24529   */\n      dup3\n        /* \"#utility.yul\":24523:24534   */\n      gt\n        /* \"#utility.yul\":24520:24966   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":24565:24603   */\n      tag_670\n        /* \"#utility.yul\":24597:24602   */\n      dup2\n        /* \"#utility.yul\":24565:24603   */\n      tag_379\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":24649:24678   */\n      tag_671\n        /* \"#utility.yul\":24667:24677   */\n      dup5\n        /* \"#utility.yul\":24649:24678   */\n      tag_380\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":24639:24647   */\n      dup2\n        /* \"#utility.yul\":24635:24679   */\n      add\n        /* \"#utility.yul\":24832:24834   */\n      0x20\n        /* \"#utility.yul\":24820:24830   */\n      dup6\n        /* \"#utility.yul\":24817:24835   */\n      lt\n        /* \"#utility.yul\":24814:24863   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":24853:24861   */\n      dup2\n        /* \"#utility.yul\":24838:24861   */\n      swap1\n      pop\n        /* \"#utility.yul\":24814:24863   */\n    tag_672:\n        /* \"#utility.yul\":24876:24956   */\n      tag_673\n        /* \"#utility.yul\":24932:24954   */\n      tag_674\n        /* \"#utility.yul\":24950:24953   */\n      dup6\n        /* \"#utility.yul\":24932:24954   */\n      tag_380\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":24922:24930   */\n      dup4\n        /* \"#utility.yul\":24918:24955   */\n      add\n        /* \"#utility.yul\":24905:24916   */\n      dup3\n        /* \"#utility.yul\":24876:24956   */\n      tag_389\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":24535:24966   */\n      pop\n      pop\n        /* \"#utility.yul\":24520:24966   */\n    tag_669:\n        /* \"#utility.yul\":24430:24973   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24979:25096   */\n    tag_391:\n        /* \"#utility.yul\":25033:25041   */\n      0x00\n        /* \"#utility.yul\":25083:25088   */\n      dup3\n        /* \"#utility.yul\":25077:25081   */\n      dup3\n        /* \"#utility.yul\":25073:25089   */\n      shr\n        /* \"#utility.yul\":25052:25089   */\n      swap1\n      pop\n        /* \"#utility.yul\":24979:25096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25102:25271   */\n    tag_392:\n        /* \"#utility.yul\":25146:25152   */\n      0x00\n        /* \"#utility.yul\":25179:25230   */\n      tag_677\n        /* \"#utility.yul\":25227:25228   */\n      0x00\n        /* \"#utility.yul\":25223:25229   */\n      not\n        /* \"#utility.yul\":25215:25220   */\n      dup5\n        /* \"#utility.yul\":25212:25213   */\n      0x08\n        /* \"#utility.yul\":25208:25221   */\n      mul\n        /* \"#utility.yul\":25179:25230   */\n      tag_391\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":25175:25231   */\n      not\n        /* \"#utility.yul\":25260:25264   */\n      dup1\n        /* \"#utility.yul\":25254:25258   */\n      dup4\n        /* \"#utility.yul\":25250:25265   */\n      and\n        /* \"#utility.yul\":25240:25265   */\n      swap2\n      pop\n        /* \"#utility.yul\":25153:25271   */\n      pop\n        /* \"#utility.yul\":25102:25271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25276:25571   */\n    tag_393:\n        /* \"#utility.yul\":25352:25356   */\n      0x00\n        /* \"#utility.yul\":25498:25527   */\n      tag_679\n        /* \"#utility.yul\":25523:25526   */\n      dup4\n        /* \"#utility.yul\":25517:25521   */\n      dup4\n        /* \"#utility.yul\":25498:25527   */\n      tag_392\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":25490:25527   */\n      swap2\n      pop\n        /* \"#utility.yul\":25560:25563   */\n      dup3\n        /* \"#utility.yul\":25557:25558   */\n      0x02\n        /* \"#utility.yul\":25553:25564   */\n      mul\n        /* \"#utility.yul\":25547:25551   */\n      dup3\n        /* \"#utility.yul\":25544:25565   */\n      or\n        /* \"#utility.yul\":25536:25565   */\n      swap1\n      pop\n        /* \"#utility.yul\":25276:25571   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25576:26971   */\n    tag_196:\n        /* \"#utility.yul\":25693:25730   */\n      tag_681\n        /* \"#utility.yul\":25726:25729   */\n      dup3\n        /* \"#utility.yul\":25693:25730   */\n      tag_354\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":25795:25813   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":25787:25793   */\n      dup2\n        /* \"#utility.yul\":25784:25814   */\n      gt\n        /* \"#utility.yul\":25781:25837   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":25817:25835   */\n      tag_683\n      tag_138\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":25781:25837   */\n    tag_682:\n        /* \"#utility.yul\":25861:25899   */\n      tag_684\n        /* \"#utility.yul\":25893:25897   */\n      dup3\n        /* \"#utility.yul\":25887:25898   */\n      sload\n        /* \"#utility.yul\":25861:25899   */\n      tag_107\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":25946:26013   */\n      tag_685\n        /* \"#utility.yul\":26006:26012   */\n      dup3\n        /* \"#utility.yul\":25998:26004   */\n      dup3\n        /* \"#utility.yul\":25992:25996   */\n      dup6\n        /* \"#utility.yul\":25946:26013   */\n      tag_390\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":26040:26041   */\n      0x00\n        /* \"#utility.yul\":26064:26068   */\n      0x20\n        /* \"#utility.yul\":26051:26068   */\n      swap1\n      pop\n        /* \"#utility.yul\":26096:26098   */\n      0x1f\n        /* \"#utility.yul\":26088:26094   */\n      dup4\n        /* \"#utility.yul\":26085:26099   */\n      gt\n        /* \"#utility.yul\":26113:26114   */\n      0x01\n        /* \"#utility.yul\":26108:26726   */\n      dup2\n      eq\n      tag_687\n      jumpi\n        /* \"#utility.yul\":26770:26771   */\n      0x00\n        /* \"#utility.yul\":26787:26793   */\n      dup5\n        /* \"#utility.yul\":26784:26861   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":26836:26845   */\n      dup3\n        /* \"#utility.yul\":26831:26834   */\n      dup8\n        /* \"#utility.yul\":26827:26846   */\n      add\n        /* \"#utility.yul\":26821:26847   */\n      mload\n        /* \"#utility.yul\":26812:26847   */\n      swap1\n      pop\n        /* \"#utility.yul\":26784:26861   */\n    tag_688:\n        /* \"#utility.yul\":26887:26954   */\n      tag_689\n        /* \"#utility.yul\":26947:26953   */\n      dup6\n        /* \"#utility.yul\":26940:26945   */\n      dup3\n        /* \"#utility.yul\":26887:26954   */\n      tag_393\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":26881:26885   */\n      dup7\n        /* \"#utility.yul\":26874:26955   */\n      sstore\n        /* \"#utility.yul\":26743:26965   */\n      pop\n        /* \"#utility.yul\":26078:26965   */\n      jump(tag_686)\n        /* \"#utility.yul\":26108:26726   */\n    tag_687:\n        /* \"#utility.yul\":26160:26164   */\n      0x1f\n        /* \"#utility.yul\":26156:26165   */\n      not\n        /* \"#utility.yul\":26148:26154   */\n      dup5\n        /* \"#utility.yul\":26144:26166   */\n      and\n        /* \"#utility.yul\":26194:26231   */\n      tag_690\n        /* \"#utility.yul\":26226:26230   */\n      dup7\n        /* \"#utility.yul\":26194:26231   */\n      tag_379\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":26253:26254   */\n      0x00\n        /* \"#utility.yul\":26267:26475   */\n    tag_691:\n        /* \"#utility.yul\":26281:26288   */\n      dup3\n        /* \"#utility.yul\":26278:26279   */\n      dup2\n        /* \"#utility.yul\":26275:26289   */\n      lt\n        /* \"#utility.yul\":26267:26475   */\n      iszero\n      tag_693\n      jumpi\n        /* \"#utility.yul\":26360:26369   */\n      dup5\n        /* \"#utility.yul\":26355:26358   */\n      dup10\n        /* \"#utility.yul\":26351:26370   */\n      add\n        /* \"#utility.yul\":26345:26371   */\n      mload\n        /* \"#utility.yul\":26337:26343   */\n      dup3\n        /* \"#utility.yul\":26330:26372   */\n      sstore\n        /* \"#utility.yul\":26411:26412   */\n      0x01\n        /* \"#utility.yul\":26403:26409   */\n      dup3\n        /* \"#utility.yul\":26399:26413   */\n      add\n        /* \"#utility.yul\":26389:26413   */\n      swap2\n      pop\n        /* \"#utility.yul\":26458:26460   */\n      0x20\n        /* \"#utility.yul\":26447:26456   */\n      dup6\n        /* \"#utility.yul\":26443:26461   */\n      add\n        /* \"#utility.yul\":26430:26461   */\n      swap5\n      pop\n        /* \"#utility.yul\":26304:26308   */\n      0x20\n        /* \"#utility.yul\":26301:26302   */\n      dup2\n        /* \"#utility.yul\":26297:26309   */\n      add\n        /* \"#utility.yul\":26292:26309   */\n      swap1\n      pop\n        /* \"#utility.yul\":26267:26475   */\n      jump(tag_691)\n    tag_693:\n        /* \"#utility.yul\":26503:26509   */\n      dup7\n        /* \"#utility.yul\":26494:26501   */\n      dup4\n        /* \"#utility.yul\":26491:26510   */\n      lt\n        /* \"#utility.yul\":26488:26667   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":26561:26570   */\n      dup5\n        /* \"#utility.yul\":26556:26559   */\n      dup10\n        /* \"#utility.yul\":26552:26571   */\n      add\n        /* \"#utility.yul\":26546:26572   */\n      mload\n        /* \"#utility.yul\":26604:26652   */\n      tag_695\n        /* \"#utility.yul\":26646:26650   */\n      0x1f\n        /* \"#utility.yul\":26638:26644   */\n      dup10\n        /* \"#utility.yul\":26634:26651   */\n      and\n        /* \"#utility.yul\":26623:26632   */\n      dup3\n        /* \"#utility.yul\":26604:26652   */\n      tag_392\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":26596:26602   */\n      dup4\n        /* \"#utility.yul\":26589:26653   */\n      sstore\n        /* \"#utility.yul\":26511:26667   */\n      pop\n        /* \"#utility.yul\":26488:26667   */\n    tag_694:\n        /* \"#utility.yul\":26713:26714   */\n      0x01\n        /* \"#utility.yul\":26709:26710   */\n      0x02\n        /* \"#utility.yul\":26701:26707   */\n      dup9\n        /* \"#utility.yul\":26697:26711   */\n      mul\n        /* \"#utility.yul\":26693:26715   */\n      add\n        /* \"#utility.yul\":26687:26691   */\n      dup9\n        /* \"#utility.yul\":26680:26716   */\n      sstore\n        /* \"#utility.yul\":26115:26726   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26078:26965   */\n    tag_686:\n      pop\n        /* \"#utility.yul\":25668:26971   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25576:26971   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26977:27075   */\n    tag_394:\n        /* \"#utility.yul\":27028:27034   */\n      0x00\n        /* \"#utility.yul\":27062:27067   */\n      dup2\n        /* \"#utility.yul\":27056:27068   */\n      mload\n        /* \"#utility.yul\":27046:27068   */\n      swap1\n      pop\n        /* \"#utility.yul\":26977:27075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27081:27249   */\n    tag_395:\n        /* \"#utility.yul\":27164:27175   */\n      0x00\n        /* \"#utility.yul\":27198:27204   */\n      dup3\n        /* \"#utility.yul\":27193:27196   */\n      dup3\n        /* \"#utility.yul\":27186:27205   */\n      mstore\n        /* \"#utility.yul\":27238:27242   */\n      0x20\n        /* \"#utility.yul\":27233:27236   */\n      dup3\n        /* \"#utility.yul\":27229:27243   */\n      add\n        /* \"#utility.yul\":27214:27243   */\n      swap1\n      pop\n        /* \"#utility.yul\":27081:27249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27255:27628   */\n    tag_396:\n        /* \"#utility.yul\":27341:27344   */\n      0x00\n        /* \"#utility.yul\":27369:27407   */\n      tag_699\n        /* \"#utility.yul\":27401:27406   */\n      dup3\n        /* \"#utility.yul\":27369:27407   */\n      tag_394\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":27423:27493   */\n      tag_700\n        /* \"#utility.yul\":27486:27492   */\n      dup2\n        /* \"#utility.yul\":27481:27484   */\n      dup6\n        /* \"#utility.yul\":27423:27493   */\n      tag_395\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":27416:27493   */\n      swap4\n      pop\n        /* \"#utility.yul\":27502:27567   */\n      tag_701\n        /* \"#utility.yul\":27560:27566   */\n      dup2\n        /* \"#utility.yul\":27555:27558   */\n      dup6\n        /* \"#utility.yul\":27548:27552   */\n      0x20\n        /* \"#utility.yul\":27541:27546   */\n      dup7\n        /* \"#utility.yul\":27537:27553   */\n      add\n        /* \"#utility.yul\":27502:27567   */\n      tag_356\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":27592:27621   */\n      tag_702\n        /* \"#utility.yul\":27614:27620   */\n      dup2\n        /* \"#utility.yul\":27592:27621   */\n      tag_347\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":27587:27590   */\n      dup5\n        /* \"#utility.yul\":27583:27622   */\n      add\n        /* \"#utility.yul\":27576:27622   */\n      swap2\n      pop\n        /* \"#utility.yul\":27345:27628   */\n      pop\n        /* \"#utility.yul\":27255:27628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27634:28385   */\n    tag_267:\n        /* \"#utility.yul\":27857:27861   */\n      0x00\n        /* \"#utility.yul\":27895:27898   */\n      0xa0\n        /* \"#utility.yul\":27884:27893   */\n      dup3\n        /* \"#utility.yul\":27880:27899   */\n      add\n        /* \"#utility.yul\":27872:27899   */\n      swap1\n      pop\n        /* \"#utility.yul\":27909:27980   */\n      tag_704\n        /* \"#utility.yul\":27977:27978   */\n      0x00\n        /* \"#utility.yul\":27966:27975   */\n      dup4\n        /* \"#utility.yul\":27962:27979   */\n      add\n        /* \"#utility.yul\":27953:27959   */\n      dup9\n        /* \"#utility.yul\":27909:27980   */\n      tag_375\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":27990:28062   */\n      tag_705\n        /* \"#utility.yul\":28058:28060   */\n      0x20\n        /* \"#utility.yul\":28047:28056   */\n      dup4\n        /* \"#utility.yul\":28043:28061   */\n      add\n        /* \"#utility.yul\":28034:28040   */\n      dup8\n        /* \"#utility.yul\":27990:28062   */\n      tag_375\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":28072:28144   */\n      tag_706\n        /* \"#utility.yul\":28140:28142   */\n      0x40\n        /* \"#utility.yul\":28129:28138   */\n      dup4\n        /* \"#utility.yul\":28125:28143   */\n      add\n        /* \"#utility.yul\":28116:28122   */\n      dup7\n        /* \"#utility.yul\":28072:28144   */\n      tag_339\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":28154:28226   */\n      tag_707\n        /* \"#utility.yul\":28222:28224   */\n      0x60\n        /* \"#utility.yul\":28211:28220   */\n      dup4\n        /* \"#utility.yul\":28207:28225   */\n      add\n        /* \"#utility.yul\":28198:28204   */\n      dup6\n        /* \"#utility.yul\":28154:28226   */\n      tag_339\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":28274:28283   */\n      dup2\n        /* \"#utility.yul\":28268:28272   */\n      dup2\n        /* \"#utility.yul\":28264:28284   */\n      sub\n        /* \"#utility.yul\":28258:28261   */\n      0x80\n        /* \"#utility.yul\":28247:28256   */\n      dup4\n        /* \"#utility.yul\":28243:28262   */\n      add\n        /* \"#utility.yul\":28236:28285   */\n      mstore\n        /* \"#utility.yul\":28302:28378   */\n      tag_708\n        /* \"#utility.yul\":28373:28377   */\n      dup2\n        /* \"#utility.yul\":28364:28370   */\n      dup5\n        /* \"#utility.yul\":28302:28378   */\n      tag_396\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":28294:28378   */\n      swap1\n      pop\n        /* \"#utility.yul\":27634:28385   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28391:28532   */\n    tag_397:\n        /* \"#utility.yul\":28447:28452   */\n      0x00\n        /* \"#utility.yul\":28478:28484   */\n      dup2\n        /* \"#utility.yul\":28472:28485   */\n      mload\n        /* \"#utility.yul\":28463:28485   */\n      swap1\n      pop\n        /* \"#utility.yul\":28494:28526   */\n      tag_710\n        /* \"#utility.yul\":28520:28525   */\n      dup2\n        /* \"#utility.yul\":28494:28526   */\n      tag_341\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":28391:28532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28538:28887   */\n    tag_270:\n        /* \"#utility.yul\":28607:28613   */\n      0x00\n        /* \"#utility.yul\":28656:28658   */\n      0x20\n        /* \"#utility.yul\":28644:28653   */\n      dup3\n        /* \"#utility.yul\":28635:28642   */\n      dup5\n        /* \"#utility.yul\":28631:28654   */\n      sub\n        /* \"#utility.yul\":28627:28659   */\n      slt\n        /* \"#utility.yul\":28624:28743   */\n      iszero\n      tag_712\n      jumpi\n        /* \"#utility.yul\":28662:28741   */\n      tag_713\n      tag_330\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":28624:28743   */\n    tag_712:\n        /* \"#utility.yul\":28782:28783   */\n      0x00\n        /* \"#utility.yul\":28807:28870   */\n      tag_714\n        /* \"#utility.yul\":28862:28869   */\n      dup5\n        /* \"#utility.yul\":28853:28859   */\n      dup3\n        /* \"#utility.yul\":28842:28851   */\n      dup6\n        /* \"#utility.yul\":28838:28860   */\n      add\n        /* \"#utility.yul\":28807:28870   */\n      tag_397\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":28797:28870   */\n      swap2\n      pop\n        /* \"#utility.yul\":28753:28880   */\n      pop\n        /* \"#utility.yul\":28538:28887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28893:29946   */\n    tag_286:\n        /* \"#utility.yul\":29216:29220   */\n      0x00\n        /* \"#utility.yul\":29254:29257   */\n      0xa0\n        /* \"#utility.yul\":29243:29252   */\n      dup3\n        /* \"#utility.yul\":29239:29258   */\n      add\n        /* \"#utility.yul\":29231:29258   */\n      swap1\n      pop\n        /* \"#utility.yul\":29268:29339   */\n      tag_716\n        /* \"#utility.yul\":29336:29337   */\n      0x00\n        /* \"#utility.yul\":29325:29334   */\n      dup4\n        /* \"#utility.yul\":29321:29338   */\n      add\n        /* \"#utility.yul\":29312:29318   */\n      dup9\n        /* \"#utility.yul\":29268:29339   */\n      tag_375\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":29349:29421   */\n      tag_717\n        /* \"#utility.yul\":29417:29419   */\n      0x20\n        /* \"#utility.yul\":29406:29415   */\n      dup4\n        /* \"#utility.yul\":29402:29420   */\n      add\n        /* \"#utility.yul\":29393:29399   */\n      dup8\n        /* \"#utility.yul\":29349:29421   */\n      tag_375\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":29468:29477   */\n      dup2\n        /* \"#utility.yul\":29462:29466   */\n      dup2\n        /* \"#utility.yul\":29458:29478   */\n      sub\n        /* \"#utility.yul\":29453:29455   */\n      0x40\n        /* \"#utility.yul\":29442:29451   */\n      dup4\n        /* \"#utility.yul\":29438:29456   */\n      add\n        /* \"#utility.yul\":29431:29479   */\n      mstore\n        /* \"#utility.yul\":29496:29604   */\n      tag_718\n        /* \"#utility.yul\":29599:29603   */\n      dup2\n        /* \"#utility.yul\":29590:29596   */\n      dup7\n        /* \"#utility.yul\":29496:29604   */\n      tag_374\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":29488:29604   */\n      swap1\n      pop\n        /* \"#utility.yul\":29651:29660   */\n      dup2\n        /* \"#utility.yul\":29645:29649   */\n      dup2\n        /* \"#utility.yul\":29641:29661   */\n      sub\n        /* \"#utility.yul\":29636:29638   */\n      0x60\n        /* \"#utility.yul\":29625:29634   */\n      dup4\n        /* \"#utility.yul\":29621:29639   */\n      add\n        /* \"#utility.yul\":29614:29662   */\n      mstore\n        /* \"#utility.yul\":29679:29787   */\n      tag_719\n        /* \"#utility.yul\":29782:29786   */\n      dup2\n        /* \"#utility.yul\":29773:29779   */\n      dup6\n        /* \"#utility.yul\":29679:29787   */\n      tag_374\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":29671:29787   */\n      swap1\n      pop\n        /* \"#utility.yul\":29835:29844   */\n      dup2\n        /* \"#utility.yul\":29829:29833   */\n      dup2\n        /* \"#utility.yul\":29825:29845   */\n      sub\n        /* \"#utility.yul\":29819:29822   */\n      0x80\n        /* \"#utility.yul\":29808:29817   */\n      dup4\n        /* \"#utility.yul\":29804:29823   */\n      add\n        /* \"#utility.yul\":29797:29846   */\n      mstore\n        /* \"#utility.yul\":29863:29939   */\n      tag_720\n        /* \"#utility.yul\":29934:29938   */\n      dup2\n        /* \"#utility.yul\":29925:29931   */\n      dup5\n        /* \"#utility.yul\":29863:29939   */\n      tag_396\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":29855:29939   */\n      swap1\n      pop\n        /* \"#utility.yul\":28893:29946   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29952:30505   */\n    tag_318:\n        /* \"#utility.yul\":30129:30133   */\n      0x00\n        /* \"#utility.yul\":30167:30170   */\n      0x80\n        /* \"#utility.yul\":30156:30165   */\n      dup3\n        /* \"#utility.yul\":30152:30171   */\n      add\n        /* \"#utility.yul\":30144:30171   */\n      swap1\n      pop\n        /* \"#utility.yul\":30181:30252   */\n      tag_722\n        /* \"#utility.yul\":30249:30250   */\n      0x00\n        /* \"#utility.yul\":30238:30247   */\n      dup4\n        /* \"#utility.yul\":30234:30251   */\n      add\n        /* \"#utility.yul\":30225:30231   */\n      dup8\n        /* \"#utility.yul\":30181:30252   */\n      tag_375\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":30262:30334   */\n      tag_723\n        /* \"#utility.yul\":30330:30332   */\n      0x20\n        /* \"#utility.yul\":30319:30328   */\n      dup4\n        /* \"#utility.yul\":30315:30333   */\n      add\n        /* \"#utility.yul\":30306:30312   */\n      dup7\n        /* \"#utility.yul\":30262:30334   */\n      tag_339\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":30344:30416   */\n      tag_724\n        /* \"#utility.yul\":30412:30414   */\n      0x40\n        /* \"#utility.yul\":30401:30410   */\n      dup4\n        /* \"#utility.yul\":30397:30415   */\n      add\n        /* \"#utility.yul\":30388:30394   */\n      dup6\n        /* \"#utility.yul\":30344:30416   */\n      tag_339\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":30426:30498   */\n      tag_725\n        /* \"#utility.yul\":30494:30496   */\n      0x60\n        /* \"#utility.yul\":30483:30492   */\n      dup4\n        /* \"#utility.yul\":30479:30497   */\n      add\n        /* \"#utility.yul\":30470:30476   */\n      dup5\n        /* \"#utility.yul\":30426:30498   */\n      tag_339\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":29952:30505   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30511:30691   */\n    tag_398:\n        /* \"#utility.yul\":30559:30636   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30556:30557   */\n      0x00\n        /* \"#utility.yul\":30549:30637   */\n      mstore\n        /* \"#utility.yul\":30656:30660   */\n      0x11\n        /* \"#utility.yul\":30653:30654   */\n      0x04\n        /* \"#utility.yul\":30646:30661   */\n      mstore\n        /* \"#utility.yul\":30680:30684   */\n      0x24\n        /* \"#utility.yul\":30677:30678   */\n      0x00\n        /* \"#utility.yul\":30670:30685   */\n      revert\n        /* \"#utility.yul\":30697:30888   */\n    tag_321:\n        /* \"#utility.yul\":30737:30740   */\n      0x00\n        /* \"#utility.yul\":30756:30776   */\n      tag_728\n        /* \"#utility.yul\":30774:30775   */\n      dup3\n        /* \"#utility.yul\":30756:30776   */\n      tag_336\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":30751:30776   */\n      swap2\n      pop\n        /* \"#utility.yul\":30790:30810   */\n      tag_729\n        /* \"#utility.yul\":30808:30809   */\n      dup4\n        /* \"#utility.yul\":30790:30810   */\n      tag_336\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":30785:30810   */\n      swap3\n      pop\n        /* \"#utility.yul\":30833:30834   */\n      dup3\n        /* \"#utility.yul\":30830:30831   */\n      dup3\n        /* \"#utility.yul\":30826:30835   */\n      add\n        /* \"#utility.yul\":30819:30835   */\n      swap1\n      pop\n        /* \"#utility.yul\":30854:30857   */\n      dup1\n        /* \"#utility.yul\":30851:30852   */\n      dup3\n        /* \"#utility.yul\":30848:30858   */\n      gt\n        /* \"#utility.yul\":30845:30881   */\n      iszero\n      tag_730\n      jumpi\n        /* \"#utility.yul\":30861:30879   */\n      tag_731\n      tag_398\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":30845:30881   */\n    tag_730:\n        /* \"#utility.yul\":30697:30888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30894:31528   */\n    tag_328:\n        /* \"#utility.yul\":31115:31119   */\n      0x00\n        /* \"#utility.yul\":31153:31155   */\n      0x40\n        /* \"#utility.yul\":31142:31151   */\n      dup3\n        /* \"#utility.yul\":31138:31156   */\n      add\n        /* \"#utility.yul\":31130:31156   */\n      swap1\n      pop\n        /* \"#utility.yul\":31202:31211   */\n      dup2\n        /* \"#utility.yul\":31196:31200   */\n      dup2\n        /* \"#utility.yul\":31192:31212   */\n      sub\n        /* \"#utility.yul\":31188:31189   */\n      0x00\n        /* \"#utility.yul\":31177:31186   */\n      dup4\n        /* \"#utility.yul\":31173:31190   */\n      add\n        /* \"#utility.yul\":31166:31213   */\n      mstore\n        /* \"#utility.yul\":31230:31338   */\n      tag_733\n        /* \"#utility.yul\":31333:31337   */\n      dup2\n        /* \"#utility.yul\":31324:31330   */\n      dup6\n        /* \"#utility.yul\":31230:31338   */\n      tag_374\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":31222:31338   */\n      swap1\n      pop\n        /* \"#utility.yul\":31385:31394   */\n      dup2\n        /* \"#utility.yul\":31379:31383   */\n      dup2\n        /* \"#utility.yul\":31375:31395   */\n      sub\n        /* \"#utility.yul\":31370:31372   */\n      0x20\n        /* \"#utility.yul\":31359:31368   */\n      dup4\n        /* \"#utility.yul\":31355:31373   */\n      add\n        /* \"#utility.yul\":31348:31396   */\n      mstore\n        /* \"#utility.yul\":31413:31521   */\n      tag_734\n        /* \"#utility.yul\":31516:31520   */\n      dup2\n        /* \"#utility.yul\":31507:31513   */\n      dup5\n        /* \"#utility.yul\":31413:31521   */\n      tag_374\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":31405:31521   */\n      swap1\n      pop\n        /* \"#utility.yul\":30894:31528   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220765dcb65d43641e58c9e66255e7b4dab49010423ba70d8452b8b0c5e53923a1e64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1802": {
									"entryPoint": null,
									"id": 1802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3117": {
									"entryPoint": null,
									"id": 3117,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_345": {
									"entryPoint": null,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_958": {
									"entryPoint": 251,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 270,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:15",
										"nodeType": "YulBlock",
										"src": "0:6778:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "759:80:15",
													"nodeType": "YulBlock",
													"src": "759:80:15",
													"statements": [
														{
															"nativeSrc": "769:22:15",
															"nodeType": "YulAssignment",
															"src": "769:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:15"
																},
																"nativeSrc": "778:13:15",
																"nodeType": "YulFunctionCall",
																"src": "778:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:15"
																},
																"nativeSrc": "800:33:15",
																"nodeType": "YulFunctionCall",
																"src": "800:33:15"
															},
															"nativeSrc": "800:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:15",
														"nodeType": "YulTypedName",
														"src": "737:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:15",
														"nodeType": "YulTypedName",
														"src": "745:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:15",
														"nodeType": "YulTypedName",
														"src": "753:5:15",
														"type": ""
													}
												],
												"src": "696:143:15"
											},
											{
												"body": {
													"nativeSrc": "922:274:15",
													"nodeType": "YulBlock",
													"src": "922:274:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:15",
																"nodeType": "YulBlock",
																"src": "968:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:15"
																			},
																			"nativeSrc": "970:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:15"
																		},
																		"nativeSrc": "970:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:15"
																		},
																		"nativeSrc": "939:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:15",
																		"nodeType": "YulLiteral",
																		"src": "964:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:15"
																},
																"nativeSrc": "935:32:15",
																"nodeType": "YulFunctionCall",
																"src": "935:32:15"
															},
															"nativeSrc": "932:119:15",
															"nodeType": "YulIf",
															"src": "932:119:15"
														},
														{
															"nativeSrc": "1061:128:15",
															"nodeType": "YulBlock",
															"src": "1061:128:15",
															"statements": [
																{
																	"nativeSrc": "1076:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:15"
																				},
																				"nativeSrc": "1147:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:15"
																		},
																		"nativeSrc": "1115:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:15",
														"nodeType": "YulTypedName",
														"src": "892:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:15",
														"nodeType": "YulTypedName",
														"src": "903:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:15",
														"nodeType": "YulTypedName",
														"src": "915:6:15",
														"type": ""
													}
												],
												"src": "845:351:15"
											},
											{
												"body": {
													"nativeSrc": "1267:53:15",
													"nodeType": "YulBlock",
													"src": "1267:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:15"
																		},
																		"nativeSrc": "1289:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:15"
																},
																"nativeSrc": "1277:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:15"
															},
															"nativeSrc": "1277:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:15",
														"nodeType": "YulTypedName",
														"src": "1255:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:15",
														"nodeType": "YulTypedName",
														"src": "1262:3:15",
														"type": ""
													}
												],
												"src": "1202:118:15"
											},
											{
												"body": {
													"nativeSrc": "1424:124:15",
													"nodeType": "YulBlock",
													"src": "1424:124:15",
													"statements": [
														{
															"nativeSrc": "1434:26:15",
															"nodeType": "YulAssignment",
															"src": "1434:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:15"
																},
																"nativeSrc": "1442:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:15"
																		},
																		"nativeSrc": "1523:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:15"
																},
																"nativeSrc": "1470:71:15",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:15"
															},
															"nativeSrc": "1470:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:15",
														"nodeType": "YulTypedName",
														"src": "1396:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:15",
														"nodeType": "YulTypedName",
														"src": "1408:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:15",
														"nodeType": "YulTypedName",
														"src": "1419:4:15",
														"type": ""
													}
												],
												"src": "1326:222:15"
											},
											{
												"body": {
													"nativeSrc": "1613:40:15",
													"nodeType": "YulBlock",
													"src": "1613:40:15",
													"statements": [
														{
															"nativeSrc": "1624:22:15",
															"nodeType": "YulAssignment",
															"src": "1624:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1640:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1640:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1634:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1634:5:15"
																},
																"nativeSrc": "1634:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1634:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1554:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:15",
														"nodeType": "YulTypedName",
														"src": "1596:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1606:6:15",
														"nodeType": "YulTypedName",
														"src": "1606:6:15",
														"type": ""
													}
												],
												"src": "1554:99:15"
											},
											{
												"body": {
													"nativeSrc": "1687:152:15",
													"nodeType": "YulBlock",
													"src": "1687:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1704:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1704:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1707:77:15",
																		"nodeType": "YulLiteral",
																		"src": "1707:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1697:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1697:6:15"
																},
																"nativeSrc": "1697:88:15",
																"nodeType": "YulFunctionCall",
																"src": "1697:88:15"
															},
															"nativeSrc": "1697:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "1697:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1801:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1801:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1804:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1804:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1794:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:15"
																},
																"nativeSrc": "1794:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1794:15:15"
															},
															"nativeSrc": "1794:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1794:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1825:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1825:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1828:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1828:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1818:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:15"
																},
																"nativeSrc": "1818:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1818:15:15"
															},
															"nativeSrc": "1818:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1818:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1659:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1659:180:15"
											},
											{
												"body": {
													"nativeSrc": "1873:152:15",
													"nodeType": "YulBlock",
													"src": "1873:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1890:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1890:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1893:77:15",
																		"nodeType": "YulLiteral",
																		"src": "1893:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1883:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1883:6:15"
																},
																"nativeSrc": "1883:88:15",
																"nodeType": "YulFunctionCall",
																"src": "1883:88:15"
															},
															"nativeSrc": "1883:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "1883:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1990:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1980:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:15"
																},
																"nativeSrc": "1980:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1980:15:15"
															},
															"nativeSrc": "1980:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1980:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2011:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2011:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2014:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2014:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2004:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:15"
																},
																"nativeSrc": "2004:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2004:15:15"
															},
															"nativeSrc": "2004:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "2004:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1845:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1845:180:15"
											},
											{
												"body": {
													"nativeSrc": "2082:269:15",
													"nodeType": "YulBlock",
													"src": "2082:269:15",
													"statements": [
														{
															"nativeSrc": "2092:22:15",
															"nodeType": "YulAssignment",
															"src": "2092:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2106:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2106:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2112:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2112:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2102:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:15"
																},
																"nativeSrc": "2102:12:15",
																"nodeType": "YulFunctionCall",
																"src": "2102:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2092:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:15"
																}
															]
														},
														{
															"nativeSrc": "2123:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2123:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2153:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2153:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2159:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2159:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2149:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2149:3:15"
																},
																"nativeSrc": "2149:12:15",
																"nodeType": "YulFunctionCall",
																"src": "2149:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2127:18:15",
																	"nodeType": "YulTypedName",
																	"src": "2127:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2200:51:15",
																"nodeType": "YulBlock",
																"src": "2200:51:15",
																"statements": [
																	{
																		"nativeSrc": "2214:27:15",
																		"nodeType": "YulAssignment",
																		"src": "2214:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2228:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "2228:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:4:15",
																					"nodeType": "YulLiteral",
																					"src": "2236:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2224:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2224:3:15"
																			},
																			"nativeSrc": "2224:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2224:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2214:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2214:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2180:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "2180:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2173:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:15"
																},
																"nativeSrc": "2173:26:15",
																"nodeType": "YulFunctionCall",
																"src": "2173:26:15"
															},
															"nativeSrc": "2170:81:15",
															"nodeType": "YulIf",
															"src": "2170:81:15"
														},
														{
															"body": {
																"nativeSrc": "2303:42:15",
																"nodeType": "YulBlock",
																"src": "2303:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2317:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "2317:16:15"
																			},
																			"nativeSrc": "2317:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2317:18:15"
																		},
																		"nativeSrc": "2317:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2317:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2267:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "2267:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2290:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2290:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2298:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2298:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2287:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2287:2:15"
																		},
																		"nativeSrc": "2287:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2287:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2264:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2264:2:15"
																},
																"nativeSrc": "2264:38:15",
																"nodeType": "YulFunctionCall",
																"src": "2264:38:15"
															},
															"nativeSrc": "2261:84:15",
															"nodeType": "YulIf",
															"src": "2261:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2031:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2066:4:15",
														"nodeType": "YulTypedName",
														"src": "2066:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2075:6:15",
														"nodeType": "YulTypedName",
														"src": "2075:6:15",
														"type": ""
													}
												],
												"src": "2031:320:15"
											},
											{
												"body": {
													"nativeSrc": "2411:87:15",
													"nodeType": "YulBlock",
													"src": "2411:87:15",
													"statements": [
														{
															"nativeSrc": "2421:11:15",
															"nodeType": "YulAssignment",
															"src": "2421:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "2429:3:15",
																"nodeType": "YulIdentifier",
																"src": "2429:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2421:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2421:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2449:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2449:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2452:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2452:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2442:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:15"
																},
																"nativeSrc": "2442:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2442:14:15"
															},
															"nativeSrc": "2442:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "2442:14:15"
														},
														{
															"nativeSrc": "2465:26:15",
															"nodeType": "YulAssignment",
															"src": "2465:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2486:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2486:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2473:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2473:9:15"
																},
																"nativeSrc": "2473:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2473:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2465:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2465:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2357:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2398:3:15",
														"nodeType": "YulTypedName",
														"src": "2398:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2406:4:15",
														"nodeType": "YulTypedName",
														"src": "2406:4:15",
														"type": ""
													}
												],
												"src": "2357:141:15"
											},
											{
												"body": {
													"nativeSrc": "2548:49:15",
													"nodeType": "YulBlock",
													"src": "2548:49:15",
													"statements": [
														{
															"nativeSrc": "2558:33:15",
															"nodeType": "YulAssignment",
															"src": "2558:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2576:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2576:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2583:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2583:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2572:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:15"
																		},
																		"nativeSrc": "2572:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2572:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2588:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2588:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2568:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2568:3:15"
																},
																"nativeSrc": "2568:23:15",
																"nodeType": "YulFunctionCall",
																"src": "2568:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2558:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2504:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2531:5:15",
														"nodeType": "YulTypedName",
														"src": "2531:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2541:6:15",
														"nodeType": "YulTypedName",
														"src": "2541:6:15",
														"type": ""
													}
												],
												"src": "2504:93:15"
											},
											{
												"body": {
													"nativeSrc": "2656:54:15",
													"nodeType": "YulBlock",
													"src": "2656:54:15",
													"statements": [
														{
															"nativeSrc": "2666:37:15",
															"nodeType": "YulAssignment",
															"src": "2666:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2691:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2691:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2697:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2697:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2687:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2687:3:15"
																},
																"nativeSrc": "2687:16:15",
																"nodeType": "YulFunctionCall",
																"src": "2687:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2666:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "2666:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2603:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2631:4:15",
														"nodeType": "YulTypedName",
														"src": "2631:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2637:5:15",
														"nodeType": "YulTypedName",
														"src": "2637:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2647:8:15",
														"nodeType": "YulTypedName",
														"src": "2647:8:15",
														"type": ""
													}
												],
												"src": "2603:107:15"
											},
											{
												"body": {
													"nativeSrc": "2792:317:15",
													"nodeType": "YulBlock",
													"src": "2792:317:15",
													"statements": [
														{
															"nativeSrc": "2802:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2802:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2823:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "2823:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2835:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2835:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2819:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:15"
																},
																"nativeSrc": "2819:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2819:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2806:9:15",
																	"nodeType": "YulTypedName",
																	"src": "2806:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2846:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2846:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2877:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2877:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2888:66:15",
																		"nodeType": "YulLiteral",
																		"src": "2888:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2858:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2858:18:15"
																},
																"nativeSrc": "2858:97:15",
																"nodeType": "YulFunctionCall",
																"src": "2858:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2850:4:15",
																	"nodeType": "YulTypedName",
																	"src": "2850:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2964:51:15",
															"nodeType": "YulAssignment",
															"src": "2964:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2995:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2995:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3006:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "3006:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2976:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2976:18:15"
																},
																"nativeSrc": "2976:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2976:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2964:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "2964:8:15"
																}
															]
														},
														{
															"nativeSrc": "3024:30:15",
															"nodeType": "YulAssignment",
															"src": "3024:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3037:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3037:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3048:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "3048:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3044:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3044:3:15"
																		},
																		"nativeSrc": "3044:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3044:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3033:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:15"
																},
																"nativeSrc": "3033:21:15",
																"nodeType": "YulFunctionCall",
																"src": "3033:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3024:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3024:5:15"
																}
															]
														},
														{
															"nativeSrc": "3063:40:15",
															"nodeType": "YulAssignment",
															"src": "3063:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3076:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3087:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "3087:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3097:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "3097:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3083:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:15"
																		},
																		"nativeSrc": "3083:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3083:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3073:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3073:2:15"
																},
																"nativeSrc": "3073:30:15",
																"nodeType": "YulFunctionCall",
																"src": "3073:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3063:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3063:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2716:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2753:5:15",
														"nodeType": "YulTypedName",
														"src": "2753:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2760:10:15",
														"nodeType": "YulTypedName",
														"src": "2760:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2772:8:15",
														"nodeType": "YulTypedName",
														"src": "2772:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2785:6:15",
														"nodeType": "YulTypedName",
														"src": "2785:6:15",
														"type": ""
													}
												],
												"src": "2716:393:15"
											},
											{
												"body": {
													"nativeSrc": "3160:32:15",
													"nodeType": "YulBlock",
													"src": "3160:32:15",
													"statements": [
														{
															"nativeSrc": "3170:16:15",
															"nodeType": "YulAssignment",
															"src": "3170:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "3181:5:15",
																"nodeType": "YulIdentifier",
																"src": "3181:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3170:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3170:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3115:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3142:5:15",
														"nodeType": "YulTypedName",
														"src": "3142:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3152:7:15",
														"nodeType": "YulTypedName",
														"src": "3152:7:15",
														"type": ""
													}
												],
												"src": "3115:77:15"
											},
											{
												"body": {
													"nativeSrc": "3230:28:15",
													"nodeType": "YulBlock",
													"src": "3230:28:15",
													"statements": [
														{
															"nativeSrc": "3240:12:15",
															"nodeType": "YulAssignment",
															"src": "3240:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "3247:5:15",
																"nodeType": "YulIdentifier",
																"src": "3247:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3240:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3240:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3198:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3216:5:15",
														"nodeType": "YulTypedName",
														"src": "3216:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3226:3:15",
														"nodeType": "YulTypedName",
														"src": "3226:3:15",
														"type": ""
													}
												],
												"src": "3198:60:15"
											},
											{
												"body": {
													"nativeSrc": "3324:82:15",
													"nodeType": "YulBlock",
													"src": "3324:82:15",
													"statements": [
														{
															"nativeSrc": "3334:66:15",
															"nodeType": "YulAssignment",
															"src": "3334:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3392:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3392:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3374:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "3374:17:15"
																				},
																				"nativeSrc": "3374:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3365:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "3365:8:15"
																		},
																		"nativeSrc": "3365:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3365:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3347:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "3347:17:15"
																},
																"nativeSrc": "3347:53:15",
																"nodeType": "YulFunctionCall",
																"src": "3347:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3334:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "3334:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3264:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3304:5:15",
														"nodeType": "YulTypedName",
														"src": "3304:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3314:9:15",
														"nodeType": "YulTypedName",
														"src": "3314:9:15",
														"type": ""
													}
												],
												"src": "3264:142:15"
											},
											{
												"body": {
													"nativeSrc": "3459:28:15",
													"nodeType": "YulBlock",
													"src": "3459:28:15",
													"statements": [
														{
															"nativeSrc": "3469:12:15",
															"nodeType": "YulAssignment",
															"src": "3469:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "3476:5:15",
																"nodeType": "YulIdentifier",
																"src": "3476:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3469:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3469:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3412:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3445:5:15",
														"nodeType": "YulTypedName",
														"src": "3445:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3455:3:15",
														"nodeType": "YulTypedName",
														"src": "3455:3:15",
														"type": ""
													}
												],
												"src": "3412:75:15"
											},
											{
												"body": {
													"nativeSrc": "3569:193:15",
													"nodeType": "YulBlock",
													"src": "3569:193:15",
													"statements": [
														{
															"nativeSrc": "3579:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3579:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3634:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "3634:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3603:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "3603:30:15"
																},
																"nativeSrc": "3603:39:15",
																"nodeType": "YulFunctionCall",
																"src": "3603:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3583:16:15",
																	"nodeType": "YulTypedName",
																	"src": "3583:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3658:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3658:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3698:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "3698:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3692:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "3692:5:15"
																				},
																				"nativeSrc": "3692:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3692:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3705:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3705:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3737:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "3737:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3713:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "3713:23:15"
																				},
																				"nativeSrc": "3713:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3713:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3664:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "3664:27:15"
																		},
																		"nativeSrc": "3664:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3664:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3651:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:15"
																},
																"nativeSrc": "3651:105:15",
																"nodeType": "YulFunctionCall",
																"src": "3651:105:15"
															},
															"nativeSrc": "3651:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "3651:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3493:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3546:4:15",
														"nodeType": "YulTypedName",
														"src": "3546:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3552:6:15",
														"nodeType": "YulTypedName",
														"src": "3552:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3560:7:15",
														"nodeType": "YulTypedName",
														"src": "3560:7:15",
														"type": ""
													}
												],
												"src": "3493:269:15"
											},
											{
												"body": {
													"nativeSrc": "3817:24:15",
													"nodeType": "YulBlock",
													"src": "3817:24:15",
													"statements": [
														{
															"nativeSrc": "3827:8:15",
															"nodeType": "YulAssignment",
															"src": "3827:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3834:1:15",
																"nodeType": "YulLiteral",
																"src": "3834:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3827:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3827:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3768:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3813:3:15",
														"nodeType": "YulTypedName",
														"src": "3813:3:15",
														"type": ""
													}
												],
												"src": "3768:73:15"
											},
											{
												"body": {
													"nativeSrc": "3900:136:15",
													"nodeType": "YulBlock",
													"src": "3900:136:15",
													"statements": [
														{
															"nativeSrc": "3910:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3910:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3924:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "3924:30:15"
																},
																"nativeSrc": "3924:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3924:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3914:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3914:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4009:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4009:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4015:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4015:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4023:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4023:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3965:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "3965:43:15"
																},
																"nativeSrc": "3965:65:15",
																"nodeType": "YulFunctionCall",
																"src": "3965:65:15"
															},
															"nativeSrc": "3965:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "3965:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3847:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3886:4:15",
														"nodeType": "YulTypedName",
														"src": "3886:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3892:6:15",
														"nodeType": "YulTypedName",
														"src": "3892:6:15",
														"type": ""
													}
												],
												"src": "3847:189:15"
											},
											{
												"body": {
													"nativeSrc": "4092:136:15",
													"nodeType": "YulBlock",
													"src": "4092:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4159:63:15",
																"nodeType": "YulBlock",
																"src": "4159:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4203:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "4203:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4210:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4210:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4173:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "4173:29:15"
																			},
																			"nativeSrc": "4173:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:39:15"
																		},
																		"nativeSrc": "4173:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4173:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4112:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4112:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4119:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4119:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4109:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4109:2:15"
																},
																"nativeSrc": "4109:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4109:14:15"
															},
															"nativeSrc": "4102:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4124:26:15",
																"nodeType": "YulBlock",
																"src": "4124:26:15",
																"statements": [
																	{
																		"nativeSrc": "4126:22:15",
																		"nodeType": "YulAssignment",
																		"src": "4126:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4139:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "4139:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4146:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4146:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4135:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4135:3:15"
																			},
																			"nativeSrc": "4135:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4135:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4126:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4126:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4106:2:15",
																"nodeType": "YulBlock",
																"src": "4106:2:15",
																"statements": []
															},
															"src": "4102:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4042:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4080:5:15",
														"nodeType": "YulTypedName",
														"src": "4080:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4087:3:15",
														"nodeType": "YulTypedName",
														"src": "4087:3:15",
														"type": ""
													}
												],
												"src": "4042:186:15"
											},
											{
												"body": {
													"nativeSrc": "4313:464:15",
													"nodeType": "YulBlock",
													"src": "4313:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4339:431:15",
																"nodeType": "YulBlock",
																"src": "4339:431:15",
																"statements": [
																	{
																		"nativeSrc": "4353:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4353:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4401:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "4401:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4369:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "4369:31:15"
																			},
																			"nativeSrc": "4369:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4369:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4357:8:15",
																				"nodeType": "YulTypedName",
																				"src": "4357:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4420:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4420:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4443:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "4443:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4471:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "4471:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4453:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "4453:17:15"
																					},
																					"nativeSrc": "4453:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4453:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4439:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4439:3:15"
																			},
																			"nativeSrc": "4439:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4439:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4424:11:15",
																				"nodeType": "YulTypedName",
																				"src": "4424:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4640:27:15",
																			"nodeType": "YulBlock",
																			"src": "4640:27:15",
																			"statements": [
																				{
																					"nativeSrc": "4642:23:15",
																					"nodeType": "YulAssignment",
																					"src": "4642:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4657:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "4657:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4642:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "4642:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4624:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "4624:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4636:2:15",
																					"nodeType": "YulLiteral",
																					"src": "4636:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4621:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "4621:2:15"
																			},
																			"nativeSrc": "4621:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4621:18:15"
																		},
																		"nativeSrc": "4618:49:15",
																		"nodeType": "YulIf",
																		"src": "4618:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4709:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "4709:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4726:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "4726:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4754:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4754:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4736:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "4736:17:15"
																							},
																							"nativeSrc": "4736:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "4736:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4722:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4722:3:15"
																					},
																					"nativeSrc": "4722:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4722:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4680:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "4680:28:15"
																			},
																			"nativeSrc": "4680:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4680:80:15"
																		},
																		"nativeSrc": "4680:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4680:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4330:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4330:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4335:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4335:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4327:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4327:2:15"
																},
																"nativeSrc": "4327:11:15",
																"nodeType": "YulFunctionCall",
																"src": "4327:11:15"
															},
															"nativeSrc": "4324:446:15",
															"nodeType": "YulIf",
															"src": "4324:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4234:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4289:5:15",
														"nodeType": "YulTypedName",
														"src": "4289:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4296:3:15",
														"nodeType": "YulTypedName",
														"src": "4296:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4301:10:15",
														"nodeType": "YulTypedName",
														"src": "4301:10:15",
														"type": ""
													}
												],
												"src": "4234:543:15"
											},
											{
												"body": {
													"nativeSrc": "4846:54:15",
													"nodeType": "YulBlock",
													"src": "4846:54:15",
													"statements": [
														{
															"nativeSrc": "4856:37:15",
															"nodeType": "YulAssignment",
															"src": "4856:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4881:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4881:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4887:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4887:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4877:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:15"
																},
																"nativeSrc": "4877:16:15",
																"nodeType": "YulFunctionCall",
																"src": "4877:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4856:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "4856:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4783:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4821:4:15",
														"nodeType": "YulTypedName",
														"src": "4821:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4827:5:15",
														"nodeType": "YulTypedName",
														"src": "4827:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4837:8:15",
														"nodeType": "YulTypedName",
														"src": "4837:8:15",
														"type": ""
													}
												],
												"src": "4783:117:15"
											},
											{
												"body": {
													"nativeSrc": "4957:118:15",
													"nodeType": "YulBlock",
													"src": "4957:118:15",
													"statements": [
														{
															"nativeSrc": "4967:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4967:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5016:1:15",
																						"nodeType": "YulLiteral",
																						"src": "5016:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5019:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5019:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5012:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5012:3:15"
																				},
																				"nativeSrc": "5012:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5012:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5031:1:15",
																						"nodeType": "YulLiteral",
																						"src": "5031:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5027:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5027:3:15"
																				},
																				"nativeSrc": "5027:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5027:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4983:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "4983:28:15"
																		},
																		"nativeSrc": "4983:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4983:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4979:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:15"
																},
																"nativeSrc": "4979:56:15",
																"nodeType": "YulFunctionCall",
																"src": "4979:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4971:4:15",
																	"nodeType": "YulTypedName",
																	"src": "4971:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5044:25:15",
															"nodeType": "YulAssignment",
															"src": "5044:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5058:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5058:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5064:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5064:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5054:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5054:3:15"
																},
																"nativeSrc": "5054:15:15",
																"nodeType": "YulFunctionCall",
																"src": "5054:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5044:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5044:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4906:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4934:4:15",
														"nodeType": "YulTypedName",
														"src": "4934:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4940:5:15",
														"nodeType": "YulTypedName",
														"src": "4940:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4950:6:15",
														"nodeType": "YulTypedName",
														"src": "4950:6:15",
														"type": ""
													}
												],
												"src": "4906:169:15"
											},
											{
												"body": {
													"nativeSrc": "5161:214:15",
													"nodeType": "YulBlock",
													"src": "5161:214:15",
													"statements": [
														{
															"nativeSrc": "5294:37:15",
															"nodeType": "YulAssignment",
															"src": "5294:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5321:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5321:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5327:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5327:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5302:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "5302:18:15"
																},
																"nativeSrc": "5302:29:15",
																"nodeType": "YulFunctionCall",
																"src": "5302:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5294:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:15"
																}
															]
														},
														{
															"nativeSrc": "5340:29:15",
															"nodeType": "YulAssignment",
															"src": "5340:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5351:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5351:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5361:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5361:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5364:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5364:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5357:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5357:3:15"
																		},
																		"nativeSrc": "5357:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5348:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5348:2:15"
																},
																"nativeSrc": "5348:21:15",
																"nodeType": "YulFunctionCall",
																"src": "5348:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5340:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5340:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5080:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5142:4:15",
														"nodeType": "YulTypedName",
														"src": "5142:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5148:3:15",
														"nodeType": "YulTypedName",
														"src": "5148:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5156:4:15",
														"nodeType": "YulTypedName",
														"src": "5156:4:15",
														"type": ""
													}
												],
												"src": "5080:295:15"
											},
											{
												"body": {
													"nativeSrc": "5472:1303:15",
													"nodeType": "YulBlock",
													"src": "5472:1303:15",
													"statements": [
														{
															"nativeSrc": "5483:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5483:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5530:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5530:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5497:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "5497:32:15"
																},
																"nativeSrc": "5497:37:15",
																"nodeType": "YulFunctionCall",
																"src": "5497:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5487:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5487:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5619:22:15",
																"nodeType": "YulBlock",
																"src": "5619:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5621:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "5621:16:15"
																			},
																			"nativeSrc": "5621:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5621:18:15"
																		},
																		"nativeSrc": "5621:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5621:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5591:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5591:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5599:18:15",
																		"nodeType": "YulLiteral",
																		"src": "5599:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5588:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5588:2:15"
																},
																"nativeSrc": "5588:30:15",
																"nodeType": "YulFunctionCall",
																"src": "5588:30:15"
															},
															"nativeSrc": "5585:56:15",
															"nodeType": "YulIf",
															"src": "5585:56:15"
														},
														{
															"nativeSrc": "5651:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5651:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5697:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "5697:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5691:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:15"
																		},
																		"nativeSrc": "5691:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5691:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5665:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "5665:25:15"
																},
																"nativeSrc": "5665:38:15",
																"nodeType": "YulFunctionCall",
																"src": "5665:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5655:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5655:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5796:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5796:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5802:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5802:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5810:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5810:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5750:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "5750:45:15"
																},
																"nativeSrc": "5750:67:15",
																"nodeType": "YulFunctionCall",
																"src": "5750:67:15"
															},
															"nativeSrc": "5750:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "5750:67:15"
														},
														{
															"nativeSrc": "5827:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5827:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5844:1:15",
																"nodeType": "YulLiteral",
																"src": "5844:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5831:9:15",
																	"nodeType": "YulTypedName",
																	"src": "5831:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5855:17:15",
															"nodeType": "YulAssignment",
															"src": "5855:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5868:4:15",
																"nodeType": "YulLiteral",
																"src": "5868:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5855:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "5855:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5919:611:15",
																		"nodeType": "YulBlock",
																		"src": "5919:611:15",
																		"statements": [
																			{
																				"nativeSrc": "5933:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5933:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5952:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "5952:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5964:4:15",
																									"nodeType": "YulLiteral",
																									"src": "5964:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5960:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "5960:3:15"
																							},
																							"nativeSrc": "5960:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "5960:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5948:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "5948:3:15"
																					},
																					"nativeSrc": "5948:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5948:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5937:7:15",
																						"nodeType": "YulTypedName",
																						"src": "5937:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5984:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5984:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6030:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "6030:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5998:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "5998:31:15"
																					},
																					"nativeSrc": "5998:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5998:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5988:6:15",
																						"nodeType": "YulTypedName",
																						"src": "5988:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6048:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6048:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6057:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6057:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6052:1:15",
																						"nodeType": "YulTypedName",
																						"src": "6052:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6116:163:15",
																					"nodeType": "YulBlock",
																					"src": "6116:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6141:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "6141:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6159:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "6159:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6164:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "6164:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6155:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "6155:3:15"
																												},
																												"nativeSrc": "6155:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "6155:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6149:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "6149:5:15"
																										},
																										"nativeSrc": "6149:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "6149:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6134:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "6134:6:15"
																								},
																								"nativeSrc": "6134:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6134:42:15"
																							},
																							"nativeSrc": "6134:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "6134:42:15"
																						},
																						{
																							"nativeSrc": "6193:24:15",
																							"nodeType": "YulAssignment",
																							"src": "6193:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6207:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "6207:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6215:1:15",
																										"nodeType": "YulLiteral",
																										"src": "6215:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6203:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "6203:3:15"
																								},
																								"nativeSrc": "6203:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6203:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6193:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "6193:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6234:31:15",
																							"nodeType": "YulAssignment",
																							"src": "6234:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6251:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "6251:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6262:2:15",
																										"nodeType": "YulLiteral",
																										"src": "6262:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6247:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "6247:3:15"
																								},
																								"nativeSrc": "6247:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6247:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6234:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "6234:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6082:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "6082:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6085:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "6085:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6079:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "6079:2:15"
																					},
																					"nativeSrc": "6079:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6079:14:15"
																				},
																				"nativeSrc": "6071:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6094:21:15",
																					"nodeType": "YulBlock",
																					"src": "6094:21:15",
																					"statements": [
																						{
																							"nativeSrc": "6096:17:15",
																							"nodeType": "YulAssignment",
																							"src": "6096:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6105:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "6105:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6108:4:15",
																										"nodeType": "YulLiteral",
																										"src": "6108:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6101:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "6101:3:15"
																								},
																								"nativeSrc": "6101:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6101:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6096:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "6096:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6075:3:15",
																					"nodeType": "YulBlock",
																					"src": "6075:3:15",
																					"statements": []
																				},
																				"src": "6071:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "6315:156:15",
																					"nodeType": "YulBlock",
																					"src": "6315:156:15",
																					"statements": [
																						{
																							"nativeSrc": "6333:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6333:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6360:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "6360:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6365:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "6365:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6356:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "6356:3:15"
																										},
																										"nativeSrc": "6356:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "6356:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6350:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "6350:5:15"
																								},
																								"nativeSrc": "6350:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6350:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6337:9:15",
																									"nodeType": "YulTypedName",
																									"src": "6337:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6400:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "6400:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6427:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "6427:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6442:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "6442:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6450:4:15",
																														"nodeType": "YulLiteral",
																														"src": "6450:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6438:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "6438:3:15"
																												},
																												"nativeSrc": "6438:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "6438:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6408:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "6408:18:15"
																										},
																										"nativeSrc": "6408:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "6408:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6393:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "6393:6:15"
																								},
																								"nativeSrc": "6393:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6393:64:15"
																							},
																							"nativeSrc": "6393:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "6393:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6298:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "6298:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6307:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "6307:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6295:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "6295:2:15"
																					},
																					"nativeSrc": "6295:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6295:19:15"
																				},
																				"nativeSrc": "6292:179:15",
																				"nodeType": "YulIf",
																				"src": "6292:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6491:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "6491:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6505:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "6505:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6513:1:15",
																											"nodeType": "YulLiteral",
																											"src": "6513:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6501:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "6501:3:15"
																									},
																									"nativeSrc": "6501:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "6501:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6517:1:15",
																									"nodeType": "YulLiteral",
																									"src": "6517:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6497:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "6497:3:15"
																							},
																							"nativeSrc": "6497:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "6497:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6484:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6484:6:15"
																					},
																					"nativeSrc": "6484:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6484:36:15"
																				},
																				"nativeSrc": "6484:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "6484:36:15"
																			}
																		]
																	},
																	"nativeSrc": "5912:618:15",
																	"nodeType": "YulCase",
																	"src": "5912:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5917:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5917:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6547:222:15",
																		"nodeType": "YulBlock",
																		"src": "6547:222:15",
																		"statements": [
																			{
																				"nativeSrc": "6561:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6561:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6574:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6574:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6565:5:15",
																						"nodeType": "YulTypedName",
																						"src": "6565:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6598:67:15",
																					"nodeType": "YulBlock",
																					"src": "6598:67:15",
																					"statements": [
																						{
																							"nativeSrc": "6616:35:15",
																							"nodeType": "YulAssignment",
																							"src": "6616:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6635:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "6635:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6640:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "6640:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6631:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "6631:3:15"
																										},
																										"nativeSrc": "6631:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "6631:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6625:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "6625:5:15"
																								},
																								"nativeSrc": "6625:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6625:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6616:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "6616:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6591:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "6591:6:15"
																				},
																				"nativeSrc": "6588:77:15",
																				"nodeType": "YulIf",
																				"src": "6588:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6685:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "6685:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6744:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "6744:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6751:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "6751:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6691:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "6691:52:15"
																							},
																							"nativeSrc": "6691:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "6691:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6678:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6678:6:15"
																					},
																					"nativeSrc": "6678:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6678:81:15"
																				},
																				"nativeSrc": "6678:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "6678:81:15"
																			}
																		]
																	},
																	"nativeSrc": "6539:230:15",
																	"nodeType": "YulCase",
																	"src": "6539:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5892:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5892:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5900:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5900:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5889:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5889:2:15"
																},
																"nativeSrc": "5889:14:15",
																"nodeType": "YulFunctionCall",
																"src": "5889:14:15"
															},
															"nativeSrc": "5882:887:15",
															"nodeType": "YulSwitch",
															"src": "5882:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5380:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5461:4:15",
														"nodeType": "YulTypedName",
														"src": "5461:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5467:3:15",
														"nodeType": "YulTypedName",
														"src": "5467:3:15",
														"type": ""
													}
												],
												"src": "5380:1395:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612f2d380380612f2d8339818101604052810190610031919061022f565b806040518060800160405280604b8152602001612ee2604b913961005a816100fb60201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100cb575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100c29190610269565b60405180910390fd5b6100da8161010e60201b60201c565b505f600360146101000a81548160ff0219169083151502179055505061058b565b806002908161010a91906104bc565b5050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101fe826101d5565b9050919050565b61020e816101f4565b8114610218575f80fd5b50565b5f8151905061022981610205565b92915050565b5f60208284031215610244576102436101d1565b5b5f6102518482850161021b565b91505092915050565b610263816101f4565b82525050565b5f60208201905061027c5f83018461025a565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102fd57607f821691505b6020821081036103105761030f6102b9565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103727fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610337565b61037c8683610337565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103c06103bb6103b684610394565b61039d565b610394565b9050919050565b5f819050919050565b6103d9836103a6565b6103ed6103e5826103c7565b848454610343565b825550505050565b5f90565b6104016103f5565b61040c8184846103d0565b505050565b5b8181101561042f576104245f826103f9565b600181019050610412565b5050565b601f8211156104745761044581610316565b61044e84610328565b8101602085101561045d578190505b61047161046985610328565b830182610411565b50505b505050565b5f82821c905092915050565b5f6104945f1984600802610479565b1980831691505092915050565b5f6104ac8383610485565b9150826002028217905092915050565b6104c582610282565b67ffffffffffffffff8111156104de576104dd61028c565b5b6104e882546102e6565b6104f3828285610433565b5f60209050601f831160018114610524575f8415610512578287015190505b61051c85826104a1565b865550610583565b601f19841661053286610316565b5f5b8281101561055957848901518255600182019150602085019450602081019050610534565b868310156105765784890151610572601f891682610485565b8355505b6001600288020188555050505b505050505050565b61294a806105985f395ff3fe608060405234801561000f575f80fd5b5060043610610108575f3560e01c80635c975abb116100a05780638da5cb5b1161006f5780638da5cb5b14610278578063a22cb46514610296578063e985e9c5146102b2578063f242432a146102e2578063f2fde38b146102fe57610108565b80635c975abb1461022a578063715018a614610248578063731133e9146102525780638456cb591461026e57610108565b80631f7fdffa116100dc5780631f7fdffa146101b85780632eb2c2d6146101d45780633f4ba83a146101f05780634e1273f4146101fa57610108565b8062fdd58e1461010c57806301ffc9a71461013c57806302fe53051461016c5780630e89341c14610188575b5f80fd5b61012660048036038101906101219190611964565b61031a565b60405161013391906119b1565b60405180910390f35b61015660048036038101906101519190611a1f565b61036f565b6040516101639190611a64565b60405180910390f35b61018660048036038101906101819190611bb9565b610450565b005b6101a2600480360381019061019d9190611c00565b610464565b6040516101af9190611c8b565b60405180910390f35b6101d260048036038101906101cd9190611e0d565b6104f6565b005b6101ee60048036038101906101e99190611ec5565b610510565b005b6101f86105b7565b005b610214600480360381019061020f9190612050565b6105c9565b604051610221919061217d565b60405180910390f35b6102326106d0565b60405161023f9190611a64565b60405180910390f35b6102506106e6565b005b61026c6004803603810190610267919061219d565b6106f9565b005b610276610713565b005b610280610725565b60405161028d919061222c565b60405180910390f35b6102b060048036038101906102ab919061226f565b61074d565b005b6102cc60048036038101906102c791906122ad565b610763565b6040516102d99190611a64565b60405180910390f35b6102fc60048036038101906102f791906122eb565b6107f1565b005b6103186004803603810190610313919061237e565b610898565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043957507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061044957506104488261091c565b5b9050919050565b610458610985565b61046181610a0c565b50565b606060028054610473906123d6565b80601f016020809104026020016040519081016040528092919081815260200182805461049f906123d6565b80156104ea5780601f106104c1576101008083540402835291602001916104ea565b820191905f5260205f20905b8154815290600101906020018083116104cd57829003601f168201915b50505050509050919050565b6104fe610985565b61050a84848484610a1f565b50505050565b5f610519610aa2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561055e575061055c8682610763565b155b156105a25780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610599929190612406565b60405180910390fd5b6105af8686868686610aa9565b505050505050565b6105bf610985565b6105c7610b9d565b565b6060815183511461061557815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161060c92919061242d565b60405180910390fd5b5f835167ffffffffffffffff81111561063157610630611a95565b5b60405190808252806020026020018201604052801561065f5781602001602082028036833780820191505090505b5090505f5b84518110156106c55761069b6106838287610bff90919063ffffffff16565b6106968387610c1290919063ffffffff16565b61031a565b8282815181106106ae576106ad612454565b5b602002602001018181525050806001019050610664565b508091505092915050565b5f600360149054906101000a900460ff16905090565b6106ee610985565b6106f75f610c25565b565b610701610985565b61070d84848484610ce8565b50505050565b61071b610985565b610723610d7d565b565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61075f610758610aa2565b8383610de0565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6107fa610aa2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561083f575061083d8682610763565b155b156108835780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161087a929190612406565b60405180910390fd5b6108908686868686610f49565b505050505050565b6108a0610985565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610910575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610907919061222c565b60405180910390fd5b61091981610c25565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61098d610aa2565b73ffffffffffffffffffffffffffffffffffffffff166109ab610725565b73ffffffffffffffffffffffffffffffffffffffff1614610a0a576109ce610aa2565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a01919061222c565b60405180910390fd5b565b8060029081610a1b919061261e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a8f575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610a86919061222c565b60405180910390fd5b610a9c5f8585858561104f565b50505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b19575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b10919061222c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b89575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b80919061222c565b60405180910390fd5b610b96858585858561104f565b5050505050565b610ba56110fb565b5f600360146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610be8610aa2565b604051610bf5919061222c565b60405180910390a1565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d58575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610d4f919061222c565b60405180910390fd5b5f80610d64858561113b565b91509150610d755f8784848761104f565b505050505050565b610d8561116b565b6001600360146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610dc9610aa2565b604051610dd6919061222c565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e50575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610e47919061222c565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f3c9190611a64565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fb9575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610fb0919061222c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611029575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611020919061222c565b60405180910390fd5b5f80611035858561113b565b91509150611046878784848761104f565b50505050505050565b61105b858585856111ac565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146110f4575f611097610aa2565b905060018451036110e3575f6110b65f86610c1290919063ffffffff16565b90505f6110cc5f86610c1290919063ffffffff16565b90506110dc8389898585896111be565b50506110f2565b6110f181878787878761136d565b5b505b5050505050565b6111036106d0565b611139576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b6111736106d0565b156111aa576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6111b88484848461151c565b50505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611365578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161121e95949392919061273f565b6020604051808303815f875af192505050801561125957506040513d601f19601f8201168201806040525081019061125691906127ab565b60015b6112da573d805f8114611287576040519150601f19603f3d011682016040523d82523d5f602084013e61128c565b606091505b505f8151036112d257846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112c9919061222c565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461136357846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161135a919061222c565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611514578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016113cd9594939291906127d6565b6020604051808303815f875af192505050801561140857506040513d601f19601f8201168201806040525081019061140591906127ab565b60015b611489573d805f8114611436576040519150601f19603f3d011682016040523d82523d5f602084013e61143b565b606091505b505f81510361148157846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611478919061222c565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461151257846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611509919061222c565b60405180910390fd5b505b505050505050565b61152461116b565b61153084848484611536565b50505050565b805182511461158057815181516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161157792919061242d565b60405180910390fd5b5f611589610aa2565b90505f5b8351811015611785575f6115aa8286610c1290919063ffffffff16565b90505f6115c08386610c1290919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146116e3575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561168f57888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401611686949392919061283c565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461177857805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461177091906128ac565b925050819055505b505080600101905061158d565b506001835103611840575f6117a35f85610c1290919063ffffffff16565b90505f6117b95f85610c1290919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161183192919061242d565b60405180910390a450506118bf565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516118b69291906128df565b60405180910390a45b5050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611900826118d7565b9050919050565b611910816118f6565b811461191a575f80fd5b50565b5f8135905061192b81611907565b92915050565b5f819050919050565b61194381611931565b811461194d575f80fd5b50565b5f8135905061195e8161193a565b92915050565b5f806040838503121561197a576119796118cf565b5b5f6119878582860161191d565b925050602061199885828601611950565b9150509250929050565b6119ab81611931565b82525050565b5f6020820190506119c45f8301846119a2565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119fe816119ca565b8114611a08575f80fd5b50565b5f81359050611a19816119f5565b92915050565b5f60208284031215611a3457611a336118cf565b5b5f611a4184828501611a0b565b91505092915050565b5f8115159050919050565b611a5e81611a4a565b82525050565b5f602082019050611a775f830184611a55565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611acb82611a85565b810181811067ffffffffffffffff82111715611aea57611ae9611a95565b5b80604052505050565b5f611afc6118c6565b9050611b088282611ac2565b919050565b5f67ffffffffffffffff821115611b2757611b26611a95565b5b611b3082611a85565b9050602081019050919050565b828183375f83830152505050565b5f611b5d611b5884611b0d565b611af3565b905082815260208101848484011115611b7957611b78611a81565b5b611b84848285611b3d565b509392505050565b5f82601f830112611ba057611b9f611a7d565b5b8135611bb0848260208601611b4b565b91505092915050565b5f60208284031215611bce57611bcd6118cf565b5b5f82013567ffffffffffffffff811115611beb57611bea6118d3565b5b611bf784828501611b8c565b91505092915050565b5f60208284031215611c1557611c146118cf565b5b5f611c2284828501611950565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611c5d82611c2b565b611c678185611c35565b9350611c77818560208601611c45565b611c8081611a85565b840191505092915050565b5f6020820190508181035f830152611ca38184611c53565b905092915050565b5f67ffffffffffffffff821115611cc557611cc4611a95565b5b602082029050602081019050919050565b5f80fd5b5f611cec611ce784611cab565b611af3565b90508083825260208201905060208402830185811115611d0f57611d0e611cd6565b5b835b81811015611d385780611d248882611950565b845260208401935050602081019050611d11565b5050509392505050565b5f82601f830112611d5657611d55611a7d565b5b8135611d66848260208601611cda565b91505092915050565b5f67ffffffffffffffff821115611d8957611d88611a95565b5b611d9282611a85565b9050602081019050919050565b5f611db1611dac84611d6f565b611af3565b905082815260208101848484011115611dcd57611dcc611a81565b5b611dd8848285611b3d565b509392505050565b5f82601f830112611df457611df3611a7d565b5b8135611e04848260208601611d9f565b91505092915050565b5f805f8060808587031215611e2557611e246118cf565b5b5f611e328782880161191d565b945050602085013567ffffffffffffffff811115611e5357611e526118d3565b5b611e5f87828801611d42565b935050604085013567ffffffffffffffff811115611e8057611e7f6118d3565b5b611e8c87828801611d42565b925050606085013567ffffffffffffffff811115611ead57611eac6118d3565b5b611eb987828801611de0565b91505092959194509250565b5f805f805f60a08688031215611ede57611edd6118cf565b5b5f611eeb8882890161191d565b9550506020611efc8882890161191d565b945050604086013567ffffffffffffffff811115611f1d57611f1c6118d3565b5b611f2988828901611d42565b935050606086013567ffffffffffffffff811115611f4a57611f496118d3565b5b611f5688828901611d42565b925050608086013567ffffffffffffffff811115611f7757611f766118d3565b5b611f8388828901611de0565b9150509295509295909350565b5f67ffffffffffffffff821115611faa57611fa9611a95565b5b602082029050602081019050919050565b5f611fcd611fc884611f90565b611af3565b90508083825260208201905060208402830185811115611ff057611fef611cd6565b5b835b818110156120195780612005888261191d565b845260208401935050602081019050611ff2565b5050509392505050565b5f82601f83011261203757612036611a7d565b5b8135612047848260208601611fbb565b91505092915050565b5f8060408385031215612066576120656118cf565b5b5f83013567ffffffffffffffff811115612083576120826118d3565b5b61208f85828601612023565b925050602083013567ffffffffffffffff8111156120b0576120af6118d3565b5b6120bc85828601611d42565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6120f881611931565b82525050565b5f61210983836120ef565b60208301905092915050565b5f602082019050919050565b5f61212b826120c6565b61213581856120d0565b9350612140836120e0565b805f5b8381101561217057815161215788826120fe565b975061216283612115565b925050600181019050612143565b5085935050505092915050565b5f6020820190508181035f8301526121958184612121565b905092915050565b5f805f80608085870312156121b5576121b46118cf565b5b5f6121c28782880161191d565b94505060206121d387828801611950565b93505060406121e487828801611950565b925050606085013567ffffffffffffffff811115612205576122046118d3565b5b61221187828801611de0565b91505092959194509250565b612226816118f6565b82525050565b5f60208201905061223f5f83018461221d565b92915050565b61224e81611a4a565b8114612258575f80fd5b50565b5f8135905061226981612245565b92915050565b5f8060408385031215612285576122846118cf565b5b5f6122928582860161191d565b92505060206122a38582860161225b565b9150509250929050565b5f80604083850312156122c3576122c26118cf565b5b5f6122d08582860161191d565b92505060206122e18582860161191d565b9150509250929050565b5f805f805f60a08688031215612304576123036118cf565b5b5f6123118882890161191d565b95505060206123228882890161191d565b945050604061233388828901611950565b935050606061234488828901611950565b925050608086013567ffffffffffffffff811115612365576123646118d3565b5b61237188828901611de0565b9150509295509295909350565b5f60208284031215612393576123926118cf565b5b5f6123a08482850161191d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806123ed57607f821691505b602082108103612400576123ff6123a9565b5b50919050565b5f6040820190506124195f83018561221d565b612426602083018461221d565b9392505050565b5f6040820190506124405f8301856119a2565b61244d60208301846119a2565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826124a2565b6124e786836124a2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61252261251d61251884611931565b6124ff565b611931565b9050919050565b5f819050919050565b61253b83612508565b61254f61254782612529565b8484546124ae565b825550505050565b5f90565b612563612557565b61256e818484612532565b505050565b5b81811015612591576125865f8261255b565b600181019050612574565b5050565b601f8211156125d6576125a781612481565b6125b084612493565b810160208510156125bf578190505b6125d36125cb85612493565b830182612573565b50505b505050565b5f82821c905092915050565b5f6125f65f19846008026125db565b1980831691505092915050565b5f61260e83836125e7565b9150826002028217905092915050565b61262782611c2b565b67ffffffffffffffff8111156126405761263f611a95565b5b61264a82546123d6565b612655828285612595565b5f60209050601f831160018114612686575f8415612674578287015190505b61267e8582612603565b8655506126e5565b601f19841661269486612481565b5f5b828110156126bb57848901518255600182019150602085019450602081019050612696565b868310156126d857848901516126d4601f8916826125e7565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f612711826126ed565b61271b81856126f7565b935061272b818560208601611c45565b61273481611a85565b840191505092915050565b5f60a0820190506127525f83018861221d565b61275f602083018761221d565b61276c60408301866119a2565b61277960608301856119a2565b818103608083015261278b8184612707565b90509695505050505050565b5f815190506127a5816119f5565b92915050565b5f602082840312156127c0576127bf6118cf565b5b5f6127cd84828501612797565b91505092915050565b5f60a0820190506127e95f83018861221d565b6127f6602083018761221d565b81810360408301526128088186612121565b9050818103606083015261281c8185612121565b905081810360808301526128308184612707565b90509695505050505050565b5f60808201905061284f5f83018761221d565b61285c60208301866119a2565b61286960408301856119a2565b61287660608301846119a2565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6128b682611931565b91506128c183611931565b92508282019050808211156128d9576128d861287f565b5b92915050565b5f6040820190508181035f8301526128f78185612121565b9050818103602083015261290b8184612121565b9050939250505056fea2646970667358221220765dcb65d43641e58c9e66255e7b4dab49010423ba70d8452b8b0c5e53923a1e64736f6c6343000819003368747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4a4c44536a722f6d657461646174615f626c6f636b636861696e2f6d61696e2f7b69647d2e6a736f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2F2D CODESIZE SUB DUP1 PUSH2 0x2F2D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4B DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2EE2 PUSH1 0x4B SWAP2 CODECOPY PUSH2 0x5A DUP2 PUSH2 0xFB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA DUP2 PUSH2 0x10E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH2 0x58B JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x4BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE DUP3 PUSH2 0x1D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20E DUP2 PUSH2 0x1F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x229 DUP2 PUSH2 0x205 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244 JUMPI PUSH2 0x243 PUSH2 0x1D1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x251 DUP5 DUP3 DUP6 ADD PUSH2 0x21B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x263 DUP2 PUSH2 0x1F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27C PUSH0 DUP4 ADD DUP5 PUSH2 0x25A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2FD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x310 JUMPI PUSH2 0x30F PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x372 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x337 JUMP JUMPDEST PUSH2 0x37C DUP7 DUP4 PUSH2 0x337 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3C0 PUSH2 0x3BB PUSH2 0x3B6 DUP5 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D9 DUP4 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x3E5 DUP3 PUSH2 0x3C7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x343 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x401 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x40C DUP2 DUP5 DUP5 PUSH2 0x3D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x42F JUMPI PUSH2 0x424 PUSH0 DUP3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x412 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x474 JUMPI PUSH2 0x445 DUP2 PUSH2 0x316 JUMP JUMPDEST PUSH2 0x44E DUP5 PUSH2 0x328 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x45D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x471 PUSH2 0x469 DUP6 PUSH2 0x328 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x411 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x494 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x479 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4AC DUP4 DUP4 PUSH2 0x485 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4C5 DUP3 PUSH2 0x282 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DE JUMPI PUSH2 0x4DD PUSH2 0x28C JUMP JUMPDEST JUMPDEST PUSH2 0x4E8 DUP3 SLOAD PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x4F3 DUP3 DUP3 DUP6 PUSH2 0x433 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x524 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x512 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x51C DUP6 DUP3 PUSH2 0x4A1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x583 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x532 DUP7 PUSH2 0x316 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x559 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x534 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x576 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x572 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x485 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x294A DUP1 PUSH2 0x598 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x108 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2FE JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x26E JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x1F7FDFFA GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1FA JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x188 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x510 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x217D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x6E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x6F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH2 0x713 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH2 0x74D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x22EB JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x237E JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x439 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x449 JUMPI POP PUSH2 0x448 DUP3 PUSH2 0x91C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x458 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x461 DUP2 PUSH2 0xA0C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x473 SWAP1 PUSH2 0x23D6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0x23D6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x985 JUMP JUMPDEST PUSH2 0x50A DUP5 DUP5 DUP5 DUP5 PUSH2 0xA1F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x519 PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x55E JUMPI POP PUSH2 0x55C DUP7 DUP3 PUSH2 0x763 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5A2 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x599 SWAP3 SWAP2 SWAP1 PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5AF DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xAA9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x985 JUMP JUMPDEST PUSH2 0x5C7 PUSH2 0xB9D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x615 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60C SWAP3 SWAP2 SWAP1 PUSH2 0x242D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x631 JUMPI PUSH2 0x630 PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6C5 JUMPI PUSH2 0x69B PUSH2 0x683 DUP3 DUP8 PUSH2 0xBFF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x696 DUP4 DUP8 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6AE JUMPI PUSH2 0x6AD PUSH2 0x2454 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x664 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6EE PUSH2 0x985 JUMP JUMPDEST PUSH2 0x6F7 PUSH0 PUSH2 0xC25 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x701 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x70D DUP5 DUP5 DUP5 DUP5 PUSH2 0xCE8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x71B PUSH2 0x985 JUMP JUMPDEST PUSH2 0x723 PUSH2 0xD7D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x75F PUSH2 0x758 PUSH2 0xAA2 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDE0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7FA PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x83F JUMPI POP PUSH2 0x83D DUP7 DUP3 PUSH2 0x763 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x883 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87A SWAP3 SWAP2 SWAP1 PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x890 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xF49 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0x985 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x910 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x919 DUP2 PUSH2 0xC25 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98D PUSH2 0xAA2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9AB PUSH2 0x725 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA0A JUMPI PUSH2 0x9CE PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA01 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xA1B SWAP2 SWAP1 PUSH2 0x261E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA86 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9C PUSH0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x104F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB19 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB10 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB89 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB96 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x104F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBA5 PUSH2 0x10FB JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xBE8 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD58 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4F SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xD64 DUP6 DUP6 PUSH2 0x113B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xD75 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x104F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD85 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xDC9 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE50 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE47 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1029 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1020 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x1035 DUP6 DUP6 PUSH2 0x113B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1046 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x104F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x105B DUP6 DUP6 DUP6 DUP6 PUSH2 0x11AC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10F4 JUMPI PUSH0 PUSH2 0x1097 PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x10E3 JUMPI PUSH0 PUSH2 0x10B6 PUSH0 DUP7 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x10CC PUSH0 DUP7 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10DC DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x11BE JUMP JUMPDEST POP POP PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x10F1 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x136D JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1103 PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x1139 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1173 PUSH2 0x6D0 JUMP JUMPDEST ISZERO PUSH2 0x11AA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x11B8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x151C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1365 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1259 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1256 SWAP2 SWAP1 PUSH2 0x27AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12DA JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1287 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x128C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x12D2 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C9 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1363 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135A SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1514 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1408 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1405 SWAP2 SWAP1 PUSH2 0x27AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1489 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1436 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x143B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1481 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1478 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1512 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1509 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1524 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x1530 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1536 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1580 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1577 SWAP3 SWAP2 SWAP1 PUSH2 0x242D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1589 PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1785 JUMPI PUSH0 PUSH2 0x15AA DUP3 DUP7 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x15C0 DUP4 DUP7 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E3 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x168F JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1686 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x283C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1778 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1770 SWAP2 SWAP1 PUSH2 0x28AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x158D JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1840 JUMPI PUSH0 PUSH2 0x17A3 PUSH0 DUP6 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x17B9 PUSH0 DUP6 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1831 SWAP3 SWAP2 SWAP1 PUSH2 0x242D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x18BF JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x18B6 SWAP3 SWAP2 SWAP1 PUSH2 0x28DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1900 DUP3 PUSH2 0x18D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1910 DUP2 PUSH2 0x18F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x191A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x192B DUP2 PUSH2 0x1907 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1943 DUP2 PUSH2 0x1931 JUMP JUMPDEST DUP2 EQ PUSH2 0x194D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x195E DUP2 PUSH2 0x193A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x197A JUMPI PUSH2 0x1979 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1987 DUP6 DUP3 DUP7 ADD PUSH2 0x191D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1998 DUP6 DUP3 DUP7 ADD PUSH2 0x1950 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x19AB DUP2 PUSH2 0x1931 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x19A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19FE DUP2 PUSH2 0x19CA JUMP JUMPDEST DUP2 EQ PUSH2 0x1A08 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A19 DUP2 PUSH2 0x19F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A34 JUMPI PUSH2 0x1A33 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A41 DUP5 DUP3 DUP6 ADD PUSH2 0x1A0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A5E DUP2 PUSH2 0x1A4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A77 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1ACB DUP3 PUSH2 0x1A85 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1AEA JUMPI PUSH2 0x1AE9 PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFC PUSH2 0x18C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B08 DUP3 DUP3 PUSH2 0x1AC2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B27 JUMPI PUSH2 0x1B26 PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST PUSH2 0x1B30 DUP3 PUSH2 0x1A85 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5D PUSH2 0x1B58 DUP5 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B79 JUMPI PUSH2 0x1B78 PUSH2 0x1A81 JUMP JUMPDEST JUMPDEST PUSH2 0x1B84 DUP5 DUP3 DUP6 PUSH2 0x1B3D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BA0 JUMPI PUSH2 0x1B9F PUSH2 0x1A7D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BB0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B4B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCE JUMPI PUSH2 0x1BCD PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BEB JUMPI PUSH2 0x1BEA PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1BF7 DUP5 DUP3 DUP6 ADD PUSH2 0x1B8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C15 JUMPI PUSH2 0x1C14 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C22 DUP5 DUP3 DUP6 ADD PUSH2 0x1950 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5D DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x1C67 DUP2 DUP6 PUSH2 0x1C35 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C77 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x1C80 DUP2 PUSH2 0x1A85 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CA3 DUP2 DUP5 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CC5 JUMPI PUSH2 0x1CC4 PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1CEC PUSH2 0x1CE7 DUP5 PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1D0F JUMPI PUSH2 0x1D0E PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D38 JUMPI DUP1 PUSH2 0x1D24 DUP9 DUP3 PUSH2 0x1950 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D11 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D56 JUMPI PUSH2 0x1D55 PUSH2 0x1A7D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D66 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST PUSH2 0x1D92 DUP3 PUSH2 0x1A85 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB1 PUSH2 0x1DAC DUP5 PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1DCD JUMPI PUSH2 0x1DCC PUSH2 0x1A81 JUMP JUMPDEST JUMPDEST PUSH2 0x1DD8 DUP5 DUP3 DUP6 PUSH2 0x1B3D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DF4 JUMPI PUSH2 0x1DF3 PUSH2 0x1A7D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E04 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E25 JUMPI PUSH2 0x1E24 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E32 DUP8 DUP3 DUP9 ADD PUSH2 0x191D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E53 JUMPI PUSH2 0x1E52 PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1E5F DUP8 DUP3 DUP9 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E80 JUMPI PUSH2 0x1E7F PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1E8C DUP8 DUP3 DUP9 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EAD JUMPI PUSH2 0x1EAC PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1EB9 DUP8 DUP3 DUP9 ADD PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EDE JUMPI PUSH2 0x1EDD PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EEB DUP9 DUP3 DUP10 ADD PUSH2 0x191D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1EFC DUP9 DUP3 DUP10 ADD PUSH2 0x191D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F1D JUMPI PUSH2 0x1F1C PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1F29 DUP9 DUP3 DUP10 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4A JUMPI PUSH2 0x1F49 PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1F56 DUP9 DUP3 DUP10 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F77 JUMPI PUSH2 0x1F76 PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1F83 DUP9 DUP3 DUP10 ADD PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FCD PUSH2 0x1FC8 DUP5 PUSH2 0x1F90 JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1FF0 JUMPI PUSH2 0x1FEF PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2019 JUMPI DUP1 PUSH2 0x2005 DUP9 DUP3 PUSH2 0x191D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FF2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2037 JUMPI PUSH2 0x2036 PUSH2 0x1A7D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2047 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2066 JUMPI PUSH2 0x2065 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x208F DUP6 DUP3 DUP7 ADD PUSH2 0x2023 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20B0 JUMPI PUSH2 0x20AF PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x20BC DUP6 DUP3 DUP7 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F8 DUP2 PUSH2 0x1931 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2109 DUP4 DUP4 PUSH2 0x20EF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x212B DUP3 PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x2135 DUP2 DUP6 PUSH2 0x20D0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2140 DUP4 PUSH2 0x20E0 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2170 JUMPI DUP2 MLOAD PUSH2 0x2157 DUP9 DUP3 PUSH2 0x20FE JUMP JUMPDEST SWAP8 POP PUSH2 0x2162 DUP4 PUSH2 0x2115 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2143 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2195 DUP2 DUP5 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x21B5 JUMPI PUSH2 0x21B4 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21C2 DUP8 DUP3 DUP9 ADD PUSH2 0x191D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x21D3 DUP8 DUP3 DUP9 ADD PUSH2 0x1950 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x21E4 DUP8 DUP3 DUP9 ADD PUSH2 0x1950 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2205 JUMPI PUSH2 0x2204 PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x2211 DUP8 DUP3 DUP9 ADD PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2226 DUP2 PUSH2 0x18F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x223F PUSH0 DUP4 ADD DUP5 PUSH2 0x221D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x224E DUP2 PUSH2 0x1A4A JUMP JUMPDEST DUP2 EQ PUSH2 0x2258 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2269 DUP2 PUSH2 0x2245 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2285 JUMPI PUSH2 0x2284 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2292 DUP6 DUP3 DUP7 ADD PUSH2 0x191D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22A3 DUP6 DUP3 DUP7 ADD PUSH2 0x225B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C3 JUMPI PUSH2 0x22C2 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22D0 DUP6 DUP3 DUP7 ADD PUSH2 0x191D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22E1 DUP6 DUP3 DUP7 ADD PUSH2 0x191D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2304 JUMPI PUSH2 0x2303 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2311 DUP9 DUP3 DUP10 ADD PUSH2 0x191D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2322 DUP9 DUP3 DUP10 ADD PUSH2 0x191D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2333 DUP9 DUP3 DUP10 ADD PUSH2 0x1950 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2344 DUP9 DUP3 DUP10 ADD PUSH2 0x1950 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2365 JUMPI PUSH2 0x2364 PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x2371 DUP9 DUP3 DUP10 ADD PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2393 JUMPI PUSH2 0x2392 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23A0 DUP5 DUP3 DUP6 ADD PUSH2 0x191D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x23ED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2400 JUMPI PUSH2 0x23FF PUSH2 0x23A9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2419 PUSH0 DUP4 ADD DUP6 PUSH2 0x221D JUMP JUMPDEST PUSH2 0x2426 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x221D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2440 PUSH0 DUP4 ADD DUP6 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0x244D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x24DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0x24E7 DUP7 DUP4 PUSH2 0x24A2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2522 PUSH2 0x251D PUSH2 0x2518 DUP5 PUSH2 0x1931 JUMP JUMPDEST PUSH2 0x24FF JUMP JUMPDEST PUSH2 0x1931 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x253B DUP4 PUSH2 0x2508 JUMP JUMPDEST PUSH2 0x254F PUSH2 0x2547 DUP3 PUSH2 0x2529 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x24AE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2563 PUSH2 0x2557 JUMP JUMPDEST PUSH2 0x256E DUP2 DUP5 DUP5 PUSH2 0x2532 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2591 JUMPI PUSH2 0x2586 PUSH0 DUP3 PUSH2 0x255B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2574 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x25D6 JUMPI PUSH2 0x25A7 DUP2 PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x25B0 DUP5 PUSH2 0x2493 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x25BF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x25D3 PUSH2 0x25CB DUP6 PUSH2 0x2493 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2573 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25F6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x25DB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x260E DUP4 DUP4 PUSH2 0x25E7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2627 DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2640 JUMPI PUSH2 0x263F PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST PUSH2 0x264A DUP3 SLOAD PUSH2 0x23D6 JUMP JUMPDEST PUSH2 0x2655 DUP3 DUP3 DUP6 PUSH2 0x2595 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2686 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2674 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x267E DUP6 DUP3 PUSH2 0x2603 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x26E5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2694 DUP7 PUSH2 0x2481 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x26BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2696 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x26D8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x26D4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x25E7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2711 DUP3 PUSH2 0x26ED JUMP JUMPDEST PUSH2 0x271B DUP2 DUP6 PUSH2 0x26F7 JUMP JUMPDEST SWAP4 POP PUSH2 0x272B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x2734 DUP2 PUSH2 0x1A85 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2752 PUSH0 DUP4 ADD DUP9 PUSH2 0x221D JUMP JUMPDEST PUSH2 0x275F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x221D JUMP JUMPDEST PUSH2 0x276C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0x2779 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x19A2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x278B DUP2 DUP5 PUSH2 0x2707 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27A5 DUP2 PUSH2 0x19F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27C0 JUMPI PUSH2 0x27BF PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27CD DUP5 DUP3 DUP6 ADD PUSH2 0x2797 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x27E9 PUSH0 DUP4 ADD DUP9 PUSH2 0x221D JUMP JUMPDEST PUSH2 0x27F6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x221D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2808 DUP2 DUP7 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x281C DUP2 DUP6 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2830 DUP2 DUP5 PUSH2 0x2707 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x284F PUSH0 DUP4 ADD DUP8 PUSH2 0x221D JUMP JUMPDEST PUSH2 0x285C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0x2869 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0x2876 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x19A2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28B6 DUP3 PUSH2 0x1931 JUMP JUMPDEST SWAP2 POP PUSH2 0x28C1 DUP4 PUSH2 0x1931 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x28D9 JUMPI PUSH2 0x28D8 PUSH2 0x287F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28F7 DUP2 DUP6 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x290B DUP2 DUP5 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x5DCB65D43641E58C9E66255E7B4DAB49010423BA70D845 0x2B DUP12 0xC MCOPY MSTORE8 SWAP3 GASPRICE 0x1E PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER PUSH9 0x747470733A2F2F7261 PUSH24 0x2E67697468756275736572636F6E74656E742E636F6D2F4A 0x4C PREVRANDAO MSTORE8 PUSH11 0x722F6D657461646174615F PUSH3 0x6C6F63 PUSH12 0x636861696E2F6D61696E2F7B PUSH10 0x647D2E6A736F6E000000 ",
							"sourceMap": "300:1393:14:-:0;;;656:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;801:12;1251:62:2;;;;;;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1241:5:9;1231:7;;:15;;;;;;;;;;;;;;;;;;656:165:14;300:1393;;10282:86:2;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:15:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:99::-;1606:6;1640:5;1634:12;1624:22;;1554:99;;;:::o;1659:180::-;1707:77;1704:1;1697:88;1804:4;1801:1;1794:15;1828:4;1825:1;1818:15;1845:180;1893:77;1890:1;1883:88;1990:4;1987:1;1980:15;2014:4;2011:1;2004:15;2031:320;2075:6;2112:1;2106:4;2102:12;2092:22;;2159:1;2153:4;2149:12;2180:18;2170:81;;2236:4;2228:6;2224:17;2214:27;;2170:81;2298:2;2290:6;2287:14;2267:18;2264:38;2261:84;;2317:18;;:::i;:::-;2261:84;2082:269;2031:320;;;:::o;2357:141::-;2406:4;2429:3;2421:11;;2452:3;2449:1;2442:14;2486:4;2483:1;2473:18;2465:26;;2357:141;;;:::o;2504:93::-;2541:6;2588:2;2583;2576:5;2572:14;2568:23;2558:33;;2504:93;;;:::o;2603:107::-;2647:8;2697:5;2691:4;2687:16;2666:37;;2603:107;;;;:::o;2716:393::-;2785:6;2835:1;2823:10;2819:18;2858:97;2888:66;2877:9;2858:97;:::i;:::-;2976:39;3006:8;2995:9;2976:39;:::i;:::-;2964:51;;3048:4;3044:9;3037:5;3033:21;3024:30;;3097:4;3087:8;3083:19;3076:5;3073:30;3063:40;;2792:317;;2716:393;;;;;:::o;3115:77::-;3152:7;3181:5;3170:16;;3115:77;;;:::o;3198:60::-;3226:3;3247:5;3240:12;;3198:60;;;:::o;3264:142::-;3314:9;3347:53;3365:34;3374:24;3392:5;3374:24;:::i;:::-;3365:34;:::i;:::-;3347:53;:::i;:::-;3334:66;;3264:142;;;:::o;3412:75::-;3455:3;3476:5;3469:12;;3412:75;;;:::o;3493:269::-;3603:39;3634:7;3603:39;:::i;:::-;3664:91;3713:41;3737:16;3713:41;:::i;:::-;3705:6;3698:4;3692:11;3664:91;:::i;:::-;3658:4;3651:105;3569:193;3493:269;;;:::o;3768:73::-;3813:3;3768:73;:::o;3847:189::-;3924:32;;:::i;:::-;3965:65;4023:6;4015;4009:4;3965:65;:::i;:::-;3900:136;3847:189;;:::o;4042:186::-;4102:120;4119:3;4112:5;4109:14;4102:120;;;4173:39;4210:1;4203:5;4173:39;:::i;:::-;4146:1;4139:5;4135:13;4126:22;;4102:120;;;4042:186;;:::o;4234:543::-;4335:2;4330:3;4327:11;4324:446;;;4369:38;4401:5;4369:38;:::i;:::-;4453:29;4471:10;4453:29;:::i;:::-;4443:8;4439:44;4636:2;4624:10;4621:18;4618:49;;;4657:8;4642:23;;4618:49;4680:80;4736:22;4754:3;4736:22;:::i;:::-;4726:8;4722:37;4709:11;4680:80;:::i;:::-;4339:431;;4324:446;4234:543;;;:::o;4783:117::-;4837:8;4887:5;4881:4;4877:16;4856:37;;4783:117;;;;:::o;4906:169::-;4950:6;4983:51;5031:1;5027:6;5019:5;5016:1;5012:13;4983:51;:::i;:::-;4979:56;5064:4;5058;5054:15;5044:25;;4957:118;4906:169;;;;:::o;5080:295::-;5156:4;5302:29;5327:3;5321:4;5302:29;:::i;:::-;5294:37;;5364:3;5361:1;5357:11;5351:4;5348:21;5340:29;;5080:295;;;;:::o;5380:1395::-;5497:37;5530:3;5497:37;:::i;:::-;5599:18;5591:6;5588:30;5585:56;;;5621:18;;:::i;:::-;5585:56;5665:38;5697:4;5691:11;5665:38;:::i;:::-;5750:67;5810:6;5802;5796:4;5750:67;:::i;:::-;5844:1;5868:4;5855:17;;5900:2;5892:6;5889:14;5917:1;5912:618;;;;6574:1;6591:6;6588:77;;;6640:9;6635:3;6631:19;6625:26;6616:35;;6588:77;6691:67;6751:6;6744:5;6691:67;:::i;:::-;6685:4;6678:81;6547:222;5882:887;;5912:618;5964:4;5960:9;5952:6;5948:22;5998:37;6030:4;5998:37;:::i;:::-;6057:1;6071:208;6085:7;6082:1;6079:14;6071:208;;;6164:9;6159:3;6155:19;6149:26;6141:6;6134:42;6215:1;6207:6;6203:14;6193:24;;6262:2;6251:9;6247:18;6234:31;;6108:4;6105:1;6101:12;6096:17;;6071:208;;;6307:6;6298:7;6295:19;6292:179;;;6365:9;6360:3;6356:19;6350:26;6408:48;6450:4;6442:6;6438:17;6427:9;6408:48;:::i;:::-;6400:6;6393:64;6315:156;6292:179;6517:1;6513;6505:6;6501:14;6497:22;6491:4;6484:36;5919:611;;;5882:887;;5472:1303;;;5380:1395;;:::o;300:1393:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1334": {
									"entryPoint": 4411,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_checkOwner_84": {
									"entryPoint": 2437,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1318": {
									"entryPoint": 4973,
									"id": 1318,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1248": {
									"entryPoint": 4542,
									"id": 1248,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mintBatch_1051": {
									"entryPoint": 2591,
									"id": 1051,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_1010": {
									"entryPoint": 3304,
									"id": 1010,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1750": {
									"entryPoint": 2722,
									"id": 1750,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1868": {
									"entryPoint": 3453,
									"id": 1868,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1839": {
									"entryPoint": 4459,
									"id": 1839,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1852": {
									"entryPoint": 4347,
									"id": 1852,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_safeBatchTransferFrom_947": {
									"entryPoint": 2729,
									"id": 947,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_892": {
									"entryPoint": 3913,
									"id": 892,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1180": {
									"entryPoint": 3552,
									"id": 1180,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_958": {
									"entryPoint": 2572,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3109,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_1884": {
									"entryPoint": 2973,
									"id": 1884,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_826": {
									"entryPoint": 4175,
									"id": 826,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_1538": {
									"entryPoint": 5404,
									"id": 1538,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_update_3217": {
									"entryPoint": 4524,
									"id": 3217,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_update_750": {
									"entryPoint": 5430,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_474": {
									"entryPoint": 1481,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_404": {
									"entryPoint": 794,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_507": {
									"entryPoint": 1891,
									"id": 507,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintBatch_3191": {
									"entryPoint": 1270,
									"id": 3191,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mint_3168": {
									"entryPoint": 1785,
									"id": 3168,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1829,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_3138": {
									"entryPoint": 1811,
									"id": 3138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1827": {
									"entryPoint": 1744,
									"id": 1827,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1766,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_597": {
									"entryPoint": 1296,
									"id": 597,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_551": {
									"entryPoint": 2033,
									"id": 551,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_490": {
									"entryPoint": 1869,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_3129": {
									"entryPoint": 1104,
									"id": 3129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_2018": {
									"entryPoint": 2332,
									"id": 2018,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_376": {
									"entryPoint": 879,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2200,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_3147": {
									"entryPoint": 1463,
									"id": 3147,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1724": {
									"entryPoint": 3090,
									"id": 1724,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1737": {
									"entryPoint": 3071,
									"id": 1737,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_387": {
									"entryPoint": 1124,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8123,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7386,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6987,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 8446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 9222,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10198,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10047,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10300,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10463,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9261,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6342,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9621,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6973,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9129,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9300,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6781,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7382,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6355,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6351,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9390,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9522,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:31531:15",
										"nodeType": "YulBlock",
										"src": "0:31531:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "748:87:15",
													"nodeType": "YulBlock",
													"src": "748:87:15",
													"statements": [
														{
															"nativeSrc": "758:29:15",
															"nodeType": "YulAssignment",
															"src": "758:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:15"
																},
																"nativeSrc": "767:20:15",
																"nodeType": "YulFunctionCall",
																"src": "767:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:15"
																},
																"nativeSrc": "796:33:15",
																"nodeType": "YulFunctionCall",
																"src": "796:33:15"
															},
															"nativeSrc": "796:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:15",
														"nodeType": "YulTypedName",
														"src": "726:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:15",
														"nodeType": "YulTypedName",
														"src": "734:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:15",
														"nodeType": "YulTypedName",
														"src": "742:5:15",
														"type": ""
													}
												],
												"src": "696:139:15"
											},
											{
												"body": {
													"nativeSrc": "886:32:15",
													"nodeType": "YulBlock",
													"src": "886:32:15",
													"statements": [
														{
															"nativeSrc": "896:16:15",
															"nodeType": "YulAssignment",
															"src": "896:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:15",
																"nodeType": "YulIdentifier",
																"src": "907:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:15",
														"nodeType": "YulTypedName",
														"src": "868:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:15",
														"nodeType": "YulTypedName",
														"src": "878:7:15",
														"type": ""
													}
												],
												"src": "841:77:15"
											},
											{
												"body": {
													"nativeSrc": "967:79:15",
													"nodeType": "YulBlock",
													"src": "967:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:15",
																"nodeType": "YulBlock",
																"src": "1024:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:15"
																			},
																			"nativeSrc": "1026:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:15"
																		},
																		"nativeSrc": "1026:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:15"
																				},
																				"nativeSrc": "997:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:15"
																		},
																		"nativeSrc": "987:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:15"
																},
																"nativeSrc": "980:43:15",
																"nodeType": "YulFunctionCall",
																"src": "980:43:15"
															},
															"nativeSrc": "977:63:15",
															"nodeType": "YulIf",
															"src": "977:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:15",
														"nodeType": "YulTypedName",
														"src": "960:5:15",
														"type": ""
													}
												],
												"src": "924:122:15"
											},
											{
												"body": {
													"nativeSrc": "1104:87:15",
													"nodeType": "YulBlock",
													"src": "1104:87:15",
													"statements": [
														{
															"nativeSrc": "1114:29:15",
															"nodeType": "YulAssignment",
															"src": "1114:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:15"
																},
																"nativeSrc": "1123:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:15"
																},
																"nativeSrc": "1152:33:15",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:15"
															},
															"nativeSrc": "1152:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:15",
														"nodeType": "YulTypedName",
														"src": "1082:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:15",
														"nodeType": "YulTypedName",
														"src": "1090:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:15",
														"nodeType": "YulTypedName",
														"src": "1098:5:15",
														"type": ""
													}
												],
												"src": "1052:139:15"
											},
											{
												"body": {
													"nativeSrc": "1280:391:15",
													"nodeType": "YulBlock",
													"src": "1280:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:15",
																"nodeType": "YulBlock",
																"src": "1326:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:15"
																			},
																			"nativeSrc": "1328:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:15"
																		},
																		"nativeSrc": "1328:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:15"
																		},
																		"nativeSrc": "1297:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:15"
																},
																"nativeSrc": "1293:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:15"
															},
															"nativeSrc": "1290:119:15",
															"nodeType": "YulIf",
															"src": "1290:119:15"
														},
														{
															"nativeSrc": "1419:117:15",
															"nodeType": "YulBlock",
															"src": "1419:117:15",
															"statements": [
																{
																	"nativeSrc": "1434:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:15",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:15"
																				},
																				"nativeSrc": "1494:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:15"
																		},
																		"nativeSrc": "1473:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:15",
															"nodeType": "YulBlock",
															"src": "1546:118:15",
															"statements": [
																{
																	"nativeSrc": "1561:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:15",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:15"
																				},
																				"nativeSrc": "1622:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:15"
																		},
																		"nativeSrc": "1601:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:15",
														"nodeType": "YulTypedName",
														"src": "1242:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:15",
														"nodeType": "YulTypedName",
														"src": "1253:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:15",
														"nodeType": "YulTypedName",
														"src": "1265:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:15",
														"nodeType": "YulTypedName",
														"src": "1273:6:15",
														"type": ""
													}
												],
												"src": "1197:474:15"
											},
											{
												"body": {
													"nativeSrc": "1742:53:15",
													"nodeType": "YulBlock",
													"src": "1742:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:15"
																		},
																		"nativeSrc": "1764:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:15"
																},
																"nativeSrc": "1752:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:15"
															},
															"nativeSrc": "1752:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:15",
														"nodeType": "YulTypedName",
														"src": "1730:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:15",
														"nodeType": "YulTypedName",
														"src": "1737:3:15",
														"type": ""
													}
												],
												"src": "1677:118:15"
											},
											{
												"body": {
													"nativeSrc": "1899:124:15",
													"nodeType": "YulBlock",
													"src": "1899:124:15",
													"statements": [
														{
															"nativeSrc": "1909:26:15",
															"nodeType": "YulAssignment",
															"src": "1909:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:15"
																},
																"nativeSrc": "1917:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:15"
																		},
																		"nativeSrc": "1998:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:15"
																},
																"nativeSrc": "1945:71:15",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:15"
															},
															"nativeSrc": "1945:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:15",
														"nodeType": "YulTypedName",
														"src": "1871:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:15",
														"nodeType": "YulTypedName",
														"src": "1883:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:15",
														"nodeType": "YulTypedName",
														"src": "1894:4:15",
														"type": ""
													}
												],
												"src": "1801:222:15"
											},
											{
												"body": {
													"nativeSrc": "2073:105:15",
													"nodeType": "YulBlock",
													"src": "2073:105:15",
													"statements": [
														{
															"nativeSrc": "2083:89:15",
															"nodeType": "YulAssignment",
															"src": "2083:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2098:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:66:15",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2094:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:15"
																},
																"nativeSrc": "2094:78:15",
																"nodeType": "YulFunctionCall",
																"src": "2094:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2083:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "2029:149:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2055:5:15",
														"nodeType": "YulTypedName",
														"src": "2055:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2065:7:15",
														"nodeType": "YulTypedName",
														"src": "2065:7:15",
														"type": ""
													}
												],
												"src": "2029:149:15"
											},
											{
												"body": {
													"nativeSrc": "2226:78:15",
													"nodeType": "YulBlock",
													"src": "2226:78:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2282:16:15",
																"nodeType": "YulBlock",
																"src": "2282:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2284:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:15"
																			},
																			"nativeSrc": "2284:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:15"
																		},
																		"nativeSrc": "2284:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2273:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "2256:16:15",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:15"
																				},
																				"nativeSrc": "2256:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2246:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:15"
																		},
																		"nativeSrc": "2246:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2239:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:15"
																},
																"nativeSrc": "2239:42:15",
																"nodeType": "YulFunctionCall",
																"src": "2239:42:15"
															},
															"nativeSrc": "2236:62:15",
															"nodeType": "YulIf",
															"src": "2236:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "2184:120:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2219:5:15",
														"nodeType": "YulTypedName",
														"src": "2219:5:15",
														"type": ""
													}
												],
												"src": "2184:120:15"
											},
											{
												"body": {
													"nativeSrc": "2361:86:15",
													"nodeType": "YulBlock",
													"src": "2361:86:15",
													"statements": [
														{
															"nativeSrc": "2371:29:15",
															"nodeType": "YulAssignment",
															"src": "2371:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2393:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:15"
																},
																"nativeSrc": "2380:20:15",
																"nodeType": "YulFunctionCall",
																"src": "2380:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2371:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2435:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2409:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:15"
																},
																"nativeSrc": "2409:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2409:32:15"
															},
															"nativeSrc": "2409:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "2310:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2339:6:15",
														"nodeType": "YulTypedName",
														"src": "2339:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:15",
														"nodeType": "YulTypedName",
														"src": "2347:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2355:5:15",
														"nodeType": "YulTypedName",
														"src": "2355:5:15",
														"type": ""
													}
												],
												"src": "2310:137:15"
											},
											{
												"body": {
													"nativeSrc": "2518:262:15",
													"nodeType": "YulBlock",
													"src": "2518:262:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2564:83:15",
																"nodeType": "YulBlock",
																"src": "2564:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2566:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:15"
																			},
																			"nativeSrc": "2566:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:15"
																		},
																		"nativeSrc": "2566:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2539:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2548:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2535:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:15"
																		},
																		"nativeSrc": "2535:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2531:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:15"
																},
																"nativeSrc": "2531:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2531:32:15"
															},
															"nativeSrc": "2528:119:15",
															"nodeType": "YulIf",
															"src": "2528:119:15"
														},
														{
															"nativeSrc": "2657:116:15",
															"nodeType": "YulBlock",
															"src": "2657:116:15",
															"statements": [
																{
																	"nativeSrc": "2672:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2686:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2676:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2701:62:15",
																	"nodeType": "YulAssignment",
																	"src": "2701:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2735:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2746:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2731:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:15"
																				},
																				"nativeSrc": "2731:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2755:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2711:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:15"
																		},
																		"nativeSrc": "2711:52:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2701:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2453:327:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2488:9:15",
														"nodeType": "YulTypedName",
														"src": "2488:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2499:7:15",
														"nodeType": "YulTypedName",
														"src": "2499:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2511:6:15",
														"nodeType": "YulTypedName",
														"src": "2511:6:15",
														"type": ""
													}
												],
												"src": "2453:327:15"
											},
											{
												"body": {
													"nativeSrc": "2828:48:15",
													"nodeType": "YulBlock",
													"src": "2828:48:15",
													"statements": [
														{
															"nativeSrc": "2838:32:15",
															"nodeType": "YulAssignment",
															"src": "2838:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2856:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:15"
																		},
																		"nativeSrc": "2856:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2849:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:15"
																},
																"nativeSrc": "2849:21:15",
																"nodeType": "YulFunctionCall",
																"src": "2849:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2838:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2786:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:15",
														"nodeType": "YulTypedName",
														"src": "2810:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2820:7:15",
														"nodeType": "YulTypedName",
														"src": "2820:7:15",
														"type": ""
													}
												],
												"src": "2786:90:15"
											},
											{
												"body": {
													"nativeSrc": "2941:50:15",
													"nodeType": "YulBlock",
													"src": "2941:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2958:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2978:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2963:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:15"
																		},
																		"nativeSrc": "2963:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:15"
																},
																"nativeSrc": "2951:34:15",
																"nodeType": "YulFunctionCall",
																"src": "2951:34:15"
															},
															"nativeSrc": "2951:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2882:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:15",
														"nodeType": "YulTypedName",
														"src": "2929:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2936:3:15",
														"nodeType": "YulTypedName",
														"src": "2936:3:15",
														"type": ""
													}
												],
												"src": "2882:109:15"
											},
											{
												"body": {
													"nativeSrc": "3089:118:15",
													"nodeType": "YulBlock",
													"src": "3089:118:15",
													"statements": [
														{
															"nativeSrc": "3099:26:15",
															"nodeType": "YulAssignment",
															"src": "3099:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:15"
																},
																"nativeSrc": "3107:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:15"
																		},
																		"nativeSrc": "3182:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3135:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:15"
																},
																"nativeSrc": "3135:65:15",
																"nodeType": "YulFunctionCall",
																"src": "3135:65:15"
															},
															"nativeSrc": "3135:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2997:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3061:9:15",
														"nodeType": "YulTypedName",
														"src": "3061:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3073:6:15",
														"nodeType": "YulTypedName",
														"src": "3073:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:15",
														"nodeType": "YulTypedName",
														"src": "3084:4:15",
														"type": ""
													}
												],
												"src": "2997:210:15"
											},
											{
												"body": {
													"nativeSrc": "3302:28:15",
													"nodeType": "YulBlock",
													"src": "3302:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3319:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3322:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3322:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3312:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3312:6:15"
																},
																"nativeSrc": "3312:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3312:12:15"
															},
															"nativeSrc": "3312:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "3312:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3213:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3213:117:15"
											},
											{
												"body": {
													"nativeSrc": "3425:28:15",
													"nodeType": "YulBlock",
													"src": "3425:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3442:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3442:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3445:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3445:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3435:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3435:6:15"
																},
																"nativeSrc": "3435:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3435:12:15"
															},
															"nativeSrc": "3435:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "3435:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "3336:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3336:117:15"
											},
											{
												"body": {
													"nativeSrc": "3507:54:15",
													"nodeType": "YulBlock",
													"src": "3507:54:15",
													"statements": [
														{
															"nativeSrc": "3517:38:15",
															"nodeType": "YulAssignment",
															"src": "3517:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3535:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3535:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3542:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3542:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3531:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3531:3:15"
																		},
																		"nativeSrc": "3531:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3531:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3551:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3551:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3547:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3547:3:15"
																		},
																		"nativeSrc": "3547:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3547:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3527:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3527:3:15"
																},
																"nativeSrc": "3527:28:15",
																"nodeType": "YulFunctionCall",
																"src": "3527:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3517:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3517:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3459:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3490:5:15",
														"nodeType": "YulTypedName",
														"src": "3490:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3500:6:15",
														"nodeType": "YulTypedName",
														"src": "3500:6:15",
														"type": ""
													}
												],
												"src": "3459:102:15"
											},
											{
												"body": {
													"nativeSrc": "3595:152:15",
													"nodeType": "YulBlock",
													"src": "3595:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3612:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3612:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3615:77:15",
																		"nodeType": "YulLiteral",
																		"src": "3615:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3605:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:15"
																},
																"nativeSrc": "3605:88:15",
																"nodeType": "YulFunctionCall",
																"src": "3605:88:15"
															},
															"nativeSrc": "3605:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "3605:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3709:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3709:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3712:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3712:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3702:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3702:6:15"
																},
																"nativeSrc": "3702:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3702:15:15"
															},
															"nativeSrc": "3702:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3702:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3733:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3733:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3736:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3736:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3726:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3726:6:15"
																},
																"nativeSrc": "3726:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3726:15:15"
															},
															"nativeSrc": "3726:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3726:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3567:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3567:180:15"
											},
											{
												"body": {
													"nativeSrc": "3796:238:15",
													"nodeType": "YulBlock",
													"src": "3796:238:15",
													"statements": [
														{
															"nativeSrc": "3806:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3806:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3828:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3828:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "3858:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "3858:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3836:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "3836:21:15"
																		},
																		"nativeSrc": "3836:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3836:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3824:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3824:3:15"
																},
																"nativeSrc": "3824:40:15",
																"nodeType": "YulFunctionCall",
																"src": "3824:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3810:10:15",
																	"nodeType": "YulTypedName",
																	"src": "3810:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3975:22:15",
																"nodeType": "YulBlock",
																"src": "3975:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3977:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "3977:16:15"
																			},
																			"nativeSrc": "3977:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:18:15"
																		},
																		"nativeSrc": "3977:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3918:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "3918:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3930:18:15",
																				"nodeType": "YulLiteral",
																				"src": "3930:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3915:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3915:2:15"
																		},
																		"nativeSrc": "3915:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3954:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "3954:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3966:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3966:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3951:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3951:2:15"
																		},
																		"nativeSrc": "3951:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3951:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3912:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3912:2:15"
																},
																"nativeSrc": "3912:62:15",
																"nodeType": "YulFunctionCall",
																"src": "3912:62:15"
															},
															"nativeSrc": "3909:88:15",
															"nodeType": "YulIf",
															"src": "3909:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4013:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4013:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4017:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "4017:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4006:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:15"
																},
																"nativeSrc": "4006:22:15",
																"nodeType": "YulFunctionCall",
																"src": "4006:22:15"
															},
															"nativeSrc": "4006:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "4006:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "3753:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3782:6:15",
														"nodeType": "YulTypedName",
														"src": "3782:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "3790:4:15",
														"nodeType": "YulTypedName",
														"src": "3790:4:15",
														"type": ""
													}
												],
												"src": "3753:281:15"
											},
											{
												"body": {
													"nativeSrc": "4081:88:15",
													"nodeType": "YulBlock",
													"src": "4081:88:15",
													"statements": [
														{
															"nativeSrc": "4091:30:15",
															"nodeType": "YulAssignment",
															"src": "4091:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4101:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4101:18:15"
																},
																"nativeSrc": "4101:20:15",
																"nodeType": "YulFunctionCall",
																"src": "4101:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4091:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4150:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4150:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4158:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4158:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4130:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "4130:19:15"
																},
																"nativeSrc": "4130:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4130:33:15"
															},
															"nativeSrc": "4130:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "4130:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4040:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4065:4:15",
														"nodeType": "YulTypedName",
														"src": "4065:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4074:6:15",
														"nodeType": "YulTypedName",
														"src": "4074:6:15",
														"type": ""
													}
												],
												"src": "4040:129:15"
											},
											{
												"body": {
													"nativeSrc": "4242:241:15",
													"nodeType": "YulBlock",
													"src": "4242:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4347:22:15",
																"nodeType": "YulBlock",
																"src": "4347:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4349:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4349:16:15"
																			},
																			"nativeSrc": "4349:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4349:18:15"
																		},
																		"nativeSrc": "4349:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4349:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4319:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4319:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4327:18:15",
																		"nodeType": "YulLiteral",
																		"src": "4327:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4316:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4316:2:15"
																},
																"nativeSrc": "4316:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4316:30:15"
															},
															"nativeSrc": "4313:56:15",
															"nodeType": "YulIf",
															"src": "4313:56:15"
														},
														{
															"nativeSrc": "4379:37:15",
															"nodeType": "YulAssignment",
															"src": "4379:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4409:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4409:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "4387:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "4387:21:15"
																},
																"nativeSrc": "4387:29:15",
																"nodeType": "YulFunctionCall",
																"src": "4387:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4379:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:15"
																}
															]
														},
														{
															"nativeSrc": "4453:23:15",
															"nodeType": "YulAssignment",
															"src": "4453:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4465:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4465:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4471:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4471:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4461:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:15"
																},
																"nativeSrc": "4461:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4461:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4453:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4453:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "4175:308:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4226:6:15",
														"nodeType": "YulTypedName",
														"src": "4226:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4237:4:15",
														"nodeType": "YulTypedName",
														"src": "4237:4:15",
														"type": ""
													}
												],
												"src": "4175:308:15"
											},
											{
												"body": {
													"nativeSrc": "4553:84:15",
													"nodeType": "YulBlock",
													"src": "4553:84:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4577:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4577:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4582:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4582:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4587:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4587:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4564:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4564:12:15"
																},
																"nativeSrc": "4564:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4564:30:15"
															},
															"nativeSrc": "4564:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "4564:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4614:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4614:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4619:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4619:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4610:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:15"
																		},
																		"nativeSrc": "4610:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4610:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4628:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4628:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4603:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:15"
																},
																"nativeSrc": "4603:27:15",
																"nodeType": "YulFunctionCall",
																"src": "4603:27:15"
															},
															"nativeSrc": "4603:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "4603:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "4489:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4535:3:15",
														"nodeType": "YulTypedName",
														"src": "4535:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4540:3:15",
														"nodeType": "YulTypedName",
														"src": "4540:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4545:6:15",
														"nodeType": "YulTypedName",
														"src": "4545:6:15",
														"type": ""
													}
												],
												"src": "4489:148:15"
											},
											{
												"body": {
													"nativeSrc": "4727:341:15",
													"nodeType": "YulBlock",
													"src": "4727:341:15",
													"statements": [
														{
															"nativeSrc": "4737:75:15",
															"nodeType": "YulAssignment",
															"src": "4737:75:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4804:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4804:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "4762:41:15",
																			"nodeType": "YulIdentifier",
																			"src": "4762:41:15"
																		},
																		"nativeSrc": "4762:49:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4762:49:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4746:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "4746:15:15"
																},
																"nativeSrc": "4746:66:15",
																"nodeType": "YulFunctionCall",
																"src": "4746:66:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4737:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4737:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4828:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4828:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4835:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4835:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4821:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:15"
																},
																"nativeSrc": "4821:21:15",
																"nodeType": "YulFunctionCall",
																"src": "4821:21:15"
															},
															"nativeSrc": "4821:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "4821:21:15"
														},
														{
															"nativeSrc": "4851:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4851:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4866:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4866:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4873:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4873:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4862:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4862:3:15"
																},
																"nativeSrc": "4862:16:15",
																"nodeType": "YulFunctionCall",
																"src": "4862:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4855:3:15",
																	"nodeType": "YulTypedName",
																	"src": "4855:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4916:83:15",
																"nodeType": "YulBlock",
																"src": "4916:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "4918:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4918:77:15"
																			},
																			"nativeSrc": "4918:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4918:79:15"
																		},
																		"nativeSrc": "4918:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4918:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "4897:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4897:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4902:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4902:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4893:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4893:3:15"
																		},
																		"nativeSrc": "4893:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4893:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4911:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4911:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4890:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4890:2:15"
																},
																"nativeSrc": "4890:25:15",
																"nodeType": "YulFunctionCall",
																"src": "4890:25:15"
															},
															"nativeSrc": "4887:112:15",
															"nodeType": "YulIf",
															"src": "4887:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5045:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5045:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "5050:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5050:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5055:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5055:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "5008:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "5008:36:15"
																},
																"nativeSrc": "5008:54:15",
																"nodeType": "YulFunctionCall",
																"src": "5008:54:15"
															},
															"nativeSrc": "5008:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "5008:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "4643:425:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4700:3:15",
														"nodeType": "YulTypedName",
														"src": "4700:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4705:6:15",
														"nodeType": "YulTypedName",
														"src": "4705:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4713:3:15",
														"nodeType": "YulTypedName",
														"src": "4713:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4721:5:15",
														"nodeType": "YulTypedName",
														"src": "4721:5:15",
														"type": ""
													}
												],
												"src": "4643:425:15"
											},
											{
												"body": {
													"nativeSrc": "5150:278:15",
													"nodeType": "YulBlock",
													"src": "5150:278:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5199:83:15",
																"nodeType": "YulBlock",
																"src": "5199:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5201:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5201:77:15"
																			},
																			"nativeSrc": "5201:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5201:79:15"
																		},
																		"nativeSrc": "5201:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5201:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5178:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5178:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5186:4:15",
																						"nodeType": "YulLiteral",
																						"src": "5186:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5174:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5174:3:15"
																				},
																				"nativeSrc": "5174:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5174:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5193:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5193:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5170:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5170:3:15"
																		},
																		"nativeSrc": "5170:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5170:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5163:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5163:6:15"
																},
																"nativeSrc": "5163:35:15",
																"nodeType": "YulFunctionCall",
																"src": "5163:35:15"
															},
															"nativeSrc": "5160:122:15",
															"nodeType": "YulIf",
															"src": "5160:122:15"
														},
														{
															"nativeSrc": "5291:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5291:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5318:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5318:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5305:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5305:12:15"
																},
																"nativeSrc": "5305:20:15",
																"nodeType": "YulFunctionCall",
																"src": "5305:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5295:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5295:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5334:88:15",
															"nodeType": "YulAssignment",
															"src": "5334:88:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5395:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5395:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5403:4:15",
																				"nodeType": "YulLiteral",
																				"src": "5403:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5391:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5391:3:15"
																		},
																		"nativeSrc": "5391:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5391:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5410:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5410:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5418:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5418:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "5343:47:15",
																	"nodeType": "YulIdentifier",
																	"src": "5343:47:15"
																},
																"nativeSrc": "5343:79:15",
																"nodeType": "YulFunctionCall",
																"src": "5343:79:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5334:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5334:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "5088:340:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5128:6:15",
														"nodeType": "YulTypedName",
														"src": "5128:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5136:3:15",
														"nodeType": "YulTypedName",
														"src": "5136:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5144:5:15",
														"nodeType": "YulTypedName",
														"src": "5144:5:15",
														"type": ""
													}
												],
												"src": "5088:340:15"
											},
											{
												"body": {
													"nativeSrc": "5510:433:15",
													"nodeType": "YulBlock",
													"src": "5510:433:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5556:83:15",
																"nodeType": "YulBlock",
																"src": "5556:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5558:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5558:77:15"
																			},
																			"nativeSrc": "5558:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5558:79:15"
																		},
																		"nativeSrc": "5558:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5558:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5531:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5531:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5540:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5540:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5527:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5527:3:15"
																		},
																		"nativeSrc": "5527:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5527:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5523:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5523:3:15"
																},
																"nativeSrc": "5523:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5523:32:15"
															},
															"nativeSrc": "5520:119:15",
															"nodeType": "YulIf",
															"src": "5520:119:15"
														},
														{
															"nativeSrc": "5649:287:15",
															"nodeType": "YulBlock",
															"src": "5649:287:15",
															"statements": [
																{
																	"nativeSrc": "5664:45:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5664:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5695:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5695:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5706:1:15",
																						"nodeType": "YulLiteral",
																						"src": "5706:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5691:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5691:3:15"
																				},
																				"nativeSrc": "5691:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5691:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5678:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "5678:12:15"
																		},
																		"nativeSrc": "5678:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5678:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5668:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5668:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5756:83:15",
																		"nodeType": "YulBlock",
																		"src": "5756:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5758:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "5758:77:15"
																					},
																					"nativeSrc": "5758:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5758:79:15"
																				},
																				"nativeSrc": "5758:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "5758:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5728:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5728:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5736:18:15",
																				"nodeType": "YulLiteral",
																				"src": "5736:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5725:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "5725:2:15"
																		},
																		"nativeSrc": "5725:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5725:30:15"
																	},
																	"nativeSrc": "5722:117:15",
																	"nodeType": "YulIf",
																	"src": "5722:117:15"
																},
																{
																	"nativeSrc": "5853:73:15",
																	"nodeType": "YulAssignment",
																	"src": "5853:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5898:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5898:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5909:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5909:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5894:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5894:3:15"
																				},
																				"nativeSrc": "5894:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5894:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5918:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5918:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "5863:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "5863:30:15"
																		},
																		"nativeSrc": "5863:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5853:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5853:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "5434:509:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5480:9:15",
														"nodeType": "YulTypedName",
														"src": "5480:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5491:7:15",
														"nodeType": "YulTypedName",
														"src": "5491:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5503:6:15",
														"nodeType": "YulTypedName",
														"src": "5503:6:15",
														"type": ""
													}
												],
												"src": "5434:509:15"
											},
											{
												"body": {
													"nativeSrc": "6015:263:15",
													"nodeType": "YulBlock",
													"src": "6015:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6061:83:15",
																"nodeType": "YulBlock",
																"src": "6061:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6063:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "6063:77:15"
																			},
																			"nativeSrc": "6063:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6063:79:15"
																		},
																		"nativeSrc": "6063:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6063:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6036:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6036:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6045:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6045:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6032:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6032:3:15"
																		},
																		"nativeSrc": "6032:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6032:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6057:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6057:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6028:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6028:3:15"
																},
																"nativeSrc": "6028:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6028:32:15"
															},
															"nativeSrc": "6025:119:15",
															"nodeType": "YulIf",
															"src": "6025:119:15"
														},
														{
															"nativeSrc": "6154:117:15",
															"nodeType": "YulBlock",
															"src": "6154:117:15",
															"statements": [
																{
																	"nativeSrc": "6169:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6169:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6183:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6183:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6173:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6173:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6198:63:15",
																	"nodeType": "YulAssignment",
																	"src": "6198:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6233:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6233:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6244:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6244:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6229:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6229:3:15"
																				},
																				"nativeSrc": "6229:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6229:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6253:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6253:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6208:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "6208:20:15"
																		},
																		"nativeSrc": "6208:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6208:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6198:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6198:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5949:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5985:9:15",
														"nodeType": "YulTypedName",
														"src": "5985:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5996:7:15",
														"nodeType": "YulTypedName",
														"src": "5996:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6008:6:15",
														"nodeType": "YulTypedName",
														"src": "6008:6:15",
														"type": ""
													}
												],
												"src": "5949:329:15"
											},
											{
												"body": {
													"nativeSrc": "6343:40:15",
													"nodeType": "YulBlock",
													"src": "6343:40:15",
													"statements": [
														{
															"nativeSrc": "6354:22:15",
															"nodeType": "YulAssignment",
															"src": "6354:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6370:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6370:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6364:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6364:5:15"
																},
																"nativeSrc": "6364:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6364:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6354:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6354:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "6284:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6326:5:15",
														"nodeType": "YulTypedName",
														"src": "6326:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6336:6:15",
														"nodeType": "YulTypedName",
														"src": "6336:6:15",
														"type": ""
													}
												],
												"src": "6284:99:15"
											},
											{
												"body": {
													"nativeSrc": "6485:73:15",
													"nodeType": "YulBlock",
													"src": "6485:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6502:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6502:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6507:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6507:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6495:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:15"
																},
																"nativeSrc": "6495:19:15",
																"nodeType": "YulFunctionCall",
																"src": "6495:19:15"
															},
															"nativeSrc": "6495:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "6495:19:15"
														},
														{
															"nativeSrc": "6523:29:15",
															"nodeType": "YulAssignment",
															"src": "6523:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6542:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6542:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6547:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6547:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6538:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6538:3:15"
																},
																"nativeSrc": "6538:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6538:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6523:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "6523:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6389:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6457:3:15",
														"nodeType": "YulTypedName",
														"src": "6457:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6462:6:15",
														"nodeType": "YulTypedName",
														"src": "6462:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6473:11:15",
														"nodeType": "YulTypedName",
														"src": "6473:11:15",
														"type": ""
													}
												],
												"src": "6389:169:15"
											},
											{
												"body": {
													"nativeSrc": "6626:77:15",
													"nodeType": "YulBlock",
													"src": "6626:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6643:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6643:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6648:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6648:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6653:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6653:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6637:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6637:5:15"
																},
																"nativeSrc": "6637:23:15",
																"nodeType": "YulFunctionCall",
																"src": "6637:23:15"
															},
															"nativeSrc": "6637:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "6637:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6680:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6680:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6685:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6685:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6676:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6676:3:15"
																		},
																		"nativeSrc": "6676:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6676:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6694:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6694:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6669:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:15"
																},
																"nativeSrc": "6669:27:15",
																"nodeType": "YulFunctionCall",
																"src": "6669:27:15"
															},
															"nativeSrc": "6669:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "6669:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6564:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6608:3:15",
														"nodeType": "YulTypedName",
														"src": "6608:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6613:3:15",
														"nodeType": "YulTypedName",
														"src": "6613:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6618:6:15",
														"nodeType": "YulTypedName",
														"src": "6618:6:15",
														"type": ""
													}
												],
												"src": "6564:139:15"
											},
											{
												"body": {
													"nativeSrc": "6801:285:15",
													"nodeType": "YulBlock",
													"src": "6801:285:15",
													"statements": [
														{
															"nativeSrc": "6811:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6811:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6858:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6858:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6825:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "6825:32:15"
																},
																"nativeSrc": "6825:39:15",
																"nodeType": "YulFunctionCall",
																"src": "6825:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6815:6:15",
																	"nodeType": "YulTypedName",
																	"src": "6815:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6873:78:15",
															"nodeType": "YulAssignment",
															"src": "6873:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6939:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6939:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6944:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6944:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6880:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "6880:58:15"
																},
																"nativeSrc": "6880:71:15",
																"nodeType": "YulFunctionCall",
																"src": "6880:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6873:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6873:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6999:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6999:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7006:4:15",
																				"nodeType": "YulLiteral",
																				"src": "7006:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:15"
																		},
																		"nativeSrc": "6995:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7013:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7013:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7018:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7018:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6960:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "6960:34:15"
																},
																"nativeSrc": "6960:65:15",
																"nodeType": "YulFunctionCall",
																"src": "6960:65:15"
															},
															"nativeSrc": "6960:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "6960:65:15"
														},
														{
															"nativeSrc": "7034:46:15",
															"nodeType": "YulAssignment",
															"src": "7034:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7045:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7045:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7072:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7072:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7050:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "7050:21:15"
																		},
																		"nativeSrc": "7050:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7050:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7041:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7041:3:15"
																},
																"nativeSrc": "7041:39:15",
																"nodeType": "YulFunctionCall",
																"src": "7041:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7034:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7034:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6709:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6782:5:15",
														"nodeType": "YulTypedName",
														"src": "6782:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6789:3:15",
														"nodeType": "YulTypedName",
														"src": "6789:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6797:3:15",
														"nodeType": "YulTypedName",
														"src": "6797:3:15",
														"type": ""
													}
												],
												"src": "6709:377:15"
											},
											{
												"body": {
													"nativeSrc": "7210:195:15",
													"nodeType": "YulBlock",
													"src": "7210:195:15",
													"statements": [
														{
															"nativeSrc": "7220:26:15",
															"nodeType": "YulAssignment",
															"src": "7220:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7232:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7232:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7243:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7243:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7228:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7228:3:15"
																},
																"nativeSrc": "7228:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7228:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7220:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7220:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7267:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7267:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7278:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7278:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7263:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7263:3:15"
																		},
																		"nativeSrc": "7263:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7263:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7286:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "7286:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7292:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7292:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7282:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7282:3:15"
																		},
																		"nativeSrc": "7282:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7282:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7256:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7256:6:15"
																},
																"nativeSrc": "7256:47:15",
																"nodeType": "YulFunctionCall",
																"src": "7256:47:15"
															},
															"nativeSrc": "7256:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "7256:47:15"
														},
														{
															"nativeSrc": "7312:86:15",
															"nodeType": "YulAssignment",
															"src": "7312:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7384:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7384:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7393:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7393:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7320:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "7320:63:15"
																},
																"nativeSrc": "7320:78:15",
																"nodeType": "YulFunctionCall",
																"src": "7320:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7312:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7312:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7092:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7182:9:15",
														"nodeType": "YulTypedName",
														"src": "7182:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7194:6:15",
														"nodeType": "YulTypedName",
														"src": "7194:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7205:4:15",
														"nodeType": "YulTypedName",
														"src": "7205:4:15",
														"type": ""
													}
												],
												"src": "7092:313:15"
											},
											{
												"body": {
													"nativeSrc": "7493:229:15",
													"nodeType": "YulBlock",
													"src": "7493:229:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7598:22:15",
																"nodeType": "YulBlock",
																"src": "7598:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7600:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7600:16:15"
																			},
																			"nativeSrc": "7600:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7600:18:15"
																		},
																		"nativeSrc": "7600:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7600:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7570:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7570:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7578:18:15",
																		"nodeType": "YulLiteral",
																		"src": "7578:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7567:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7567:2:15"
																},
																"nativeSrc": "7567:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7567:30:15"
															},
															"nativeSrc": "7564:56:15",
															"nodeType": "YulIf",
															"src": "7564:56:15"
														},
														{
															"nativeSrc": "7630:25:15",
															"nodeType": "YulAssignment",
															"src": "7630:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7642:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7642:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7650:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7650:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7638:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7638:3:15"
																},
																"nativeSrc": "7638:17:15",
																"nodeType": "YulFunctionCall",
																"src": "7638:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7630:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7630:4:15"
																}
															]
														},
														{
															"nativeSrc": "7692:23:15",
															"nodeType": "YulAssignment",
															"src": "7692:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7704:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7704:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7710:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7710:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7700:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7700:3:15"
																},
																"nativeSrc": "7700:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7700:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7692:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7692:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7411:311:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7477:6:15",
														"nodeType": "YulTypedName",
														"src": "7477:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7488:4:15",
														"nodeType": "YulTypedName",
														"src": "7488:4:15",
														"type": ""
													}
												],
												"src": "7411:311:15"
											},
											{
												"body": {
													"nativeSrc": "7817:28:15",
													"nodeType": "YulBlock",
													"src": "7817:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7834:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7834:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7837:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7837:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7827:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7827:6:15"
																},
																"nativeSrc": "7827:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7827:12:15"
															},
															"nativeSrc": "7827:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "7827:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "7728:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7728:117:15"
											},
											{
												"body": {
													"nativeSrc": "7970:608:15",
													"nodeType": "YulBlock",
													"src": "7970:608:15",
													"statements": [
														{
															"nativeSrc": "7980:90:15",
															"nodeType": "YulAssignment",
															"src": "7980:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8062:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8062:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "8005:56:15",
																			"nodeType": "YulIdentifier",
																			"src": "8005:56:15"
																		},
																		"nativeSrc": "8005:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8005:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7989:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "7989:15:15"
																},
																"nativeSrc": "7989:81:15",
																"nodeType": "YulFunctionCall",
																"src": "7989:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7980:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7980:5:15"
																}
															]
														},
														{
															"nativeSrc": "8079:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8079:16:15",
															"value": {
																"name": "array",
																"nativeSrc": "8090:5:15",
																"nodeType": "YulIdentifier",
																"src": "8090:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8083:3:15",
																	"nodeType": "YulTypedName",
																	"src": "8083:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8112:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8112:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8119:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8119:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8105:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8105:6:15"
																},
																"nativeSrc": "8105:21:15",
																"nodeType": "YulFunctionCall",
																"src": "8105:21:15"
															},
															"nativeSrc": "8105:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "8105:21:15"
														},
														{
															"nativeSrc": "8135:23:15",
															"nodeType": "YulAssignment",
															"src": "8135:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8146:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8146:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8153:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8153:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8142:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8142:3:15"
																},
																"nativeSrc": "8142:16:15",
																"nodeType": "YulFunctionCall",
																"src": "8142:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "8135:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8135:3:15"
																}
															]
														},
														{
															"nativeSrc": "8168:44:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8168:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8186:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8186:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8198:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8198:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8206:4:15",
																				"nodeType": "YulLiteral",
																				"src": "8206:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8194:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8194:3:15"
																		},
																		"nativeSrc": "8194:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8194:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8182:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8182:3:15"
																},
																"nativeSrc": "8182:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8182:30:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "8172:6:15",
																	"nodeType": "YulTypedName",
																	"src": "8172:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8240:103:15",
																"nodeType": "YulBlock",
																"src": "8240:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "8254:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8254:77:15"
																			},
																			"nativeSrc": "8254:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8254:79:15"
																		},
																		"nativeSrc": "8254:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8254:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8227:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8227:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8235:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8235:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8224:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8224:2:15"
																},
																"nativeSrc": "8224:15:15",
																"nodeType": "YulFunctionCall",
																"src": "8224:15:15"
															},
															"nativeSrc": "8221:122:15",
															"nodeType": "YulIf",
															"src": "8221:122:15"
														},
														{
															"body": {
																"nativeSrc": "8428:144:15",
																"nodeType": "YulBlock",
																"src": "8428:144:15",
																"statements": [
																	{
																		"nativeSrc": "8443:21:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8443:21:15",
																		"value": {
																			"name": "src",
																			"nativeSrc": "8461:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8461:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "8447:10:15",
																				"nodeType": "YulTypedName",
																				"src": "8447:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8485:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8485:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "8511:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "8511:10:15"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "8523:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8523:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "8490:20:15",
																						"nodeType": "YulIdentifier",
																						"src": "8490:20:15"
																					},
																					"nativeSrc": "8490:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8490:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8478:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8478:6:15"
																			},
																			"nativeSrc": "8478:50:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8478:50:15"
																		},
																		"nativeSrc": "8478:50:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8478:50:15"
																	},
																	{
																		"nativeSrc": "8541:21:15",
																		"nodeType": "YulAssignment",
																		"src": "8541:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8552:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8552:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8557:4:15",
																					"nodeType": "YulLiteral",
																					"src": "8557:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8548:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8548:3:15"
																			},
																			"nativeSrc": "8548:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8548:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "8541:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8541:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8381:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8381:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8386:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8386:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8378:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8378:2:15"
																},
																"nativeSrc": "8378:15:15",
																"nodeType": "YulFunctionCall",
																"src": "8378:15:15"
															},
															"nativeSrc": "8352:220:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8394:25:15",
																"nodeType": "YulBlock",
																"src": "8394:25:15",
																"statements": [
																	{
																		"nativeSrc": "8396:21:15",
																		"nodeType": "YulAssignment",
																		"src": "8396:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "8407:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8407:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8412:4:15",
																					"nodeType": "YulLiteral",
																					"src": "8412:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8403:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:15"
																			},
																			"nativeSrc": "8403:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8403:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "8396:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8396:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8356:21:15",
																"nodeType": "YulBlock",
																"src": "8356:21:15",
																"statements": [
																	{
																		"nativeSrc": "8358:17:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8358:17:15",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "8369:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8369:6:15"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "8362:3:15",
																				"nodeType": "YulTypedName",
																				"src": "8362:3:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8352:220:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7868:710:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7940:6:15",
														"nodeType": "YulTypedName",
														"src": "7940:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7948:6:15",
														"nodeType": "YulTypedName",
														"src": "7948:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7956:3:15",
														"nodeType": "YulTypedName",
														"src": "7956:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7964:5:15",
														"nodeType": "YulTypedName",
														"src": "7964:5:15",
														"type": ""
													}
												],
												"src": "7868:710:15"
											},
											{
												"body": {
													"nativeSrc": "8678:293:15",
													"nodeType": "YulBlock",
													"src": "8678:293:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8727:83:15",
																"nodeType": "YulBlock",
																"src": "8727:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8729:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8729:77:15"
																			},
																			"nativeSrc": "8729:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8729:79:15"
																		},
																		"nativeSrc": "8729:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8729:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8706:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8706:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8714:4:15",
																						"nodeType": "YulLiteral",
																						"src": "8714:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8702:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8702:3:15"
																				},
																				"nativeSrc": "8702:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8702:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8721:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8721:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8698:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:15"
																		},
																		"nativeSrc": "8698:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8698:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8691:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:15"
																},
																"nativeSrc": "8691:35:15",
																"nodeType": "YulFunctionCall",
																"src": "8691:35:15"
															},
															"nativeSrc": "8688:122:15",
															"nodeType": "YulIf",
															"src": "8688:122:15"
														},
														{
															"nativeSrc": "8819:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8819:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8846:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8846:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8833:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8833:12:15"
																},
																"nativeSrc": "8833:20:15",
																"nodeType": "YulFunctionCall",
																"src": "8833:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8823:6:15",
																	"nodeType": "YulTypedName",
																	"src": "8823:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8862:103:15",
															"nodeType": "YulAssignment",
															"src": "8862:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8938:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8938:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8946:4:15",
																				"nodeType": "YulLiteral",
																				"src": "8946:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8934:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8934:3:15"
																		},
																		"nativeSrc": "8934:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8934:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8953:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8953:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8961:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8961:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8871:62:15",
																	"nodeType": "YulIdentifier",
																	"src": "8871:62:15"
																},
																"nativeSrc": "8871:94:15",
																"nodeType": "YulFunctionCall",
																"src": "8871:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8862:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8862:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8601:370:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8656:6:15",
														"nodeType": "YulTypedName",
														"src": "8656:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8664:3:15",
														"nodeType": "YulTypedName",
														"src": "8664:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8672:5:15",
														"nodeType": "YulTypedName",
														"src": "8672:5:15",
														"type": ""
													}
												],
												"src": "8601:370:15"
											},
											{
												"body": {
													"nativeSrc": "9043:241:15",
													"nodeType": "YulBlock",
													"src": "9043:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9148:22:15",
																"nodeType": "YulBlock",
																"src": "9148:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9150:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "9150:16:15"
																			},
																			"nativeSrc": "9150:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9150:18:15"
																		},
																		"nativeSrc": "9150:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9150:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9120:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9120:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9128:18:15",
																		"nodeType": "YulLiteral",
																		"src": "9128:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9117:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9117:2:15"
																},
																"nativeSrc": "9117:30:15",
																"nodeType": "YulFunctionCall",
																"src": "9117:30:15"
															},
															"nativeSrc": "9114:56:15",
															"nodeType": "YulIf",
															"src": "9114:56:15"
														},
														{
															"nativeSrc": "9180:37:15",
															"nodeType": "YulAssignment",
															"src": "9180:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9210:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9210:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9188:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "9188:21:15"
																},
																"nativeSrc": "9188:29:15",
																"nodeType": "YulFunctionCall",
																"src": "9188:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9180:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9180:4:15"
																}
															]
														},
														{
															"nativeSrc": "9254:23:15",
															"nodeType": "YulAssignment",
															"src": "9254:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9266:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9266:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9272:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9272:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9262:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9262:3:15"
																},
																"nativeSrc": "9262:15:15",
																"nodeType": "YulFunctionCall",
																"src": "9262:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9254:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9254:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8977:307:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9027:6:15",
														"nodeType": "YulTypedName",
														"src": "9027:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9038:4:15",
														"nodeType": "YulTypedName",
														"src": "9038:4:15",
														"type": ""
													}
												],
												"src": "8977:307:15"
											},
											{
												"body": {
													"nativeSrc": "9373:340:15",
													"nodeType": "YulBlock",
													"src": "9373:340:15",
													"statements": [
														{
															"nativeSrc": "9383:74:15",
															"nodeType": "YulAssignment",
															"src": "9383:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9449:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9449:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9408:40:15",
																			"nodeType": "YulIdentifier",
																			"src": "9408:40:15"
																		},
																		"nativeSrc": "9408:48:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9408:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9392:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "9392:15:15"
																},
																"nativeSrc": "9392:65:15",
																"nodeType": "YulFunctionCall",
																"src": "9392:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9383:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9383:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9473:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "9473:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9480:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9480:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9466:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9466:6:15"
																},
																"nativeSrc": "9466:21:15",
																"nodeType": "YulFunctionCall",
																"src": "9466:21:15"
															},
															"nativeSrc": "9466:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "9466:21:15"
														},
														{
															"nativeSrc": "9496:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9496:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9511:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "9511:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9518:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9518:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9507:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9507:3:15"
																},
																"nativeSrc": "9507:16:15",
																"nodeType": "YulFunctionCall",
																"src": "9507:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9500:3:15",
																	"nodeType": "YulTypedName",
																	"src": "9500:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9561:83:15",
																"nodeType": "YulBlock",
																"src": "9561:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9563:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "9563:77:15"
																			},
																			"nativeSrc": "9563:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9563:79:15"
																		},
																		"nativeSrc": "9563:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9563:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9542:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "9542:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9547:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9547:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9538:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9538:3:15"
																		},
																		"nativeSrc": "9538:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9538:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9556:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9556:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9535:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9535:2:15"
																},
																"nativeSrc": "9535:25:15",
																"nodeType": "YulFunctionCall",
																"src": "9535:25:15"
															},
															"nativeSrc": "9532:112:15",
															"nodeType": "YulIf",
															"src": "9532:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9690:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9690:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9695:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9695:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9700:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9700:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9653:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "9653:36:15"
																},
																"nativeSrc": "9653:54:15",
																"nodeType": "YulFunctionCall",
																"src": "9653:54:15"
															},
															"nativeSrc": "9653:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "9653:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9290:423:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9346:3:15",
														"nodeType": "YulTypedName",
														"src": "9346:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9351:6:15",
														"nodeType": "YulTypedName",
														"src": "9351:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9359:3:15",
														"nodeType": "YulTypedName",
														"src": "9359:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9367:5:15",
														"nodeType": "YulTypedName",
														"src": "9367:5:15",
														"type": ""
													}
												],
												"src": "9290:423:15"
											},
											{
												"body": {
													"nativeSrc": "9793:277:15",
													"nodeType": "YulBlock",
													"src": "9793:277:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9842:83:15",
																"nodeType": "YulBlock",
																"src": "9842:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9844:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "9844:77:15"
																			},
																			"nativeSrc": "9844:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9844:79:15"
																		},
																		"nativeSrc": "9844:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9844:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9821:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9821:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9829:4:15",
																						"nodeType": "YulLiteral",
																						"src": "9829:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9817:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9817:3:15"
																				},
																				"nativeSrc": "9817:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9817:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9836:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "9836:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9813:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9813:3:15"
																		},
																		"nativeSrc": "9813:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9813:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9806:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9806:6:15"
																},
																"nativeSrc": "9806:35:15",
																"nodeType": "YulFunctionCall",
																"src": "9806:35:15"
															},
															"nativeSrc": "9803:122:15",
															"nodeType": "YulIf",
															"src": "9803:122:15"
														},
														{
															"nativeSrc": "9934:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9934:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9961:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9961:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9948:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "9948:12:15"
																},
																"nativeSrc": "9948:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9948:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9938:6:15",
																	"nodeType": "YulTypedName",
																	"src": "9938:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9977:87:15",
															"nodeType": "YulAssignment",
															"src": "9977:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10037:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10037:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10045:4:15",
																				"nodeType": "YulLiteral",
																				"src": "10045:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10033:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10033:3:15"
																		},
																		"nativeSrc": "10033:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10033:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10052:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10052:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10060:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10060:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9986:46:15",
																	"nodeType": "YulIdentifier",
																	"src": "9986:46:15"
																},
																"nativeSrc": "9986:78:15",
																"nodeType": "YulFunctionCall",
																"src": "9986:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9977:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9977:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9732:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9771:6:15",
														"nodeType": "YulTypedName",
														"src": "9771:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9779:3:15",
														"nodeType": "YulTypedName",
														"src": "9779:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9787:5:15",
														"nodeType": "YulTypedName",
														"src": "9787:5:15",
														"type": ""
													}
												],
												"src": "9732:338:15"
											},
											{
												"body": {
													"nativeSrc": "10252:1187:15",
													"nodeType": "YulBlock",
													"src": "10252:1187:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10299:83:15",
																"nodeType": "YulBlock",
																"src": "10299:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10301:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10301:77:15"
																			},
																			"nativeSrc": "10301:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10301:79:15"
																		},
																		"nativeSrc": "10301:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10301:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10273:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10273:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10282:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10282:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10269:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10269:3:15"
																		},
																		"nativeSrc": "10269:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10269:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10294:3:15",
																		"nodeType": "YulLiteral",
																		"src": "10294:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10265:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10265:3:15"
																},
																"nativeSrc": "10265:33:15",
																"nodeType": "YulFunctionCall",
																"src": "10265:33:15"
															},
															"nativeSrc": "10262:120:15",
															"nodeType": "YulIf",
															"src": "10262:120:15"
														},
														{
															"nativeSrc": "10392:117:15",
															"nodeType": "YulBlock",
															"src": "10392:117:15",
															"statements": [
																{
																	"nativeSrc": "10407:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10407:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10421:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10421:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10411:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10411:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10436:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10436:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10471:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10471:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10482:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10482:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10467:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10467:3:15"
																				},
																				"nativeSrc": "10467:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10467:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10491:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10491:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10446:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10446:20:15"
																		},
																		"nativeSrc": "10446:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10446:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10436:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10436:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10519:303:15",
															"nodeType": "YulBlock",
															"src": "10519:303:15",
															"statements": [
																{
																	"nativeSrc": "10534:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10534:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10565:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10565:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10576:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10576:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10561:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10561:3:15"
																				},
																				"nativeSrc": "10561:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10561:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10548:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "10548:12:15"
																		},
																		"nativeSrc": "10548:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10548:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10538:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10538:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10627:83:15",
																		"nodeType": "YulBlock",
																		"src": "10627:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10629:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "10629:77:15"
																					},
																					"nativeSrc": "10629:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10629:79:15"
																				},
																				"nativeSrc": "10629:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "10629:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10599:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10599:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10607:18:15",
																				"nodeType": "YulLiteral",
																				"src": "10607:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10596:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10596:2:15"
																		},
																		"nativeSrc": "10596:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10596:30:15"
																	},
																	"nativeSrc": "10593:117:15",
																	"nodeType": "YulIf",
																	"src": "10593:117:15"
																},
																{
																	"nativeSrc": "10724:88:15",
																	"nodeType": "YulAssignment",
																	"src": "10724:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10784:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10784:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10795:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10795:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10780:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10780:3:15"
																				},
																				"nativeSrc": "10780:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10780:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10804:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10804:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10734:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "10734:45:15"
																		},
																		"nativeSrc": "10734:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10734:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10724:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10724:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10832:303:15",
															"nodeType": "YulBlock",
															"src": "10832:303:15",
															"statements": [
																{
																	"nativeSrc": "10847:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10847:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10878:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10878:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10889:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10889:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10874:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10874:3:15"
																				},
																				"nativeSrc": "10874:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10874:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10861:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "10861:12:15"
																		},
																		"nativeSrc": "10861:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10861:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10851:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10851:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10940:83:15",
																		"nodeType": "YulBlock",
																		"src": "10940:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10942:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "10942:77:15"
																					},
																					"nativeSrc": "10942:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10942:79:15"
																				},
																				"nativeSrc": "10942:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "10942:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10912:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10912:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10920:18:15",
																				"nodeType": "YulLiteral",
																				"src": "10920:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10909:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10909:2:15"
																		},
																		"nativeSrc": "10909:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10909:30:15"
																	},
																	"nativeSrc": "10906:117:15",
																	"nodeType": "YulIf",
																	"src": "10906:117:15"
																},
																{
																	"nativeSrc": "11037:88:15",
																	"nodeType": "YulAssignment",
																	"src": "11037:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11097:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11097:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11108:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11108:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11093:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11093:3:15"
																				},
																				"nativeSrc": "11093:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11093:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11117:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11117:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "11047:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "11047:45:15"
																		},
																		"nativeSrc": "11047:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11047:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11037:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11037:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11145:287:15",
															"nodeType": "YulBlock",
															"src": "11145:287:15",
															"statements": [
																{
																	"nativeSrc": "11160:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11160:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11191:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11191:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11202:2:15",
																						"nodeType": "YulLiteral",
																						"src": "11202:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11187:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11187:3:15"
																				},
																				"nativeSrc": "11187:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11187:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11174:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "11174:12:15"
																		},
																		"nativeSrc": "11174:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11174:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11164:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11164:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11253:83:15",
																		"nodeType": "YulBlock",
																		"src": "11253:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11255:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "11255:77:15"
																					},
																					"nativeSrc": "11255:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "11255:79:15"
																				},
																				"nativeSrc": "11255:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "11255:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11225:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11225:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11233:18:15",
																				"nodeType": "YulLiteral",
																				"src": "11233:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11222:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11222:2:15"
																		},
																		"nativeSrc": "11222:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11222:30:15"
																	},
																	"nativeSrc": "11219:117:15",
																	"nodeType": "YulIf",
																	"src": "11219:117:15"
																},
																{
																	"nativeSrc": "11350:72:15",
																	"nodeType": "YulAssignment",
																	"src": "11350:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11394:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11394:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11405:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11405:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11390:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11390:3:15"
																				},
																				"nativeSrc": "11390:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11390:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11414:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11414:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11360:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "11360:29:15"
																		},
																		"nativeSrc": "11360:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11360:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11350:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11350:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "10076:1363:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10198:9:15",
														"nodeType": "YulTypedName",
														"src": "10198:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10209:7:15",
														"nodeType": "YulTypedName",
														"src": "10209:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10221:6:15",
														"nodeType": "YulTypedName",
														"src": "10221:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10229:6:15",
														"nodeType": "YulTypedName",
														"src": "10229:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10237:6:15",
														"nodeType": "YulTypedName",
														"src": "10237:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10245:6:15",
														"nodeType": "YulTypedName",
														"src": "10245:6:15",
														"type": ""
													}
												],
												"src": "10076:1363:15"
											},
											{
												"body": {
													"nativeSrc": "11638:1316:15",
													"nodeType": "YulBlock",
													"src": "11638:1316:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11685:83:15",
																"nodeType": "YulBlock",
																"src": "11685:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11687:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "11687:77:15"
																			},
																			"nativeSrc": "11687:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11687:79:15"
																		},
																		"nativeSrc": "11687:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11687:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11659:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11659:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11668:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11668:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11655:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11655:3:15"
																		},
																		"nativeSrc": "11655:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11655:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11680:3:15",
																		"nodeType": "YulLiteral",
																		"src": "11680:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11651:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11651:3:15"
																},
																"nativeSrc": "11651:33:15",
																"nodeType": "YulFunctionCall",
																"src": "11651:33:15"
															},
															"nativeSrc": "11648:120:15",
															"nodeType": "YulIf",
															"src": "11648:120:15"
														},
														{
															"nativeSrc": "11778:117:15",
															"nodeType": "YulBlock",
															"src": "11778:117:15",
															"statements": [
																{
																	"nativeSrc": "11793:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11793:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11807:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11807:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11797:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11797:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11822:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11822:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11857:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11857:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11868:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11868:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11853:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11853:3:15"
																				},
																				"nativeSrc": "11853:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11853:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11877:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11877:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11832:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11832:20:15"
																		},
																		"nativeSrc": "11832:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11832:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11822:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11822:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11905:118:15",
															"nodeType": "YulBlock",
															"src": "11905:118:15",
															"statements": [
																{
																	"nativeSrc": "11920:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11920:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11934:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11934:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11924:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11924:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11950:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11950:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11985:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11985:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11996:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11996:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11981:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11981:3:15"
																				},
																				"nativeSrc": "11981:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11981:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12005:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12005:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11960:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11960:20:15"
																		},
																		"nativeSrc": "11960:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11960:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11950:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11950:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12033:303:15",
															"nodeType": "YulBlock",
															"src": "12033:303:15",
															"statements": [
																{
																	"nativeSrc": "12048:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12048:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12079:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12079:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12090:2:15",
																						"nodeType": "YulLiteral",
																						"src": "12090:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12075:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12075:3:15"
																				},
																				"nativeSrc": "12075:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12075:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12062:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "12062:12:15"
																		},
																		"nativeSrc": "12062:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12062:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12052:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12052:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12141:83:15",
																		"nodeType": "YulBlock",
																		"src": "12141:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12143:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "12143:77:15"
																					},
																					"nativeSrc": "12143:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "12143:79:15"
																				},
																				"nativeSrc": "12143:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "12143:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12113:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12113:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12121:18:15",
																				"nodeType": "YulLiteral",
																				"src": "12121:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12110:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "12110:2:15"
																		},
																		"nativeSrc": "12110:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12110:30:15"
																	},
																	"nativeSrc": "12107:117:15",
																	"nodeType": "YulIf",
																	"src": "12107:117:15"
																},
																{
																	"nativeSrc": "12238:88:15",
																	"nodeType": "YulAssignment",
																	"src": "12238:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12298:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12298:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12309:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12309:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12294:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12294:3:15"
																				},
																				"nativeSrc": "12294:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12294:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12318:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12318:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "12248:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "12248:45:15"
																		},
																		"nativeSrc": "12248:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12248:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12238:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12238:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12346:303:15",
															"nodeType": "YulBlock",
															"src": "12346:303:15",
															"statements": [
																{
																	"nativeSrc": "12361:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12361:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12392:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12392:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12403:2:15",
																						"nodeType": "YulLiteral",
																						"src": "12403:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12388:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12388:3:15"
																				},
																				"nativeSrc": "12388:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12388:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12375:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "12375:12:15"
																		},
																		"nativeSrc": "12375:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12375:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12365:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12365:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12454:83:15",
																		"nodeType": "YulBlock",
																		"src": "12454:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12456:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "12456:77:15"
																					},
																					"nativeSrc": "12456:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "12456:79:15"
																				},
																				"nativeSrc": "12456:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "12456:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12426:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12426:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12434:18:15",
																				"nodeType": "YulLiteral",
																				"src": "12434:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12423:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "12423:2:15"
																		},
																		"nativeSrc": "12423:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12423:30:15"
																	},
																	"nativeSrc": "12420:117:15",
																	"nodeType": "YulIf",
																	"src": "12420:117:15"
																},
																{
																	"nativeSrc": "12551:88:15",
																	"nodeType": "YulAssignment",
																	"src": "12551:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12611:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12611:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12622:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12622:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12607:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12607:3:15"
																				},
																				"nativeSrc": "12607:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12607:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12631:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12631:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "12561:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "12561:45:15"
																		},
																		"nativeSrc": "12561:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12561:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12551:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12551:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12659:288:15",
															"nodeType": "YulBlock",
															"src": "12659:288:15",
															"statements": [
																{
																	"nativeSrc": "12674:47:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12674:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12705:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12705:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12716:3:15",
																						"nodeType": "YulLiteral",
																						"src": "12716:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12701:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12701:3:15"
																				},
																				"nativeSrc": "12701:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12701:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12688:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "12688:12:15"
																		},
																		"nativeSrc": "12688:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12688:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12678:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12678:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12768:83:15",
																		"nodeType": "YulBlock",
																		"src": "12768:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12770:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "12770:77:15"
																					},
																					"nativeSrc": "12770:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "12770:79:15"
																				},
																				"nativeSrc": "12770:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "12770:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12740:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12740:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12748:18:15",
																				"nodeType": "YulLiteral",
																				"src": "12748:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12737:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "12737:2:15"
																		},
																		"nativeSrc": "12737:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12737:30:15"
																	},
																	"nativeSrc": "12734:117:15",
																	"nodeType": "YulIf",
																	"src": "12734:117:15"
																},
																{
																	"nativeSrc": "12865:72:15",
																	"nodeType": "YulAssignment",
																	"src": "12865:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12909:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12909:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12920:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12920:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12905:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12905:3:15"
																				},
																				"nativeSrc": "12905:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12905:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12929:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12929:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12875:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "12875:29:15"
																		},
																		"nativeSrc": "12875:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12875:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "12865:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12865:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "11445:1509:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11576:9:15",
														"nodeType": "YulTypedName",
														"src": "11576:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11587:7:15",
														"nodeType": "YulTypedName",
														"src": "11587:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11599:6:15",
														"nodeType": "YulTypedName",
														"src": "11599:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11607:6:15",
														"nodeType": "YulTypedName",
														"src": "11607:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11615:6:15",
														"nodeType": "YulTypedName",
														"src": "11615:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11623:6:15",
														"nodeType": "YulTypedName",
														"src": "11623:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11631:6:15",
														"nodeType": "YulTypedName",
														"src": "11631:6:15",
														"type": ""
													}
												],
												"src": "11445:1509:15"
											},
											{
												"body": {
													"nativeSrc": "13042:229:15",
													"nodeType": "YulBlock",
													"src": "13042:229:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "13147:22:15",
																"nodeType": "YulBlock",
																"src": "13147:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "13149:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "13149:16:15"
																			},
																			"nativeSrc": "13149:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13149:18:15"
																		},
																		"nativeSrc": "13149:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13149:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "13119:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13119:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13127:18:15",
																		"nodeType": "YulLiteral",
																		"src": "13127:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13116:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "13116:2:15"
																},
																"nativeSrc": "13116:30:15",
																"nodeType": "YulFunctionCall",
																"src": "13116:30:15"
															},
															"nativeSrc": "13113:56:15",
															"nodeType": "YulIf",
															"src": "13113:56:15"
														},
														{
															"nativeSrc": "13179:25:15",
															"nodeType": "YulAssignment",
															"src": "13179:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "13191:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13191:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13199:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13199:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13187:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13187:3:15"
																},
																"nativeSrc": "13187:17:15",
																"nodeType": "YulFunctionCall",
																"src": "13187:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "13179:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13179:4:15"
																}
															]
														},
														{
															"nativeSrc": "13241:23:15",
															"nodeType": "YulAssignment",
															"src": "13241:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "13253:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "13253:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13259:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13259:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13249:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13249:3:15"
																},
																"nativeSrc": "13249:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13249:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "13241:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13241:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "12960:311:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "13026:6:15",
														"nodeType": "YulTypedName",
														"src": "13026:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "13037:4:15",
														"nodeType": "YulTypedName",
														"src": "13037:4:15",
														"type": ""
													}
												],
												"src": "12960:311:15"
											},
											{
												"body": {
													"nativeSrc": "13396:608:15",
													"nodeType": "YulBlock",
													"src": "13396:608:15",
													"statements": [
														{
															"nativeSrc": "13406:90:15",
															"nodeType": "YulAssignment",
															"src": "13406:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13488:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13488:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "13431:56:15",
																			"nodeType": "YulIdentifier",
																			"src": "13431:56:15"
																		},
																		"nativeSrc": "13431:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13431:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "13415:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "13415:15:15"
																},
																"nativeSrc": "13415:81:15",
																"nodeType": "YulFunctionCall",
																"src": "13415:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "13406:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "13406:5:15"
																}
															]
														},
														{
															"nativeSrc": "13505:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "13505:16:15",
															"value": {
																"name": "array",
																"nativeSrc": "13516:5:15",
																"nodeType": "YulIdentifier",
																"src": "13516:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "13509:3:15",
																	"nodeType": "YulTypedName",
																	"src": "13509:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "13538:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "13538:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13545:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13545:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13531:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13531:6:15"
																},
																"nativeSrc": "13531:21:15",
																"nodeType": "YulFunctionCall",
																"src": "13531:21:15"
															},
															"nativeSrc": "13531:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "13531:21:15"
														},
														{
															"nativeSrc": "13561:23:15",
															"nodeType": "YulAssignment",
															"src": "13561:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "13572:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "13572:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13579:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13579:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13568:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13568:3:15"
																},
																"nativeSrc": "13568:16:15",
																"nodeType": "YulFunctionCall",
																"src": "13568:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "13561:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13561:3:15"
																}
															]
														},
														{
															"nativeSrc": "13594:44:15",
															"nodeType": "YulVariableDeclaration",
															"src": "13594:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13612:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13612:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13624:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13624:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13632:4:15",
																				"nodeType": "YulLiteral",
																				"src": "13632:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "13620:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13620:3:15"
																		},
																		"nativeSrc": "13620:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13620:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13608:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13608:3:15"
																},
																"nativeSrc": "13608:30:15",
																"nodeType": "YulFunctionCall",
																"src": "13608:30:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "13598:6:15",
																	"nodeType": "YulTypedName",
																	"src": "13598:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13666:103:15",
																"nodeType": "YulBlock",
																"src": "13666:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "13680:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "13680:77:15"
																			},
																			"nativeSrc": "13680:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13680:79:15"
																		},
																		"nativeSrc": "13680:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13680:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "13653:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13653:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13661:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13661:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13650:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "13650:2:15"
																},
																"nativeSrc": "13650:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13650:15:15"
															},
															"nativeSrc": "13647:122:15",
															"nodeType": "YulIf",
															"src": "13647:122:15"
														},
														{
															"body": {
																"nativeSrc": "13854:144:15",
																"nodeType": "YulBlock",
																"src": "13854:144:15",
																"statements": [
																	{
																		"nativeSrc": "13869:21:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13869:21:15",
																		"value": {
																			"name": "src",
																			"nativeSrc": "13887:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13887:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "13873:10:15",
																				"nodeType": "YulTypedName",
																				"src": "13873:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "13911:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13911:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "13937:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "13937:10:15"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "13949:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "13949:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "13916:20:15",
																						"nodeType": "YulIdentifier",
																						"src": "13916:20:15"
																					},
																					"nativeSrc": "13916:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "13916:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13904:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13904:6:15"
																			},
																			"nativeSrc": "13904:50:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13904:50:15"
																		},
																		"nativeSrc": "13904:50:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13904:50:15"
																	},
																	{
																		"nativeSrc": "13967:21:15",
																		"nodeType": "YulAssignment",
																		"src": "13967:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "13978:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13978:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13983:4:15",
																					"nodeType": "YulLiteral",
																					"src": "13983:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13974:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "13974:3:15"
																			},
																			"nativeSrc": "13974:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13974:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "13967:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "13967:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "13807:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13807:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "13812:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13812:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13804:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "13804:2:15"
																},
																"nativeSrc": "13804:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13804:15:15"
															},
															"nativeSrc": "13778:220:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13820:25:15",
																"nodeType": "YulBlock",
																"src": "13820:25:15",
																"statements": [
																	{
																		"nativeSrc": "13822:21:15",
																		"nodeType": "YulAssignment",
																		"src": "13822:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "13833:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13833:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13838:4:15",
																					"nodeType": "YulLiteral",
																					"src": "13838:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13829:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "13829:3:15"
																			},
																			"nativeSrc": "13829:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13829:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "13822:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "13822:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13782:21:15",
																"nodeType": "YulBlock",
																"src": "13782:21:15",
																"statements": [
																	{
																		"nativeSrc": "13784:17:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13784:17:15",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "13795:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "13795:6:15"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "13788:3:15",
																				"nodeType": "YulTypedName",
																				"src": "13788:3:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13778:220:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "13294:710:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13366:6:15",
														"nodeType": "YulTypedName",
														"src": "13366:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13374:6:15",
														"nodeType": "YulTypedName",
														"src": "13374:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13382:3:15",
														"nodeType": "YulTypedName",
														"src": "13382:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "13390:5:15",
														"nodeType": "YulTypedName",
														"src": "13390:5:15",
														"type": ""
													}
												],
												"src": "13294:710:15"
											},
											{
												"body": {
													"nativeSrc": "14104:293:15",
													"nodeType": "YulBlock",
													"src": "14104:293:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "14153:83:15",
																"nodeType": "YulBlock",
																"src": "14153:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "14155:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "14155:77:15"
																			},
																			"nativeSrc": "14155:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14155:79:15"
																		},
																		"nativeSrc": "14155:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "14155:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "14132:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "14132:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14140:4:15",
																						"nodeType": "YulLiteral",
																						"src": "14140:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14128:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "14128:3:15"
																				},
																				"nativeSrc": "14128:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14128:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "14147:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "14147:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "14124:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14124:3:15"
																		},
																		"nativeSrc": "14124:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14124:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14117:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14117:6:15"
																},
																"nativeSrc": "14117:35:15",
																"nodeType": "YulFunctionCall",
																"src": "14117:35:15"
															},
															"nativeSrc": "14114:122:15",
															"nodeType": "YulIf",
															"src": "14114:122:15"
														},
														{
															"nativeSrc": "14245:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "14245:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14272:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14272:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "14259:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "14259:12:15"
																},
																"nativeSrc": "14259:20:15",
																"nodeType": "YulFunctionCall",
																"src": "14259:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14249:6:15",
																	"nodeType": "YulTypedName",
																	"src": "14249:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14288:103:15",
															"nodeType": "YulAssignment",
															"src": "14288:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "14364:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14364:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14372:4:15",
																				"nodeType": "YulLiteral",
																				"src": "14372:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14360:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14360:3:15"
																		},
																		"nativeSrc": "14360:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14360:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14379:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14379:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "14387:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14387:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "14297:62:15",
																	"nodeType": "YulIdentifier",
																	"src": "14297:62:15"
																},
																"nativeSrc": "14297:94:15",
																"nodeType": "YulFunctionCall",
																"src": "14297:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "14288:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "14288:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "14027:370:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14082:6:15",
														"nodeType": "YulTypedName",
														"src": "14082:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14090:3:15",
														"nodeType": "YulTypedName",
														"src": "14090:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "14098:5:15",
														"nodeType": "YulTypedName",
														"src": "14098:5:15",
														"type": ""
													}
												],
												"src": "14027:370:15"
											},
											{
												"body": {
													"nativeSrc": "14536:761:15",
													"nodeType": "YulBlock",
													"src": "14536:761:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "14582:83:15",
																"nodeType": "YulBlock",
																"src": "14582:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14584:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "14584:77:15"
																			},
																			"nativeSrc": "14584:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14584:79:15"
																		},
																		"nativeSrc": "14584:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "14584:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14557:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "14557:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14566:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14566:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14553:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14553:3:15"
																		},
																		"nativeSrc": "14553:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14553:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14578:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14578:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14549:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14549:3:15"
																},
																"nativeSrc": "14549:32:15",
																"nodeType": "YulFunctionCall",
																"src": "14549:32:15"
															},
															"nativeSrc": "14546:119:15",
															"nodeType": "YulIf",
															"src": "14546:119:15"
														},
														{
															"nativeSrc": "14675:302:15",
															"nodeType": "YulBlock",
															"src": "14675:302:15",
															"statements": [
																{
																	"nativeSrc": "14690:45:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14690:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14721:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "14721:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14732:1:15",
																						"nodeType": "YulLiteral",
																						"src": "14732:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14717:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "14717:3:15"
																				},
																				"nativeSrc": "14717:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14717:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "14704:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "14704:12:15"
																		},
																		"nativeSrc": "14704:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14704:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14694:6:15",
																			"nodeType": "YulTypedName",
																			"src": "14694:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "14782:83:15",
																		"nodeType": "YulBlock",
																		"src": "14782:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "14784:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "14784:77:15"
																					},
																					"nativeSrc": "14784:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "14784:79:15"
																				},
																				"nativeSrc": "14784:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "14784:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "14754:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14754:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14762:18:15",
																				"nodeType": "YulLiteral",
																				"src": "14762:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "14751:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "14751:2:15"
																		},
																		"nativeSrc": "14751:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14751:30:15"
																	},
																	"nativeSrc": "14748:117:15",
																	"nodeType": "YulIf",
																	"src": "14748:117:15"
																},
																{
																	"nativeSrc": "14879:88:15",
																	"nodeType": "YulAssignment",
																	"src": "14879:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14939:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "14939:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14950:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "14950:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14935:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "14935:3:15"
																				},
																				"nativeSrc": "14935:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14935:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14959:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "14959:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "14889:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "14889:45:15"
																		},
																		"nativeSrc": "14889:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14889:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14879:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "14879:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14987:303:15",
															"nodeType": "YulBlock",
															"src": "14987:303:15",
															"statements": [
																{
																	"nativeSrc": "15002:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15002:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15033:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "15033:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15044:2:15",
																						"nodeType": "YulLiteral",
																						"src": "15044:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15029:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15029:3:15"
																				},
																				"nativeSrc": "15029:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15029:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "15016:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "15016:12:15"
																		},
																		"nativeSrc": "15016:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15016:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15006:6:15",
																			"nodeType": "YulTypedName",
																			"src": "15006:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "15095:83:15",
																		"nodeType": "YulBlock",
																		"src": "15095:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "15097:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "15097:77:15"
																					},
																					"nativeSrc": "15097:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "15097:79:15"
																				},
																				"nativeSrc": "15097:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "15097:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "15067:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15067:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15075:18:15",
																				"nodeType": "YulLiteral",
																				"src": "15075:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "15064:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "15064:2:15"
																		},
																		"nativeSrc": "15064:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15064:30:15"
																	},
																	"nativeSrc": "15061:117:15",
																	"nodeType": "YulIf",
																	"src": "15061:117:15"
																},
																{
																	"nativeSrc": "15192:88:15",
																	"nodeType": "YulAssignment",
																	"src": "15192:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15252:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "15252:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15263:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "15263:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15248:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15248:3:15"
																				},
																				"nativeSrc": "15248:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15248:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15272:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "15272:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "15202:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "15202:45:15"
																		},
																		"nativeSrc": "15202:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15202:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15192:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "15192:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "14403:894:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14498:9:15",
														"nodeType": "YulTypedName",
														"src": "14498:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14509:7:15",
														"nodeType": "YulTypedName",
														"src": "14509:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14521:6:15",
														"nodeType": "YulTypedName",
														"src": "14521:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14529:6:15",
														"nodeType": "YulTypedName",
														"src": "14529:6:15",
														"type": ""
													}
												],
												"src": "14403:894:15"
											},
											{
												"body": {
													"nativeSrc": "15377:40:15",
													"nodeType": "YulBlock",
													"src": "15377:40:15",
													"statements": [
														{
															"nativeSrc": "15388:22:15",
															"nodeType": "YulAssignment",
															"src": "15388:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15404:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15398:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15398:5:15"
																},
																"nativeSrc": "15398:12:15",
																"nodeType": "YulFunctionCall",
																"src": "15398:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15388:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15388:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "15303:114:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15360:5:15",
														"nodeType": "YulTypedName",
														"src": "15360:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15370:6:15",
														"nodeType": "YulTypedName",
														"src": "15370:6:15",
														"type": ""
													}
												],
												"src": "15303:114:15"
											},
											{
												"body": {
													"nativeSrc": "15534:73:15",
													"nodeType": "YulBlock",
													"src": "15534:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15551:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15551:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15556:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15556:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15544:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15544:6:15"
																},
																"nativeSrc": "15544:19:15",
																"nodeType": "YulFunctionCall",
																"src": "15544:19:15"
															},
															"nativeSrc": "15544:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "15544:19:15"
														},
														{
															"nativeSrc": "15572:29:15",
															"nodeType": "YulAssignment",
															"src": "15572:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15591:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15591:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15596:4:15",
																		"nodeType": "YulLiteral",
																		"src": "15596:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15587:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15587:3:15"
																},
																"nativeSrc": "15587:14:15",
																"nodeType": "YulFunctionCall",
																"src": "15587:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15572:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "15572:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "15423:184:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15506:3:15",
														"nodeType": "YulTypedName",
														"src": "15506:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15511:6:15",
														"nodeType": "YulTypedName",
														"src": "15511:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15522:11:15",
														"nodeType": "YulTypedName",
														"src": "15522:11:15",
														"type": ""
													}
												],
												"src": "15423:184:15"
											},
											{
												"body": {
													"nativeSrc": "15685:60:15",
													"nodeType": "YulBlock",
													"src": "15685:60:15",
													"statements": [
														{
															"nativeSrc": "15695:11:15",
															"nodeType": "YulAssignment",
															"src": "15695:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "15703:3:15",
																"nodeType": "YulIdentifier",
																"src": "15703:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15695:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15695:4:15"
																}
															]
														},
														{
															"nativeSrc": "15716:22:15",
															"nodeType": "YulAssignment",
															"src": "15716:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15728:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15728:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15733:4:15",
																		"nodeType": "YulLiteral",
																		"src": "15733:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15724:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15724:3:15"
																},
																"nativeSrc": "15724:14:15",
																"nodeType": "YulFunctionCall",
																"src": "15724:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15716:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15716:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "15613:132:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "15672:3:15",
														"nodeType": "YulTypedName",
														"src": "15672:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "15680:4:15",
														"nodeType": "YulTypedName",
														"src": "15680:4:15",
														"type": ""
													}
												],
												"src": "15613:132:15"
											},
											{
												"body": {
													"nativeSrc": "15806:53:15",
													"nodeType": "YulBlock",
													"src": "15806:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15823:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15823:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15846:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "15846:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "15828:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "15828:17:15"
																		},
																		"nativeSrc": "15828:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15828:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15816:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15816:6:15"
																},
																"nativeSrc": "15816:37:15",
																"nodeType": "YulFunctionCall",
																"src": "15816:37:15"
															},
															"nativeSrc": "15816:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "15816:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "15751:108:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15794:5:15",
														"nodeType": "YulTypedName",
														"src": "15794:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15801:3:15",
														"nodeType": "YulTypedName",
														"src": "15801:3:15",
														"type": ""
													}
												],
												"src": "15751:108:15"
											},
											{
												"body": {
													"nativeSrc": "15945:99:15",
													"nodeType": "YulBlock",
													"src": "15945:99:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15989:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15989:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15997:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15997:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "15955:33:15",
																	"nodeType": "YulIdentifier",
																	"src": "15955:33:15"
																},
																"nativeSrc": "15955:46:15",
																"nodeType": "YulFunctionCall",
																"src": "15955:46:15"
															},
															"nativeSrc": "15955:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "15955:46:15"
														},
														{
															"nativeSrc": "16010:28:15",
															"nodeType": "YulAssignment",
															"src": "16010:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16028:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16028:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16033:4:15",
																		"nodeType": "YulLiteral",
																		"src": "16033:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16024:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16024:3:15"
																},
																"nativeSrc": "16024:14:15",
																"nodeType": "YulFunctionCall",
																"src": "16024:14:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "16010:10:15",
																	"nodeType": "YulIdentifier",
																	"src": "16010:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "15865:179:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "15918:6:15",
														"nodeType": "YulTypedName",
														"src": "15918:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15926:3:15",
														"nodeType": "YulTypedName",
														"src": "15926:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "15934:10:15",
														"nodeType": "YulTypedName",
														"src": "15934:10:15",
														"type": ""
													}
												],
												"src": "15865:179:15"
											},
											{
												"body": {
													"nativeSrc": "16125:38:15",
													"nodeType": "YulBlock",
													"src": "16125:38:15",
													"statements": [
														{
															"nativeSrc": "16135:22:15",
															"nodeType": "YulAssignment",
															"src": "16135:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "16147:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16147:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16152:4:15",
																		"nodeType": "YulLiteral",
																		"src": "16152:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16143:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16143:3:15"
																},
																"nativeSrc": "16143:14:15",
																"nodeType": "YulFunctionCall",
																"src": "16143:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "16135:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16135:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "16050:113:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "16112:3:15",
														"nodeType": "YulTypedName",
														"src": "16112:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "16120:4:15",
														"nodeType": "YulTypedName",
														"src": "16120:4:15",
														"type": ""
													}
												],
												"src": "16050:113:15"
											},
											{
												"body": {
													"nativeSrc": "16323:608:15",
													"nodeType": "YulBlock",
													"src": "16323:608:15",
													"statements": [
														{
															"nativeSrc": "16333:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "16333:68:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16395:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "16395:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "16347:47:15",
																	"nodeType": "YulIdentifier",
																	"src": "16347:47:15"
																},
																"nativeSrc": "16347:54:15",
																"nodeType": "YulFunctionCall",
																"src": "16347:54:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16337:6:15",
																	"nodeType": "YulTypedName",
																	"src": "16337:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16410:93:15",
															"nodeType": "YulAssignment",
															"src": "16410:93:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16491:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16491:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16496:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16496:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "16417:73:15",
																	"nodeType": "YulIdentifier",
																	"src": "16417:73:15"
																},
																"nativeSrc": "16417:86:15",
																"nodeType": "YulFunctionCall",
																"src": "16417:86:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16410:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16410:3:15"
																}
															]
														},
														{
															"nativeSrc": "16512:71:15",
															"nodeType": "YulVariableDeclaration",
															"src": "16512:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16577:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "16577:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "16527:49:15",
																	"nodeType": "YulIdentifier",
																	"src": "16527:49:15"
																},
																"nativeSrc": "16527:56:15",
																"nodeType": "YulFunctionCall",
																"src": "16527:56:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "16516:7:15",
																	"nodeType": "YulTypedName",
																	"src": "16516:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16592:21:15",
															"nodeType": "YulVariableDeclaration",
															"src": "16592:21:15",
															"value": {
																"name": "baseRef",
																"nativeSrc": "16606:7:15",
																"nodeType": "YulIdentifier",
																"src": "16606:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "16596:6:15",
																	"nodeType": "YulTypedName",
																	"src": "16596:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16682:224:15",
																"nodeType": "YulBlock",
																"src": "16682:224:15",
																"statements": [
																	{
																		"nativeSrc": "16696:34:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16696:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "16723:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "16723:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "16717:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "16717:5:15"
																			},
																			"nativeSrc": "16717:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16717:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "16700:13:15",
																				"nodeType": "YulTypedName",
																				"src": "16700:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "16743:70:15",
																		"nodeType": "YulAssignment",
																		"src": "16743:70:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "16794:13:15",
																					"nodeType": "YulIdentifier",
																					"src": "16794:13:15"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "16809:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16809:3:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "16750:43:15",
																				"nodeType": "YulIdentifier",
																				"src": "16750:43:15"
																			},
																			"nativeSrc": "16750:63:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16750:63:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "16743:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "16743:3:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16826:70:15",
																		"nodeType": "YulAssignment",
																		"src": "16826:70:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "16889:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "16889:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "16836:52:15",
																				"nodeType": "YulIdentifier",
																				"src": "16836:52:15"
																			},
																			"nativeSrc": "16836:60:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16836:60:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "16826:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16826:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "16644:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "16644:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16647:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16647:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16641:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "16641:2:15"
																},
																"nativeSrc": "16641:13:15",
																"nodeType": "YulFunctionCall",
																"src": "16641:13:15"
															},
															"nativeSrc": "16622:284:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16655:18:15",
																"nodeType": "YulBlock",
																"src": "16655:18:15",
																"statements": [
																	{
																		"nativeSrc": "16657:14:15",
																		"nodeType": "YulAssignment",
																		"src": "16657:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "16666:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "16666:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16669:1:15",
																					"nodeType": "YulLiteral",
																					"src": "16669:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16662:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "16662:3:15"
																			},
																			"nativeSrc": "16662:9:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16662:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "16657:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "16657:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16626:14:15",
																"nodeType": "YulBlock",
																"src": "16626:14:15",
																"statements": [
																	{
																		"nativeSrc": "16628:10:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16628:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "16637:1:15",
																			"nodeType": "YulLiteral",
																			"src": "16637:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "16632:1:15",
																				"nodeType": "YulTypedName",
																				"src": "16632:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "16622:284:15"
														},
														{
															"nativeSrc": "16915:10:15",
															"nodeType": "YulAssignment",
															"src": "16915:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "16922:3:15",
																"nodeType": "YulIdentifier",
																"src": "16922:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16915:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16915:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "16199:732:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16302:5:15",
														"nodeType": "YulTypedName",
														"src": "16302:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16309:3:15",
														"nodeType": "YulTypedName",
														"src": "16309:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16318:3:15",
														"nodeType": "YulTypedName",
														"src": "16318:3:15",
														"type": ""
													}
												],
												"src": "16199:732:15"
											},
											{
												"body": {
													"nativeSrc": "17085:225:15",
													"nodeType": "YulBlock",
													"src": "17085:225:15",
													"statements": [
														{
															"nativeSrc": "17095:26:15",
															"nodeType": "YulAssignment",
															"src": "17095:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17107:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17107:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17118:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17118:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17103:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17103:3:15"
																},
																"nativeSrc": "17103:18:15",
																"nodeType": "YulFunctionCall",
																"src": "17103:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17095:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17095:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17142:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17142:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17153:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17153:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17138:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17138:3:15"
																		},
																		"nativeSrc": "17138:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17138:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17161:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "17161:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17167:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17167:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17157:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17157:3:15"
																		},
																		"nativeSrc": "17157:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17157:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17131:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17131:6:15"
																},
																"nativeSrc": "17131:47:15",
																"nodeType": "YulFunctionCall",
																"src": "17131:47:15"
															},
															"nativeSrc": "17131:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "17131:47:15"
														},
														{
															"nativeSrc": "17187:116:15",
															"nodeType": "YulAssignment",
															"src": "17187:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17289:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17289:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "17298:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "17298:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "17195:93:15",
																	"nodeType": "YulIdentifier",
																	"src": "17195:93:15"
																},
																"nativeSrc": "17195:108:15",
																"nodeType": "YulFunctionCall",
																"src": "17195:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17187:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17187:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "16937:373:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17057:9:15",
														"nodeType": "YulTypedName",
														"src": "17057:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17069:6:15",
														"nodeType": "YulTypedName",
														"src": "17069:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17080:4:15",
														"nodeType": "YulTypedName",
														"src": "17080:4:15",
														"type": ""
													}
												],
												"src": "16937:373:15"
											},
											{
												"body": {
													"nativeSrc": "17442:817:15",
													"nodeType": "YulBlock",
													"src": "17442:817:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "17489:83:15",
																"nodeType": "YulBlock",
																"src": "17489:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17491:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "17491:77:15"
																			},
																			"nativeSrc": "17491:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17491:79:15"
																		},
																		"nativeSrc": "17491:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "17491:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17463:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17463:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17472:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17472:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17459:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17459:3:15"
																		},
																		"nativeSrc": "17459:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17459:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17484:3:15",
																		"nodeType": "YulLiteral",
																		"src": "17484:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17455:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17455:3:15"
																},
																"nativeSrc": "17455:33:15",
																"nodeType": "YulFunctionCall",
																"src": "17455:33:15"
															},
															"nativeSrc": "17452:120:15",
															"nodeType": "YulIf",
															"src": "17452:120:15"
														},
														{
															"nativeSrc": "17582:117:15",
															"nodeType": "YulBlock",
															"src": "17582:117:15",
															"statements": [
																{
																	"nativeSrc": "17597:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17597:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17611:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17611:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17601:6:15",
																			"nodeType": "YulTypedName",
																			"src": "17601:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17626:63:15",
																	"nodeType": "YulAssignment",
																	"src": "17626:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17661:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "17661:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17672:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "17672:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17657:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "17657:3:15"
																				},
																				"nativeSrc": "17657:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "17657:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17681:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17681:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17636:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "17636:20:15"
																		},
																		"nativeSrc": "17636:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17636:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17626:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "17626:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17709:118:15",
															"nodeType": "YulBlock",
															"src": "17709:118:15",
															"statements": [
																{
																	"nativeSrc": "17724:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17724:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17738:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17738:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17728:6:15",
																			"nodeType": "YulTypedName",
																			"src": "17728:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17754:63:15",
																	"nodeType": "YulAssignment",
																	"src": "17754:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17789:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "17789:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17800:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "17800:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17785:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "17785:3:15"
																				},
																				"nativeSrc": "17785:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "17785:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17809:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17809:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17764:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "17764:20:15"
																		},
																		"nativeSrc": "17764:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17764:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17754:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "17754:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17837:118:15",
															"nodeType": "YulBlock",
															"src": "17837:118:15",
															"statements": [
																{
																	"nativeSrc": "17852:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17852:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17866:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17866:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17856:6:15",
																			"nodeType": "YulTypedName",
																			"src": "17856:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17882:63:15",
																	"nodeType": "YulAssignment",
																	"src": "17882:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17917:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "17917:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17928:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "17928:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17913:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "17913:3:15"
																				},
																				"nativeSrc": "17913:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "17913:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17937:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17937:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17892:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "17892:20:15"
																		},
																		"nativeSrc": "17892:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17892:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "17882:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "17882:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17965:287:15",
															"nodeType": "YulBlock",
															"src": "17965:287:15",
															"statements": [
																{
																	"nativeSrc": "17980:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17980:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18011:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "18011:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18022:2:15",
																						"nodeType": "YulLiteral",
																						"src": "18022:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18007:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18007:3:15"
																				},
																				"nativeSrc": "18007:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18007:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "17994:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "17994:12:15"
																		},
																		"nativeSrc": "17994:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17994:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17984:6:15",
																			"nodeType": "YulTypedName",
																			"src": "17984:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "18073:83:15",
																		"nodeType": "YulBlock",
																		"src": "18073:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "18075:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "18075:77:15"
																					},
																					"nativeSrc": "18075:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "18075:79:15"
																				},
																				"nativeSrc": "18075:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "18075:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "18045:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18045:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18053:18:15",
																				"nodeType": "YulLiteral",
																				"src": "18053:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "18042:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "18042:2:15"
																		},
																		"nativeSrc": "18042:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18042:30:15"
																	},
																	"nativeSrc": "18039:117:15",
																	"nodeType": "YulIf",
																	"src": "18039:117:15"
																},
																{
																	"nativeSrc": "18170:72:15",
																	"nodeType": "YulAssignment",
																	"src": "18170:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18214:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "18214:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18225:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "18225:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18210:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18210:3:15"
																				},
																				"nativeSrc": "18210:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18210:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18234:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "18234:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "18180:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "18180:29:15"
																		},
																		"nativeSrc": "18180:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18180:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "18170:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "18170:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "17316:943:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17388:9:15",
														"nodeType": "YulTypedName",
														"src": "17388:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17399:7:15",
														"nodeType": "YulTypedName",
														"src": "17399:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17411:6:15",
														"nodeType": "YulTypedName",
														"src": "17411:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17419:6:15",
														"nodeType": "YulTypedName",
														"src": "17419:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17427:6:15",
														"nodeType": "YulTypedName",
														"src": "17427:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17435:6:15",
														"nodeType": "YulTypedName",
														"src": "17435:6:15",
														"type": ""
													}
												],
												"src": "17316:943:15"
											},
											{
												"body": {
													"nativeSrc": "18330:53:15",
													"nodeType": "YulBlock",
													"src": "18330:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18347:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "18347:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18370:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "18370:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "18352:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "18352:17:15"
																		},
																		"nativeSrc": "18352:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18352:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18340:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18340:6:15"
																},
																"nativeSrc": "18340:37:15",
																"nodeType": "YulFunctionCall",
																"src": "18340:37:15"
															},
															"nativeSrc": "18340:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "18340:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "18265:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18318:5:15",
														"nodeType": "YulTypedName",
														"src": "18318:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18325:3:15",
														"nodeType": "YulTypedName",
														"src": "18325:3:15",
														"type": ""
													}
												],
												"src": "18265:118:15"
											},
											{
												"body": {
													"nativeSrc": "18487:124:15",
													"nodeType": "YulBlock",
													"src": "18487:124:15",
													"statements": [
														{
															"nativeSrc": "18497:26:15",
															"nodeType": "YulAssignment",
															"src": "18497:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18509:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "18509:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18520:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18520:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18505:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18505:3:15"
																},
																"nativeSrc": "18505:18:15",
																"nodeType": "YulFunctionCall",
																"src": "18505:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18497:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18497:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18577:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "18577:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18590:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18590:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18601:1:15",
																				"nodeType": "YulLiteral",
																				"src": "18601:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18586:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18586:3:15"
																		},
																		"nativeSrc": "18586:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18586:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18533:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "18533:43:15"
																},
																"nativeSrc": "18533:71:15",
																"nodeType": "YulFunctionCall",
																"src": "18533:71:15"
															},
															"nativeSrc": "18533:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "18533:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "18389:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18459:9:15",
														"nodeType": "YulTypedName",
														"src": "18459:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18471:6:15",
														"nodeType": "YulTypedName",
														"src": "18471:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18482:4:15",
														"nodeType": "YulTypedName",
														"src": "18482:4:15",
														"type": ""
													}
												],
												"src": "18389:222:15"
											},
											{
												"body": {
													"nativeSrc": "18657:76:15",
													"nodeType": "YulBlock",
													"src": "18657:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "18711:16:15",
																"nodeType": "YulBlock",
																"src": "18711:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18720:1:15",
																					"nodeType": "YulLiteral",
																					"src": "18720:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18723:1:15",
																					"nodeType": "YulLiteral",
																					"src": "18723:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18713:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18713:6:15"
																			},
																			"nativeSrc": "18713:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "18713:12:15"
																		},
																		"nativeSrc": "18713:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "18713:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18680:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "18680:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18702:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "18702:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "18687:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "18687:14:15"
																				},
																				"nativeSrc": "18687:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18687:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "18677:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "18677:2:15"
																		},
																		"nativeSrc": "18677:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18677:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18670:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18670:6:15"
																},
																"nativeSrc": "18670:40:15",
																"nodeType": "YulFunctionCall",
																"src": "18670:40:15"
															},
															"nativeSrc": "18667:60:15",
															"nodeType": "YulIf",
															"src": "18667:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "18617:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18650:5:15",
														"nodeType": "YulTypedName",
														"src": "18650:5:15",
														"type": ""
													}
												],
												"src": "18617:116:15"
											},
											{
												"body": {
													"nativeSrc": "18788:84:15",
													"nodeType": "YulBlock",
													"src": "18788:84:15",
													"statements": [
														{
															"nativeSrc": "18798:29:15",
															"nodeType": "YulAssignment",
															"src": "18798:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18820:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "18820:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "18807:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "18807:12:15"
																},
																"nativeSrc": "18807:20:15",
																"nodeType": "YulFunctionCall",
																"src": "18807:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18798:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "18798:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18860:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "18860:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "18836:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "18836:23:15"
																},
																"nativeSrc": "18836:30:15",
																"nodeType": "YulFunctionCall",
																"src": "18836:30:15"
															},
															"nativeSrc": "18836:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "18836:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "18739:133:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18766:6:15",
														"nodeType": "YulTypedName",
														"src": "18766:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18774:3:15",
														"nodeType": "YulTypedName",
														"src": "18774:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18782:5:15",
														"nodeType": "YulTypedName",
														"src": "18782:5:15",
														"type": ""
													}
												],
												"src": "18739:133:15"
											},
											{
												"body": {
													"nativeSrc": "18958:388:15",
													"nodeType": "YulBlock",
													"src": "18958:388:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "19004:83:15",
																"nodeType": "YulBlock",
																"src": "19004:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19006:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "19006:77:15"
																			},
																			"nativeSrc": "19006:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "19006:79:15"
																		},
																		"nativeSrc": "19006:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "19006:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18979:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "18979:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18988:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18988:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18975:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18975:3:15"
																		},
																		"nativeSrc": "18975:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18975:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19000:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19000:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18971:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18971:3:15"
																},
																"nativeSrc": "18971:32:15",
																"nodeType": "YulFunctionCall",
																"src": "18971:32:15"
															},
															"nativeSrc": "18968:119:15",
															"nodeType": "YulIf",
															"src": "18968:119:15"
														},
														{
															"nativeSrc": "19097:117:15",
															"nodeType": "YulBlock",
															"src": "19097:117:15",
															"statements": [
																{
																	"nativeSrc": "19112:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19112:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19126:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19126:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19116:6:15",
																			"nodeType": "YulTypedName",
																			"src": "19116:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19141:63:15",
																	"nodeType": "YulAssignment",
																	"src": "19141:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19176:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "19176:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19187:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "19187:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19172:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "19172:3:15"
																				},
																				"nativeSrc": "19172:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "19172:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19196:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "19196:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "19151:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "19151:20:15"
																		},
																		"nativeSrc": "19151:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19151:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19141:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "19141:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19224:115:15",
															"nodeType": "YulBlock",
															"src": "19224:115:15",
															"statements": [
																{
																	"nativeSrc": "19239:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19239:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19253:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19253:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19243:6:15",
																			"nodeType": "YulTypedName",
																			"src": "19243:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19269:60:15",
																	"nodeType": "YulAssignment",
																	"src": "19269:60:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19301:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "19301:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19312:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "19312:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19297:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "19297:3:15"
																				},
																				"nativeSrc": "19297:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "19297:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19321:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "19321:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "19279:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "19279:17:15"
																		},
																		"nativeSrc": "19279:50:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19279:50:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "19269:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "19269:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "18878:468:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18920:9:15",
														"nodeType": "YulTypedName",
														"src": "18920:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18931:7:15",
														"nodeType": "YulTypedName",
														"src": "18931:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18943:6:15",
														"nodeType": "YulTypedName",
														"src": "18943:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18951:6:15",
														"nodeType": "YulTypedName",
														"src": "18951:6:15",
														"type": ""
													}
												],
												"src": "18878:468:15"
											},
											{
												"body": {
													"nativeSrc": "19435:391:15",
													"nodeType": "YulBlock",
													"src": "19435:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "19481:83:15",
																"nodeType": "YulBlock",
																"src": "19481:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19483:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "19483:77:15"
																			},
																			"nativeSrc": "19483:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "19483:79:15"
																		},
																		"nativeSrc": "19483:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "19483:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19456:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "19456:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19465:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19465:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19452:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19452:3:15"
																		},
																		"nativeSrc": "19452:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19452:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19477:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19477:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19448:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19448:3:15"
																},
																"nativeSrc": "19448:32:15",
																"nodeType": "YulFunctionCall",
																"src": "19448:32:15"
															},
															"nativeSrc": "19445:119:15",
															"nodeType": "YulIf",
															"src": "19445:119:15"
														},
														{
															"nativeSrc": "19574:117:15",
															"nodeType": "YulBlock",
															"src": "19574:117:15",
															"statements": [
																{
																	"nativeSrc": "19589:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19589:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19603:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19603:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19593:6:15",
																			"nodeType": "YulTypedName",
																			"src": "19593:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19618:63:15",
																	"nodeType": "YulAssignment",
																	"src": "19618:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19653:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "19653:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19664:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "19664:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19649:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "19649:3:15"
																				},
																				"nativeSrc": "19649:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "19649:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19673:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "19673:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "19628:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "19628:20:15"
																		},
																		"nativeSrc": "19628:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19628:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19618:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "19618:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19701:118:15",
															"nodeType": "YulBlock",
															"src": "19701:118:15",
															"statements": [
																{
																	"nativeSrc": "19716:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19716:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19730:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19730:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19720:6:15",
																			"nodeType": "YulTypedName",
																			"src": "19720:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19746:63:15",
																	"nodeType": "YulAssignment",
																	"src": "19746:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19781:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "19781:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19792:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "19792:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19777:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "19777:3:15"
																				},
																				"nativeSrc": "19777:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "19777:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19801:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "19801:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "19756:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "19756:20:15"
																		},
																		"nativeSrc": "19756:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19756:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "19746:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "19746:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "19352:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19397:9:15",
														"nodeType": "YulTypedName",
														"src": "19397:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19408:7:15",
														"nodeType": "YulTypedName",
														"src": "19408:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19420:6:15",
														"nodeType": "YulTypedName",
														"src": "19420:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19428:6:15",
														"nodeType": "YulTypedName",
														"src": "19428:6:15",
														"type": ""
													}
												],
												"src": "19352:474:15"
											},
											{
												"body": {
													"nativeSrc": "19975:946:15",
													"nodeType": "YulBlock",
													"src": "19975:946:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "20022:83:15",
																"nodeType": "YulBlock",
																"src": "20022:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20024:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "20024:77:15"
																			},
																			"nativeSrc": "20024:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "20024:79:15"
																		},
																		"nativeSrc": "20024:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "20024:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19996:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "19996:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20005:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20005:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19992:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19992:3:15"
																		},
																		"nativeSrc": "19992:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19992:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20017:3:15",
																		"nodeType": "YulLiteral",
																		"src": "20017:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19988:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19988:3:15"
																},
																"nativeSrc": "19988:33:15",
																"nodeType": "YulFunctionCall",
																"src": "19988:33:15"
															},
															"nativeSrc": "19985:120:15",
															"nodeType": "YulIf",
															"src": "19985:120:15"
														},
														{
															"nativeSrc": "20115:117:15",
															"nodeType": "YulBlock",
															"src": "20115:117:15",
															"statements": [
																{
																	"nativeSrc": "20130:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20130:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20144:1:15",
																		"nodeType": "YulLiteral",
																		"src": "20144:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20134:6:15",
																			"nodeType": "YulTypedName",
																			"src": "20134:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20159:63:15",
																	"nodeType": "YulAssignment",
																	"src": "20159:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20194:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "20194:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20205:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "20205:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20190:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "20190:3:15"
																				},
																				"nativeSrc": "20190:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "20190:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20214:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "20214:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "20169:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "20169:20:15"
																		},
																		"nativeSrc": "20169:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20169:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20159:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "20159:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20242:118:15",
															"nodeType": "YulBlock",
															"src": "20242:118:15",
															"statements": [
																{
																	"nativeSrc": "20257:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20257:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20271:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20271:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20261:6:15",
																			"nodeType": "YulTypedName",
																			"src": "20261:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20287:63:15",
																	"nodeType": "YulAssignment",
																	"src": "20287:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20322:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "20322:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20333:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "20333:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20318:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "20318:3:15"
																				},
																				"nativeSrc": "20318:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "20318:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20342:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "20342:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "20297:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "20297:20:15"
																		},
																		"nativeSrc": "20297:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20297:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "20287:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "20287:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20370:118:15",
															"nodeType": "YulBlock",
															"src": "20370:118:15",
															"statements": [
																{
																	"nativeSrc": "20385:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20385:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20399:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20399:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20389:6:15",
																			"nodeType": "YulTypedName",
																			"src": "20389:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20415:63:15",
																	"nodeType": "YulAssignment",
																	"src": "20415:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20450:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "20450:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20461:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "20461:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20446:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "20446:3:15"
																				},
																				"nativeSrc": "20446:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "20446:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20470:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "20470:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "20425:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "20425:20:15"
																		},
																		"nativeSrc": "20425:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20425:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "20415:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "20415:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20498:118:15",
															"nodeType": "YulBlock",
															"src": "20498:118:15",
															"statements": [
																{
																	"nativeSrc": "20513:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20513:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20527:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20527:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20517:6:15",
																			"nodeType": "YulTypedName",
																			"src": "20517:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20543:63:15",
																	"nodeType": "YulAssignment",
																	"src": "20543:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20578:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "20578:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20589:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "20589:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20574:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "20574:3:15"
																				},
																				"nativeSrc": "20574:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "20574:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20598:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "20598:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "20553:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "20553:20:15"
																		},
																		"nativeSrc": "20553:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20553:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "20543:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "20543:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20626:288:15",
															"nodeType": "YulBlock",
															"src": "20626:288:15",
															"statements": [
																{
																	"nativeSrc": "20641:47:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20641:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20672:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "20672:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "20683:3:15",
																						"nodeType": "YulLiteral",
																						"src": "20683:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20668:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "20668:3:15"
																				},
																				"nativeSrc": "20668:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "20668:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "20655:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "20655:12:15"
																		},
																		"nativeSrc": "20655:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20655:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20645:6:15",
																			"nodeType": "YulTypedName",
																			"src": "20645:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "20735:83:15",
																		"nodeType": "YulBlock",
																		"src": "20735:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "20737:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "20737:77:15"
																					},
																					"nativeSrc": "20737:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "20737:79:15"
																				},
																				"nativeSrc": "20737:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "20737:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "20707:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "20707:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20715:18:15",
																				"nodeType": "YulLiteral",
																				"src": "20715:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "20704:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "20704:2:15"
																		},
																		"nativeSrc": "20704:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20704:30:15"
																	},
																	"nativeSrc": "20701:117:15",
																	"nodeType": "YulIf",
																	"src": "20701:117:15"
																},
																{
																	"nativeSrc": "20832:72:15",
																	"nodeType": "YulAssignment",
																	"src": "20832:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20876:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "20876:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20887:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "20887:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20872:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "20872:3:15"
																				},
																				"nativeSrc": "20872:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "20872:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20896:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "20896:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "20842:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "20842:29:15"
																		},
																		"nativeSrc": "20842:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20842:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "20832:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "20832:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "19832:1089:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19913:9:15",
														"nodeType": "YulTypedName",
														"src": "19913:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19924:7:15",
														"nodeType": "YulTypedName",
														"src": "19924:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19936:6:15",
														"nodeType": "YulTypedName",
														"src": "19936:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19944:6:15",
														"nodeType": "YulTypedName",
														"src": "19944:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19952:6:15",
														"nodeType": "YulTypedName",
														"src": "19952:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19960:6:15",
														"nodeType": "YulTypedName",
														"src": "19960:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "19968:6:15",
														"nodeType": "YulTypedName",
														"src": "19968:6:15",
														"type": ""
													}
												],
												"src": "19832:1089:15"
											},
											{
												"body": {
													"nativeSrc": "20993:263:15",
													"nodeType": "YulBlock",
													"src": "20993:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "21039:83:15",
																"nodeType": "YulBlock",
																"src": "21039:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21041:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "21041:77:15"
																			},
																			"nativeSrc": "21041:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "21041:79:15"
																		},
																		"nativeSrc": "21041:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "21041:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21014:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "21014:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21023:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21023:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21010:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21010:3:15"
																		},
																		"nativeSrc": "21010:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21010:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21035:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21035:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21006:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21006:3:15"
																},
																"nativeSrc": "21006:32:15",
																"nodeType": "YulFunctionCall",
																"src": "21006:32:15"
															},
															"nativeSrc": "21003:119:15",
															"nodeType": "YulIf",
															"src": "21003:119:15"
														},
														{
															"nativeSrc": "21132:117:15",
															"nodeType": "YulBlock",
															"src": "21132:117:15",
															"statements": [
																{
																	"nativeSrc": "21147:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21147:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21161:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21161:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21151:6:15",
																			"nodeType": "YulTypedName",
																			"src": "21151:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21176:63:15",
																	"nodeType": "YulAssignment",
																	"src": "21176:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21211:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "21211:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21222:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "21222:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21207:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "21207:3:15"
																				},
																				"nativeSrc": "21207:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "21207:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21231:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "21231:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "21186:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "21186:20:15"
																		},
																		"nativeSrc": "21186:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21186:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21176:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "21176:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "20927:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20963:9:15",
														"nodeType": "YulTypedName",
														"src": "20963:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20974:7:15",
														"nodeType": "YulTypedName",
														"src": "20974:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20986:6:15",
														"nodeType": "YulTypedName",
														"src": "20986:6:15",
														"type": ""
													}
												],
												"src": "20927:329:15"
											},
											{
												"body": {
													"nativeSrc": "21290:152:15",
													"nodeType": "YulBlock",
													"src": "21290:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21307:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21307:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21310:77:15",
																		"nodeType": "YulLiteral",
																		"src": "21310:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21300:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21300:6:15"
																},
																"nativeSrc": "21300:88:15",
																"nodeType": "YulFunctionCall",
																"src": "21300:88:15"
															},
															"nativeSrc": "21300:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "21300:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21404:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21404:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21407:4:15",
																		"nodeType": "YulLiteral",
																		"src": "21407:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21397:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21397:6:15"
																},
																"nativeSrc": "21397:15:15",
																"nodeType": "YulFunctionCall",
																"src": "21397:15:15"
															},
															"nativeSrc": "21397:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "21397:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21428:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21428:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21431:4:15",
																		"nodeType": "YulLiteral",
																		"src": "21431:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21421:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21421:6:15"
																},
																"nativeSrc": "21421:15:15",
																"nodeType": "YulFunctionCall",
																"src": "21421:15:15"
															},
															"nativeSrc": "21421:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "21421:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "21262:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "21262:180:15"
											},
											{
												"body": {
													"nativeSrc": "21499:269:15",
													"nodeType": "YulBlock",
													"src": "21499:269:15",
													"statements": [
														{
															"nativeSrc": "21509:22:15",
															"nodeType": "YulAssignment",
															"src": "21509:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21523:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "21523:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21529:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21529:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "21519:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21519:3:15"
																},
																"nativeSrc": "21519:12:15",
																"nodeType": "YulFunctionCall",
																"src": "21519:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21509:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21509:6:15"
																}
															]
														},
														{
															"nativeSrc": "21540:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "21540:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21570:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "21570:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21576:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21576:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21566:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21566:3:15"
																},
																"nativeSrc": "21566:12:15",
																"nodeType": "YulFunctionCall",
																"src": "21566:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "21544:18:15",
																	"nodeType": "YulTypedName",
																	"src": "21544:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21617:51:15",
																"nodeType": "YulBlock",
																"src": "21617:51:15",
																"statements": [
																	{
																		"nativeSrc": "21631:27:15",
																		"nodeType": "YulAssignment",
																		"src": "21631:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "21645:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "21645:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21653:4:15",
																					"nodeType": "YulLiteral",
																					"src": "21653:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "21641:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "21641:3:15"
																			},
																			"nativeSrc": "21641:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "21641:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "21631:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "21631:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "21597:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "21597:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21590:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21590:6:15"
																},
																"nativeSrc": "21590:26:15",
																"nodeType": "YulFunctionCall",
																"src": "21590:26:15"
															},
															"nativeSrc": "21587:81:15",
															"nodeType": "YulIf",
															"src": "21587:81:15"
														},
														{
															"body": {
																"nativeSrc": "21720:42:15",
																"nodeType": "YulBlock",
																"src": "21720:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "21734:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "21734:16:15"
																			},
																			"nativeSrc": "21734:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "21734:18:15"
																		},
																		"nativeSrc": "21734:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "21734:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "21684:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "21684:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21707:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "21707:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21715:2:15",
																				"nodeType": "YulLiteral",
																				"src": "21715:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "21704:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "21704:2:15"
																		},
																		"nativeSrc": "21704:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21704:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "21681:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "21681:2:15"
																},
																"nativeSrc": "21681:38:15",
																"nodeType": "YulFunctionCall",
																"src": "21681:38:15"
															},
															"nativeSrc": "21678:84:15",
															"nodeType": "YulIf",
															"src": "21678:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "21448:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21483:4:15",
														"nodeType": "YulTypedName",
														"src": "21483:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21492:6:15",
														"nodeType": "YulTypedName",
														"src": "21492:6:15",
														"type": ""
													}
												],
												"src": "21448:320:15"
											},
											{
												"body": {
													"nativeSrc": "21900:206:15",
													"nodeType": "YulBlock",
													"src": "21900:206:15",
													"statements": [
														{
															"nativeSrc": "21910:26:15",
															"nodeType": "YulAssignment",
															"src": "21910:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21922:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21922:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21933:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21933:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21918:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21918:3:15"
																},
																"nativeSrc": "21918:18:15",
																"nodeType": "YulFunctionCall",
																"src": "21918:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21910:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21910:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21990:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21990:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22003:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22003:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22014:1:15",
																				"nodeType": "YulLiteral",
																				"src": "22014:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21999:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21999:3:15"
																		},
																		"nativeSrc": "21999:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21999:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21946:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "21946:43:15"
																},
																"nativeSrc": "21946:71:15",
																"nodeType": "YulFunctionCall",
																"src": "21946:71:15"
															},
															"nativeSrc": "21946:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "21946:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22071:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22071:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22084:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22084:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22095:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22095:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22080:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22080:3:15"
																		},
																		"nativeSrc": "22080:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22080:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22027:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22027:43:15"
																},
																"nativeSrc": "22027:72:15",
																"nodeType": "YulFunctionCall",
																"src": "22027:72:15"
															},
															"nativeSrc": "22027:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "22027:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "21774:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21864:9:15",
														"nodeType": "YulTypedName",
														"src": "21864:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21876:6:15",
														"nodeType": "YulTypedName",
														"src": "21876:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21884:6:15",
														"nodeType": "YulTypedName",
														"src": "21884:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21895:4:15",
														"nodeType": "YulTypedName",
														"src": "21895:4:15",
														"type": ""
													}
												],
												"src": "21774:332:15"
											},
											{
												"body": {
													"nativeSrc": "22238:206:15",
													"nodeType": "YulBlock",
													"src": "22238:206:15",
													"statements": [
														{
															"nativeSrc": "22248:26:15",
															"nodeType": "YulAssignment",
															"src": "22248:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22260:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22260:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22271:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22271:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22256:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22256:3:15"
																},
																"nativeSrc": "22256:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22256:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22248:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22248:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22328:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22328:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22341:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22341:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22352:1:15",
																				"nodeType": "YulLiteral",
																				"src": "22352:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22337:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22337:3:15"
																		},
																		"nativeSrc": "22337:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22337:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22284:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22284:43:15"
																},
																"nativeSrc": "22284:71:15",
																"nodeType": "YulFunctionCall",
																"src": "22284:71:15"
															},
															"nativeSrc": "22284:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "22284:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22409:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22409:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22422:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22422:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22433:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22433:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22418:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22418:3:15"
																		},
																		"nativeSrc": "22418:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22418:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22365:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22365:43:15"
																},
																"nativeSrc": "22365:72:15",
																"nodeType": "YulFunctionCall",
																"src": "22365:72:15"
															},
															"nativeSrc": "22365:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "22365:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "22112:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22202:9:15",
														"nodeType": "YulTypedName",
														"src": "22202:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22214:6:15",
														"nodeType": "YulTypedName",
														"src": "22214:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22222:6:15",
														"nodeType": "YulTypedName",
														"src": "22222:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22233:4:15",
														"nodeType": "YulTypedName",
														"src": "22233:4:15",
														"type": ""
													}
												],
												"src": "22112:332:15"
											},
											{
												"body": {
													"nativeSrc": "22478:152:15",
													"nodeType": "YulBlock",
													"src": "22478:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22495:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22495:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22498:77:15",
																		"nodeType": "YulLiteral",
																		"src": "22498:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22488:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22488:6:15"
																},
																"nativeSrc": "22488:88:15",
																"nodeType": "YulFunctionCall",
																"src": "22488:88:15"
															},
															"nativeSrc": "22488:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "22488:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22592:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22592:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22595:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22595:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22585:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22585:6:15"
																},
																"nativeSrc": "22585:15:15",
																"nodeType": "YulFunctionCall",
																"src": "22585:15:15"
															},
															"nativeSrc": "22585:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "22585:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22616:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22616:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22619:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22619:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22609:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22609:6:15"
																},
																"nativeSrc": "22609:15:15",
																"nodeType": "YulFunctionCall",
																"src": "22609:15:15"
															},
															"nativeSrc": "22609:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "22609:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "22450:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "22450:180:15"
											},
											{
												"body": {
													"nativeSrc": "22690:87:15",
													"nodeType": "YulBlock",
													"src": "22690:87:15",
													"statements": [
														{
															"nativeSrc": "22700:11:15",
															"nodeType": "YulAssignment",
															"src": "22700:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "22708:3:15",
																"nodeType": "YulIdentifier",
																"src": "22708:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22700:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22700:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22728:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22728:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "22731:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22731:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22721:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22721:6:15"
																},
																"nativeSrc": "22721:14:15",
																"nodeType": "YulFunctionCall",
																"src": "22721:14:15"
															},
															"nativeSrc": "22721:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "22721:14:15"
														},
														{
															"nativeSrc": "22744:26:15",
															"nodeType": "YulAssignment",
															"src": "22744:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22762:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22762:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22765:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22765:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "22752:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "22752:9:15"
																},
																"nativeSrc": "22752:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22752:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22744:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22744:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "22636:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "22677:3:15",
														"nodeType": "YulTypedName",
														"src": "22677:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "22685:4:15",
														"nodeType": "YulTypedName",
														"src": "22685:4:15",
														"type": ""
													}
												],
												"src": "22636:141:15"
											},
											{
												"body": {
													"nativeSrc": "22827:49:15",
													"nodeType": "YulBlock",
													"src": "22827:49:15",
													"statements": [
														{
															"nativeSrc": "22837:33:15",
															"nodeType": "YulAssignment",
															"src": "22837:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22855:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "22855:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22862:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22862:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22851:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22851:3:15"
																		},
																		"nativeSrc": "22851:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22851:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22867:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22867:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22847:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22847:3:15"
																},
																"nativeSrc": "22847:23:15",
																"nodeType": "YulFunctionCall",
																"src": "22847:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22837:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22837:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "22783:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22810:5:15",
														"nodeType": "YulTypedName",
														"src": "22810:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22820:6:15",
														"nodeType": "YulTypedName",
														"src": "22820:6:15",
														"type": ""
													}
												],
												"src": "22783:93:15"
											},
											{
												"body": {
													"nativeSrc": "22935:54:15",
													"nodeType": "YulBlock",
													"src": "22935:54:15",
													"statements": [
														{
															"nativeSrc": "22945:37:15",
															"nodeType": "YulAssignment",
															"src": "22945:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22970:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "22970:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22976:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "22976:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "22966:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22966:3:15"
																},
																"nativeSrc": "22966:16:15",
																"nodeType": "YulFunctionCall",
																"src": "22966:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22945:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "22945:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "22882:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22910:4:15",
														"nodeType": "YulTypedName",
														"src": "22910:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22916:5:15",
														"nodeType": "YulTypedName",
														"src": "22916:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22926:8:15",
														"nodeType": "YulTypedName",
														"src": "22926:8:15",
														"type": ""
													}
												],
												"src": "22882:107:15"
											},
											{
												"body": {
													"nativeSrc": "23071:317:15",
													"nodeType": "YulBlock",
													"src": "23071:317:15",
													"statements": [
														{
															"nativeSrc": "23081:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "23081:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "23102:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "23102:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23114:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23114:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "23098:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23098:3:15"
																},
																"nativeSrc": "23098:18:15",
																"nodeType": "YulFunctionCall",
																"src": "23098:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "23085:9:15",
																	"nodeType": "YulTypedName",
																	"src": "23085:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23125:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "23125:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "23156:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23156:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23167:66:15",
																		"nodeType": "YulLiteral",
																		"src": "23167:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "23137:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "23137:18:15"
																},
																"nativeSrc": "23137:97:15",
																"nodeType": "YulFunctionCall",
																"src": "23137:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "23129:4:15",
																	"nodeType": "YulTypedName",
																	"src": "23129:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23243:51:15",
															"nodeType": "YulAssignment",
															"src": "23243:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "23274:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23274:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "23285:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "23285:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "23255:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "23255:18:15"
																},
																"nativeSrc": "23255:39:15",
																"nodeType": "YulFunctionCall",
																"src": "23255:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "23243:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "23243:8:15"
																}
															]
														},
														{
															"nativeSrc": "23303:30:15",
															"nodeType": "YulAssignment",
															"src": "23303:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23316:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "23316:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "23327:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "23327:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "23323:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23323:3:15"
																		},
																		"nativeSrc": "23323:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23323:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23312:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23312:3:15"
																},
																"nativeSrc": "23312:21:15",
																"nodeType": "YulFunctionCall",
																"src": "23312:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23303:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "23303:5:15"
																}
															]
														},
														{
															"nativeSrc": "23342:40:15",
															"nodeType": "YulAssignment",
															"src": "23342:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23355:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "23355:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "23366:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "23366:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "23376:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "23376:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "23362:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23362:3:15"
																		},
																		"nativeSrc": "23362:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23362:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23352:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "23352:2:15"
																},
																"nativeSrc": "23352:30:15",
																"nodeType": "YulFunctionCall",
																"src": "23352:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23342:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23342:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "22995:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23032:5:15",
														"nodeType": "YulTypedName",
														"src": "23032:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "23039:10:15",
														"nodeType": "YulTypedName",
														"src": "23039:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "23051:8:15",
														"nodeType": "YulTypedName",
														"src": "23051:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "23064:6:15",
														"nodeType": "YulTypedName",
														"src": "23064:6:15",
														"type": ""
													}
												],
												"src": "22995:393:15"
											},
											{
												"body": {
													"nativeSrc": "23426:28:15",
													"nodeType": "YulBlock",
													"src": "23426:28:15",
													"statements": [
														{
															"nativeSrc": "23436:12:15",
															"nodeType": "YulAssignment",
															"src": "23436:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "23443:5:15",
																"nodeType": "YulIdentifier",
																"src": "23443:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23436:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23436:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "23394:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23412:5:15",
														"nodeType": "YulTypedName",
														"src": "23412:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23422:3:15",
														"nodeType": "YulTypedName",
														"src": "23422:3:15",
														"type": ""
													}
												],
												"src": "23394:60:15"
											},
											{
												"body": {
													"nativeSrc": "23520:82:15",
													"nodeType": "YulBlock",
													"src": "23520:82:15",
													"statements": [
														{
															"nativeSrc": "23530:66:15",
															"nodeType": "YulAssignment",
															"src": "23530:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23588:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "23588:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "23570:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "23570:17:15"
																				},
																				"nativeSrc": "23570:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "23570:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "23561:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "23561:8:15"
																		},
																		"nativeSrc": "23561:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23561:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23543:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "23543:17:15"
																},
																"nativeSrc": "23543:53:15",
																"nodeType": "YulFunctionCall",
																"src": "23543:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "23530:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "23530:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "23460:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23500:5:15",
														"nodeType": "YulTypedName",
														"src": "23500:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "23510:9:15",
														"nodeType": "YulTypedName",
														"src": "23510:9:15",
														"type": ""
													}
												],
												"src": "23460:142:15"
											},
											{
												"body": {
													"nativeSrc": "23655:28:15",
													"nodeType": "YulBlock",
													"src": "23655:28:15",
													"statements": [
														{
															"nativeSrc": "23665:12:15",
															"nodeType": "YulAssignment",
															"src": "23665:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "23672:5:15",
																"nodeType": "YulIdentifier",
																"src": "23672:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23665:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23665:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "23608:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23641:5:15",
														"nodeType": "YulTypedName",
														"src": "23641:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23651:3:15",
														"nodeType": "YulTypedName",
														"src": "23651:3:15",
														"type": ""
													}
												],
												"src": "23608:75:15"
											},
											{
												"body": {
													"nativeSrc": "23765:193:15",
													"nodeType": "YulBlock",
													"src": "23765:193:15",
													"statements": [
														{
															"nativeSrc": "23775:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "23775:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "23830:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "23830:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "23799:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "23799:30:15"
																},
																"nativeSrc": "23799:39:15",
																"nodeType": "YulFunctionCall",
																"src": "23799:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "23779:16:15",
																	"nodeType": "YulTypedName",
																	"src": "23779:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23854:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "23854:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "23894:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "23894:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "23888:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "23888:5:15"
																				},
																				"nativeSrc": "23888:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "23888:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "23901:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "23901:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "23933:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "23933:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "23909:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "23909:23:15"
																				},
																				"nativeSrc": "23909:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "23909:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "23860:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "23860:27:15"
																		},
																		"nativeSrc": "23860:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23860:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "23847:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23847:6:15"
																},
																"nativeSrc": "23847:105:15",
																"nodeType": "YulFunctionCall",
																"src": "23847:105:15"
															},
															"nativeSrc": "23847:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "23847:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "23689:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23742:4:15",
														"nodeType": "YulTypedName",
														"src": "23742:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23748:6:15",
														"nodeType": "YulTypedName",
														"src": "23748:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "23756:7:15",
														"nodeType": "YulTypedName",
														"src": "23756:7:15",
														"type": ""
													}
												],
												"src": "23689:269:15"
											},
											{
												"body": {
													"nativeSrc": "24013:24:15",
													"nodeType": "YulBlock",
													"src": "24013:24:15",
													"statements": [
														{
															"nativeSrc": "24023:8:15",
															"nodeType": "YulAssignment",
															"src": "24023:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "24030:1:15",
																"nodeType": "YulLiteral",
																"src": "24030:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "24023:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24023:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "23964:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24009:3:15",
														"nodeType": "YulTypedName",
														"src": "24009:3:15",
														"type": ""
													}
												],
												"src": "23964:73:15"
											},
											{
												"body": {
													"nativeSrc": "24096:136:15",
													"nodeType": "YulBlock",
													"src": "24096:136:15",
													"statements": [
														{
															"nativeSrc": "24106:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "24106:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "24120:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "24120:30:15"
																},
																"nativeSrc": "24120:32:15",
																"nodeType": "YulFunctionCall",
																"src": "24120:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "24110:6:15",
																	"nodeType": "YulTypedName",
																	"src": "24110:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24205:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "24205:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "24211:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24211:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "24219:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24219:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "24161:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "24161:43:15"
																},
																"nativeSrc": "24161:65:15",
																"nodeType": "YulFunctionCall",
																"src": "24161:65:15"
															},
															"nativeSrc": "24161:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "24161:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "24043:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24082:4:15",
														"nodeType": "YulTypedName",
														"src": "24082:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "24088:6:15",
														"nodeType": "YulTypedName",
														"src": "24088:6:15",
														"type": ""
													}
												],
												"src": "24043:189:15"
											},
											{
												"body": {
													"nativeSrc": "24288:136:15",
													"nodeType": "YulBlock",
													"src": "24288:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "24355:63:15",
																"nodeType": "YulBlock",
																"src": "24355:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24399:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "24399:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24406:1:15",
																					"nodeType": "YulLiteral",
																					"src": "24406:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "24369:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "24369:29:15"
																			},
																			"nativeSrc": "24369:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "24369:39:15"
																		},
																		"nativeSrc": "24369:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "24369:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "24308:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "24308:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "24315:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24315:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "24305:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "24305:2:15"
																},
																"nativeSrc": "24305:14:15",
																"nodeType": "YulFunctionCall",
																"src": "24305:14:15"
															},
															"nativeSrc": "24298:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "24320:26:15",
																"nodeType": "YulBlock",
																"src": "24320:26:15",
																"statements": [
																	{
																		"nativeSrc": "24322:22:15",
																		"nodeType": "YulAssignment",
																		"src": "24322:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24335:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "24335:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24342:1:15",
																					"nodeType": "YulLiteral",
																					"src": "24342:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24331:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "24331:3:15"
																			},
																			"nativeSrc": "24331:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "24331:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "24322:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "24322:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "24302:2:15",
																"nodeType": "YulBlock",
																"src": "24302:2:15",
																"statements": []
															},
															"src": "24298:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "24238:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "24276:5:15",
														"nodeType": "YulTypedName",
														"src": "24276:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24283:3:15",
														"nodeType": "YulTypedName",
														"src": "24283:3:15",
														"type": ""
													}
												],
												"src": "24238:186:15"
											},
											{
												"body": {
													"nativeSrc": "24509:464:15",
													"nodeType": "YulBlock",
													"src": "24509:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "24535:431:15",
																"nodeType": "YulBlock",
																"src": "24535:431:15",
																"statements": [
																	{
																		"nativeSrc": "24549:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24549:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "24597:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "24597:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "24565:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "24565:31:15"
																			},
																			"nativeSrc": "24565:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "24565:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "24553:8:15",
																				"nodeType": "YulTypedName",
																				"src": "24553:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "24616:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24616:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "24639:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "24639:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "24667:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "24667:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "24649:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "24649:17:15"
																					},
																					"nativeSrc": "24649:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "24649:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24635:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "24635:3:15"
																			},
																			"nativeSrc": "24635:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "24635:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "24620:11:15",
																				"nodeType": "YulTypedName",
																				"src": "24620:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "24836:27:15",
																			"nodeType": "YulBlock",
																			"src": "24836:27:15",
																			"statements": [
																				{
																					"nativeSrc": "24838:23:15",
																					"nodeType": "YulAssignment",
																					"src": "24838:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "24853:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "24853:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "24838:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "24838:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "24820:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "24820:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24832:2:15",
																					"nodeType": "YulLiteral",
																					"src": "24832:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "24817:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "24817:2:15"
																			},
																			"nativeSrc": "24817:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "24817:18:15"
																		},
																		"nativeSrc": "24814:49:15",
																		"nodeType": "YulIf",
																		"src": "24814:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "24905:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "24905:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "24922:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "24922:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "24950:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "24950:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "24932:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "24932:17:15"
																							},
																							"nativeSrc": "24932:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "24932:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "24918:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "24918:3:15"
																					},
																					"nativeSrc": "24918:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "24918:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "24876:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "24876:28:15"
																			},
																			"nativeSrc": "24876:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "24876:80:15"
																		},
																		"nativeSrc": "24876:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "24876:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "24526:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24526:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24531:2:15",
																		"nodeType": "YulLiteral",
																		"src": "24531:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24523:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "24523:2:15"
																},
																"nativeSrc": "24523:11:15",
																"nodeType": "YulFunctionCall",
																"src": "24523:11:15"
															},
															"nativeSrc": "24520:446:15",
															"nodeType": "YulIf",
															"src": "24520:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "24430:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "24485:5:15",
														"nodeType": "YulTypedName",
														"src": "24485:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24492:3:15",
														"nodeType": "YulTypedName",
														"src": "24492:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "24497:10:15",
														"nodeType": "YulTypedName",
														"src": "24497:10:15",
														"type": ""
													}
												],
												"src": "24430:543:15"
											},
											{
												"body": {
													"nativeSrc": "25042:54:15",
													"nodeType": "YulBlock",
													"src": "25042:54:15",
													"statements": [
														{
															"nativeSrc": "25052:37:15",
															"nodeType": "YulAssignment",
															"src": "25052:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "25077:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25077:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "25083:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "25083:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "25073:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25073:3:15"
																},
																"nativeSrc": "25073:16:15",
																"nodeType": "YulFunctionCall",
																"src": "25073:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "25052:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "25052:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "24979:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "25017:4:15",
														"nodeType": "YulTypedName",
														"src": "25017:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "25023:5:15",
														"nodeType": "YulTypedName",
														"src": "25023:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "25033:8:15",
														"nodeType": "YulTypedName",
														"src": "25033:8:15",
														"type": ""
													}
												],
												"src": "24979:117:15"
											},
											{
												"body": {
													"nativeSrc": "25153:118:15",
													"nodeType": "YulBlock",
													"src": "25153:118:15",
													"statements": [
														{
															"nativeSrc": "25163:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "25163:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25212:1:15",
																						"nodeType": "YulLiteral",
																						"src": "25212:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "25215:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "25215:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "25208:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "25208:3:15"
																				},
																				"nativeSrc": "25208:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "25208:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25227:1:15",
																						"nodeType": "YulLiteral",
																						"src": "25227:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "25223:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "25223:3:15"
																				},
																				"nativeSrc": "25223:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "25223:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "25179:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "25179:28:15"
																		},
																		"nativeSrc": "25179:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25179:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "25175:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25175:3:15"
																},
																"nativeSrc": "25175:56:15",
																"nodeType": "YulFunctionCall",
																"src": "25175:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "25167:4:15",
																	"nodeType": "YulTypedName",
																	"src": "25167:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25240:25:15",
															"nodeType": "YulAssignment",
															"src": "25240:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25254:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25254:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "25260:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25260:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "25250:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25250:3:15"
																},
																"nativeSrc": "25250:15:15",
																"nodeType": "YulFunctionCall",
																"src": "25250:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "25240:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25240:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "25102:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "25130:4:15",
														"nodeType": "YulTypedName",
														"src": "25130:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "25136:5:15",
														"nodeType": "YulTypedName",
														"src": "25136:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "25146:6:15",
														"nodeType": "YulTypedName",
														"src": "25146:6:15",
														"type": ""
													}
												],
												"src": "25102:169:15"
											},
											{
												"body": {
													"nativeSrc": "25357:214:15",
													"nodeType": "YulBlock",
													"src": "25357:214:15",
													"statements": [
														{
															"nativeSrc": "25490:37:15",
															"nodeType": "YulAssignment",
															"src": "25490:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25517:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25517:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "25523:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "25523:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "25498:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "25498:18:15"
																},
																"nativeSrc": "25498:29:15",
																"nodeType": "YulFunctionCall",
																"src": "25498:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "25490:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "25490:4:15"
																}
															]
														},
														{
															"nativeSrc": "25536:29:15",
															"nodeType": "YulAssignment",
															"src": "25536:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25547:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25547:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "25557:1:15",
																				"nodeType": "YulLiteral",
																				"src": "25557:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "25560:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "25560:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "25553:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25553:3:15"
																		},
																		"nativeSrc": "25553:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25553:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "25544:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "25544:2:15"
																},
																"nativeSrc": "25544:21:15",
																"nodeType": "YulFunctionCall",
																"src": "25544:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "25536:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "25536:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "25276:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "25338:4:15",
														"nodeType": "YulTypedName",
														"src": "25338:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "25344:3:15",
														"nodeType": "YulTypedName",
														"src": "25344:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "25352:4:15",
														"nodeType": "YulTypedName",
														"src": "25352:4:15",
														"type": ""
													}
												],
												"src": "25276:295:15"
											},
											{
												"body": {
													"nativeSrc": "25668:1303:15",
													"nodeType": "YulBlock",
													"src": "25668:1303:15",
													"statements": [
														{
															"nativeSrc": "25679:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "25679:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "25726:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "25726:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "25693:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "25693:32:15"
																},
																"nativeSrc": "25693:37:15",
																"nodeType": "YulFunctionCall",
																"src": "25693:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "25683:6:15",
																	"nodeType": "YulTypedName",
																	"src": "25683:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25815:22:15",
																"nodeType": "YulBlock",
																"src": "25815:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "25817:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "25817:16:15"
																			},
																			"nativeSrc": "25817:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "25817:18:15"
																		},
																		"nativeSrc": "25817:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "25817:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25787:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "25787:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25795:18:15",
																		"nodeType": "YulLiteral",
																		"src": "25795:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25784:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "25784:2:15"
																},
																"nativeSrc": "25784:30:15",
																"nodeType": "YulFunctionCall",
																"src": "25784:30:15"
															},
															"nativeSrc": "25781:56:15",
															"nodeType": "YulIf",
															"src": "25781:56:15"
														},
														{
															"nativeSrc": "25847:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "25847:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "25893:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "25893:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "25887:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "25887:5:15"
																		},
																		"nativeSrc": "25887:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25887:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "25861:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "25861:25:15"
																},
																"nativeSrc": "25861:38:15",
																"nodeType": "YulFunctionCall",
																"src": "25861:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "25851:6:15",
																	"nodeType": "YulTypedName",
																	"src": "25851:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25992:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25992:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "25998:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "25998:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "26006:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26006:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "25946:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "25946:45:15"
																},
																"nativeSrc": "25946:67:15",
																"nodeType": "YulFunctionCall",
																"src": "25946:67:15"
															},
															"nativeSrc": "25946:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "25946:67:15"
														},
														{
															"nativeSrc": "26023:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "26023:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "26040:1:15",
																"nodeType": "YulLiteral",
																"src": "26040:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "26027:9:15",
																	"nodeType": "YulTypedName",
																	"src": "26027:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26051:17:15",
															"nodeType": "YulAssignment",
															"src": "26051:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "26064:4:15",
																"nodeType": "YulLiteral",
																"src": "26064:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "26051:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "26051:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "26115:611:15",
																		"nodeType": "YulBlock",
																		"src": "26115:611:15",
																		"statements": [
																			{
																				"nativeSrc": "26129:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26129:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "26148:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "26148:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "26160:4:15",
																									"nodeType": "YulLiteral",
																									"src": "26160:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "26156:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "26156:3:15"
																							},
																							"nativeSrc": "26156:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "26156:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "26144:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "26144:3:15"
																					},
																					"nativeSrc": "26144:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26144:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "26133:7:15",
																						"nodeType": "YulTypedName",
																						"src": "26133:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "26180:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26180:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26226:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "26226:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "26194:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "26194:31:15"
																					},
																					"nativeSrc": "26194:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26194:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "26184:6:15",
																						"nodeType": "YulTypedName",
																						"src": "26184:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "26244:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26244:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "26253:1:15",
																					"nodeType": "YulLiteral",
																					"src": "26253:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "26248:1:15",
																						"nodeType": "YulTypedName",
																						"src": "26248:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26312:163:15",
																					"nodeType": "YulBlock",
																					"src": "26312:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26337:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "26337:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "26355:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "26355:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "26360:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "26360:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "26351:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "26351:3:15"
																												},
																												"nativeSrc": "26351:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "26351:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "26345:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "26345:5:15"
																										},
																										"nativeSrc": "26345:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "26345:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "26330:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "26330:6:15"
																								},
																								"nativeSrc": "26330:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26330:42:15"
																							},
																							"nativeSrc": "26330:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "26330:42:15"
																						},
																						{
																							"nativeSrc": "26389:24:15",
																							"nodeType": "YulAssignment",
																							"src": "26389:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26403:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "26403:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26411:1:15",
																										"nodeType": "YulLiteral",
																										"src": "26411:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26399:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "26399:3:15"
																								},
																								"nativeSrc": "26399:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26399:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "26389:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "26389:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "26430:31:15",
																							"nodeType": "YulAssignment",
																							"src": "26430:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "26447:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "26447:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26458:2:15",
																										"nodeType": "YulLiteral",
																										"src": "26458:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26443:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "26443:3:15"
																								},
																								"nativeSrc": "26443:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26443:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "26430:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "26430:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "26278:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "26278:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "26281:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "26281:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "26275:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "26275:2:15"
																					},
																					"nativeSrc": "26275:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26275:14:15"
																				},
																				"nativeSrc": "26267:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "26290:21:15",
																					"nodeType": "YulBlock",
																					"src": "26290:21:15",
																					"statements": [
																						{
																							"nativeSrc": "26292:17:15",
																							"nodeType": "YulAssignment",
																							"src": "26292:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "26301:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "26301:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26304:4:15",
																										"nodeType": "YulLiteral",
																										"src": "26304:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26297:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "26297:3:15"
																								},
																								"nativeSrc": "26297:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26297:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "26292:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "26292:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "26271:3:15",
																					"nodeType": "YulBlock",
																					"src": "26271:3:15",
																					"statements": []
																				},
																				"src": "26267:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "26511:156:15",
																					"nodeType": "YulBlock",
																					"src": "26511:156:15",
																					"statements": [
																						{
																							"nativeSrc": "26529:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "26529:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "26556:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "26556:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "26561:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "26561:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "26552:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "26552:3:15"
																										},
																										"nativeSrc": "26552:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "26552:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "26546:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "26546:5:15"
																								},
																								"nativeSrc": "26546:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26546:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "26533:9:15",
																									"nodeType": "YulTypedName",
																									"src": "26533:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26596:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "26596:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "26623:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "26623:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "26638:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "26638:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "26646:4:15",
																														"nodeType": "YulLiteral",
																														"src": "26646:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "26634:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "26634:3:15"
																												},
																												"nativeSrc": "26634:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "26634:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "26604:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "26604:18:15"
																										},
																										"nativeSrc": "26604:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "26604:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "26589:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "26589:6:15"
																								},
																								"nativeSrc": "26589:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26589:64:15"
																							},
																							"nativeSrc": "26589:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "26589:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "26494:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "26494:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "26503:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "26503:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "26491:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "26491:2:15"
																					},
																					"nativeSrc": "26491:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26491:19:15"
																				},
																				"nativeSrc": "26488:179:15",
																				"nodeType": "YulIf",
																				"src": "26488:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26687:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "26687:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "26701:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "26701:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "26709:1:15",
																											"nodeType": "YulLiteral",
																											"src": "26709:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "26697:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "26697:3:15"
																									},
																									"nativeSrc": "26697:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "26697:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "26713:1:15",
																									"nodeType": "YulLiteral",
																									"src": "26713:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "26693:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "26693:3:15"
																							},
																							"nativeSrc": "26693:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "26693:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26680:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "26680:6:15"
																					},
																					"nativeSrc": "26680:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26680:36:15"
																				},
																				"nativeSrc": "26680:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "26680:36:15"
																			}
																		]
																	},
																	"nativeSrc": "26108:618:15",
																	"nodeType": "YulCase",
																	"src": "26108:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "26113:1:15",
																		"nodeType": "YulLiteral",
																		"src": "26113:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "26743:222:15",
																		"nodeType": "YulBlock",
																		"src": "26743:222:15",
																		"statements": [
																			{
																				"nativeSrc": "26757:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26757:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "26770:1:15",
																					"nodeType": "YulLiteral",
																					"src": "26770:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "26761:5:15",
																						"nodeType": "YulTypedName",
																						"src": "26761:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26794:67:15",
																					"nodeType": "YulBlock",
																					"src": "26794:67:15",
																					"statements": [
																						{
																							"nativeSrc": "26812:35:15",
																							"nodeType": "YulAssignment",
																							"src": "26812:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "26831:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "26831:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "26836:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "26836:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "26827:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "26827:3:15"
																										},
																										"nativeSrc": "26827:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "26827:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "26821:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "26821:5:15"
																								},
																								"nativeSrc": "26821:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26821:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "26812:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "26812:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "26787:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "26787:6:15"
																				},
																				"nativeSrc": "26784:77:15",
																				"nodeType": "YulIf",
																				"src": "26784:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26881:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "26881:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "26940:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "26940:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "26947:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "26947:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "26887:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "26887:52:15"
																							},
																							"nativeSrc": "26887:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "26887:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26874:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "26874:6:15"
																					},
																					"nativeSrc": "26874:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26874:81:15"
																				},
																				"nativeSrc": "26874:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "26874:81:15"
																			}
																		]
																	},
																	"nativeSrc": "26735:230:15",
																	"nodeType": "YulCase",
																	"src": "26735:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "26088:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26088:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26096:2:15",
																		"nodeType": "YulLiteral",
																		"src": "26096:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26085:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "26085:2:15"
																},
																"nativeSrc": "26085:14:15",
																"nodeType": "YulFunctionCall",
																"src": "26085:14:15"
															},
															"nativeSrc": "26078:887:15",
															"nodeType": "YulSwitch",
															"src": "26078:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "25576:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25657:4:15",
														"nodeType": "YulTypedName",
														"src": "25657:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "25663:3:15",
														"nodeType": "YulTypedName",
														"src": "25663:3:15",
														"type": ""
													}
												],
												"src": "25576:1395:15"
											},
											{
												"body": {
													"nativeSrc": "27035:40:15",
													"nodeType": "YulBlock",
													"src": "27035:40:15",
													"statements": [
														{
															"nativeSrc": "27046:22:15",
															"nodeType": "YulAssignment",
															"src": "27046:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27062:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "27062:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "27056:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "27056:5:15"
																},
																"nativeSrc": "27056:12:15",
																"nodeType": "YulFunctionCall",
																"src": "27056:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "27046:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "27046:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "26977:98:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27018:5:15",
														"nodeType": "YulTypedName",
														"src": "27018:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "27028:6:15",
														"nodeType": "YulTypedName",
														"src": "27028:6:15",
														"type": ""
													}
												],
												"src": "26977:98:15"
											},
											{
												"body": {
													"nativeSrc": "27176:73:15",
													"nodeType": "YulBlock",
													"src": "27176:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27193:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27193:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27198:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27198:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27186:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "27186:6:15"
																},
																"nativeSrc": "27186:19:15",
																"nodeType": "YulFunctionCall",
																"src": "27186:19:15"
															},
															"nativeSrc": "27186:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "27186:19:15"
														},
														{
															"nativeSrc": "27214:29:15",
															"nodeType": "YulAssignment",
															"src": "27214:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27233:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27233:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27238:4:15",
																		"nodeType": "YulLiteral",
																		"src": "27238:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27229:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27229:3:15"
																},
																"nativeSrc": "27229:14:15",
																"nodeType": "YulFunctionCall",
																"src": "27229:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "27214:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "27214:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "27081:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27148:3:15",
														"nodeType": "YulTypedName",
														"src": "27148:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "27153:6:15",
														"nodeType": "YulTypedName",
														"src": "27153:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "27164:11:15",
														"nodeType": "YulTypedName",
														"src": "27164:11:15",
														"type": ""
													}
												],
												"src": "27081:168:15"
											},
											{
												"body": {
													"nativeSrc": "27345:283:15",
													"nodeType": "YulBlock",
													"src": "27345:283:15",
													"statements": [
														{
															"nativeSrc": "27355:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "27355:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27401:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "27401:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "27369:31:15",
																	"nodeType": "YulIdentifier",
																	"src": "27369:31:15"
																},
																"nativeSrc": "27369:38:15",
																"nodeType": "YulFunctionCall",
																"src": "27369:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "27359:6:15",
																	"nodeType": "YulTypedName",
																	"src": "27359:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27416:77:15",
															"nodeType": "YulAssignment",
															"src": "27416:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27481:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27481:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27486:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27486:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "27423:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "27423:57:15"
																},
																"nativeSrc": "27423:70:15",
																"nodeType": "YulFunctionCall",
																"src": "27423:70:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27416:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27416:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "27541:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "27541:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27548:4:15",
																				"nodeType": "YulLiteral",
																				"src": "27548:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27537:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "27537:3:15"
																		},
																		"nativeSrc": "27537:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "27537:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "27555:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27555:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27560:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27560:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "27502:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "27502:34:15"
																},
																"nativeSrc": "27502:65:15",
																"nodeType": "YulFunctionCall",
																"src": "27502:65:15"
															},
															"nativeSrc": "27502:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "27502:65:15"
														},
														{
															"nativeSrc": "27576:46:15",
															"nodeType": "YulAssignment",
															"src": "27576:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27587:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27587:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "27614:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "27614:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "27592:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "27592:21:15"
																		},
																		"nativeSrc": "27592:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "27592:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27583:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27583:3:15"
																},
																"nativeSrc": "27583:39:15",
																"nodeType": "YulFunctionCall",
																"src": "27583:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27576:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27576:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "27255:373:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27326:5:15",
														"nodeType": "YulTypedName",
														"src": "27326:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "27333:3:15",
														"nodeType": "YulTypedName",
														"src": "27333:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27341:3:15",
														"nodeType": "YulTypedName",
														"src": "27341:3:15",
														"type": ""
													}
												],
												"src": "27255:373:15"
											},
											{
												"body": {
													"nativeSrc": "27862:523:15",
													"nodeType": "YulBlock",
													"src": "27862:523:15",
													"statements": [
														{
															"nativeSrc": "27872:27:15",
															"nodeType": "YulAssignment",
															"src": "27872:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27884:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "27884:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27895:3:15",
																		"nodeType": "YulLiteral",
																		"src": "27895:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27880:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27880:3:15"
																},
																"nativeSrc": "27880:19:15",
																"nodeType": "YulFunctionCall",
																"src": "27880:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27872:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "27872:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27953:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27953:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27966:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "27966:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27977:1:15",
																				"nodeType": "YulLiteral",
																				"src": "27977:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27962:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "27962:3:15"
																		},
																		"nativeSrc": "27962:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "27962:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27909:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "27909:43:15"
																},
																"nativeSrc": "27909:71:15",
																"nodeType": "YulFunctionCall",
																"src": "27909:71:15"
															},
															"nativeSrc": "27909:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "27909:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28034:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "28034:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28047:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28047:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28058:2:15",
																				"nodeType": "YulLiteral",
																				"src": "28058:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28043:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28043:3:15"
																		},
																		"nativeSrc": "28043:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28043:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27990:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "27990:43:15"
																},
																"nativeSrc": "27990:72:15",
																"nodeType": "YulFunctionCall",
																"src": "27990:72:15"
															},
															"nativeSrc": "27990:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "27990:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "28116:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "28116:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28129:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28129:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28140:2:15",
																				"nodeType": "YulLiteral",
																				"src": "28140:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28125:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28125:3:15"
																		},
																		"nativeSrc": "28125:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28125:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28072:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "28072:43:15"
																},
																"nativeSrc": "28072:72:15",
																"nodeType": "YulFunctionCall",
																"src": "28072:72:15"
															},
															"nativeSrc": "28072:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "28072:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "28198:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "28198:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28211:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28211:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28222:2:15",
																				"nodeType": "YulLiteral",
																				"src": "28222:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28207:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28207:3:15"
																		},
																		"nativeSrc": "28207:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28207:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28154:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "28154:43:15"
																},
																"nativeSrc": "28154:72:15",
																"nodeType": "YulFunctionCall",
																"src": "28154:72:15"
															},
															"nativeSrc": "28154:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "28154:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28247:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28247:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28258:3:15",
																				"nodeType": "YulLiteral",
																				"src": "28258:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28243:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28243:3:15"
																		},
																		"nativeSrc": "28243:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28243:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28268:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "28268:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28274:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28274:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28264:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28264:3:15"
																		},
																		"nativeSrc": "28264:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28264:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28236:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "28236:6:15"
																},
																"nativeSrc": "28236:49:15",
																"nodeType": "YulFunctionCall",
																"src": "28236:49:15"
															},
															"nativeSrc": "28236:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "28236:49:15"
														},
														{
															"nativeSrc": "28294:84:15",
															"nodeType": "YulAssignment",
															"src": "28294:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "28364:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "28364:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "28373:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "28373:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "28302:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "28302:61:15"
																},
																"nativeSrc": "28302:76:15",
																"nodeType": "YulFunctionCall",
																"src": "28302:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28294:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "28294:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "27634:751:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27802:9:15",
														"nodeType": "YulTypedName",
														"src": "27802:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "27814:6:15",
														"nodeType": "YulTypedName",
														"src": "27814:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "27822:6:15",
														"nodeType": "YulTypedName",
														"src": "27822:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "27830:6:15",
														"nodeType": "YulTypedName",
														"src": "27830:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27838:6:15",
														"nodeType": "YulTypedName",
														"src": "27838:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27846:6:15",
														"nodeType": "YulTypedName",
														"src": "27846:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27857:4:15",
														"nodeType": "YulTypedName",
														"src": "27857:4:15",
														"type": ""
													}
												],
												"src": "27634:751:15"
											},
											{
												"body": {
													"nativeSrc": "28453:79:15",
													"nodeType": "YulBlock",
													"src": "28453:79:15",
													"statements": [
														{
															"nativeSrc": "28463:22:15",
															"nodeType": "YulAssignment",
															"src": "28463:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "28478:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "28478:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "28472:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "28472:5:15"
																},
																"nativeSrc": "28472:13:15",
																"nodeType": "YulFunctionCall",
																"src": "28472:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "28463:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "28463:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28520:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "28520:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "28494:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "28494:25:15"
																},
																"nativeSrc": "28494:32:15",
																"nodeType": "YulFunctionCall",
																"src": "28494:32:15"
															},
															"nativeSrc": "28494:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "28494:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "28391:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "28431:6:15",
														"nodeType": "YulTypedName",
														"src": "28431:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "28439:3:15",
														"nodeType": "YulTypedName",
														"src": "28439:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "28447:5:15",
														"nodeType": "YulTypedName",
														"src": "28447:5:15",
														"type": ""
													}
												],
												"src": "28391:141:15"
											},
											{
												"body": {
													"nativeSrc": "28614:273:15",
													"nodeType": "YulBlock",
													"src": "28614:273:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "28660:83:15",
																"nodeType": "YulBlock",
																"src": "28660:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "28662:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "28662:77:15"
																			},
																			"nativeSrc": "28662:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "28662:79:15"
																		},
																		"nativeSrc": "28662:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "28662:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28635:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "28635:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28644:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28644:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28631:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28631:3:15"
																		},
																		"nativeSrc": "28631:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28631:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28656:2:15",
																		"nodeType": "YulLiteral",
																		"src": "28656:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "28627:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28627:3:15"
																},
																"nativeSrc": "28627:32:15",
																"nodeType": "YulFunctionCall",
																"src": "28627:32:15"
															},
															"nativeSrc": "28624:119:15",
															"nodeType": "YulIf",
															"src": "28624:119:15"
														},
														{
															"nativeSrc": "28753:127:15",
															"nodeType": "YulBlock",
															"src": "28753:127:15",
															"statements": [
																{
																	"nativeSrc": "28768:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "28768:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28782:1:15",
																		"nodeType": "YulLiteral",
																		"src": "28782:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "28772:6:15",
																			"nodeType": "YulTypedName",
																			"src": "28772:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "28797:73:15",
																	"nodeType": "YulAssignment",
																	"src": "28797:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "28842:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "28842:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "28853:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "28853:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "28838:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "28838:3:15"
																				},
																				"nativeSrc": "28838:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "28838:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28862:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "28862:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "28807:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "28807:30:15"
																		},
																		"nativeSrc": "28807:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28807:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "28797:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "28797:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "28538:349:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28584:9:15",
														"nodeType": "YulTypedName",
														"src": "28584:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "28595:7:15",
														"nodeType": "YulTypedName",
														"src": "28595:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "28607:6:15",
														"nodeType": "YulTypedName",
														"src": "28607:6:15",
														"type": ""
													}
												],
												"src": "28538:349:15"
											},
											{
												"body": {
													"nativeSrc": "29221:725:15",
													"nodeType": "YulBlock",
													"src": "29221:725:15",
													"statements": [
														{
															"nativeSrc": "29231:27:15",
															"nodeType": "YulAssignment",
															"src": "29231:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29243:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "29243:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29254:3:15",
																		"nodeType": "YulLiteral",
																		"src": "29254:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29239:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29239:3:15"
																},
																"nativeSrc": "29239:19:15",
																"nodeType": "YulFunctionCall",
																"src": "29239:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29231:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "29231:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "29312:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29312:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29325:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29325:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29336:1:15",
																				"nodeType": "YulLiteral",
																				"src": "29336:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29321:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29321:3:15"
																		},
																		"nativeSrc": "29321:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29321:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "29268:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "29268:43:15"
																},
																"nativeSrc": "29268:71:15",
																"nodeType": "YulFunctionCall",
																"src": "29268:71:15"
															},
															"nativeSrc": "29268:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "29268:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "29393:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29393:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29406:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29406:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29417:2:15",
																				"nodeType": "YulLiteral",
																				"src": "29417:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29402:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29402:3:15"
																		},
																		"nativeSrc": "29402:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29402:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "29349:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "29349:43:15"
																},
																"nativeSrc": "29349:72:15",
																"nodeType": "YulFunctionCall",
																"src": "29349:72:15"
															},
															"nativeSrc": "29349:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "29349:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29442:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29442:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29453:2:15",
																				"nodeType": "YulLiteral",
																				"src": "29453:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29438:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29438:3:15"
																		},
																		"nativeSrc": "29438:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29438:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29462:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "29462:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29468:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29468:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29458:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29458:3:15"
																		},
																		"nativeSrc": "29458:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29458:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29431:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "29431:6:15"
																},
																"nativeSrc": "29431:48:15",
																"nodeType": "YulFunctionCall",
																"src": "29431:48:15"
															},
															"nativeSrc": "29431:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "29431:48:15"
														},
														{
															"nativeSrc": "29488:116:15",
															"nodeType": "YulAssignment",
															"src": "29488:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "29590:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29590:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "29599:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "29599:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "29496:93:15",
																	"nodeType": "YulIdentifier",
																	"src": "29496:93:15"
																},
																"nativeSrc": "29496:108:15",
																"nodeType": "YulFunctionCall",
																"src": "29496:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29488:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "29488:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29625:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29625:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29636:2:15",
																				"nodeType": "YulLiteral",
																				"src": "29636:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29621:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29621:3:15"
																		},
																		"nativeSrc": "29621:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29621:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29645:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "29645:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29651:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29651:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29641:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29641:3:15"
																		},
																		"nativeSrc": "29641:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29641:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29614:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "29614:6:15"
																},
																"nativeSrc": "29614:48:15",
																"nodeType": "YulFunctionCall",
																"src": "29614:48:15"
															},
															"nativeSrc": "29614:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "29614:48:15"
														},
														{
															"nativeSrc": "29671:116:15",
															"nodeType": "YulAssignment",
															"src": "29671:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "29773:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29773:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "29782:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "29782:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "29679:93:15",
																	"nodeType": "YulIdentifier",
																	"src": "29679:93:15"
																},
																"nativeSrc": "29679:108:15",
																"nodeType": "YulFunctionCall",
																"src": "29679:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29671:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "29671:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29808:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29808:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29819:3:15",
																				"nodeType": "YulLiteral",
																				"src": "29819:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29804:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29804:3:15"
																		},
																		"nativeSrc": "29804:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29804:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29829:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "29829:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29835:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29835:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29825:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29825:3:15"
																		},
																		"nativeSrc": "29825:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29825:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29797:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "29797:6:15"
																},
																"nativeSrc": "29797:49:15",
																"nodeType": "YulFunctionCall",
																"src": "29797:49:15"
															},
															"nativeSrc": "29797:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "29797:49:15"
														},
														{
															"nativeSrc": "29855:84:15",
															"nodeType": "YulAssignment",
															"src": "29855:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "29925:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29925:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "29934:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "29934:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "29863:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "29863:61:15"
																},
																"nativeSrc": "29863:76:15",
																"nodeType": "YulFunctionCall",
																"src": "29863:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29855:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "29855:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "28893:1053:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29161:9:15",
														"nodeType": "YulTypedName",
														"src": "29161:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "29173:6:15",
														"nodeType": "YulTypedName",
														"src": "29173:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "29181:6:15",
														"nodeType": "YulTypedName",
														"src": "29181:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "29189:6:15",
														"nodeType": "YulTypedName",
														"src": "29189:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "29197:6:15",
														"nodeType": "YulTypedName",
														"src": "29197:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "29205:6:15",
														"nodeType": "YulTypedName",
														"src": "29205:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29216:4:15",
														"nodeType": "YulTypedName",
														"src": "29216:4:15",
														"type": ""
													}
												],
												"src": "28893:1053:15"
											},
											{
												"body": {
													"nativeSrc": "30134:371:15",
													"nodeType": "YulBlock",
													"src": "30134:371:15",
													"statements": [
														{
															"nativeSrc": "30144:27:15",
															"nodeType": "YulAssignment",
															"src": "30144:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30156:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "30156:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30167:3:15",
																		"nodeType": "YulLiteral",
																		"src": "30167:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30152:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30152:3:15"
																},
																"nativeSrc": "30152:19:15",
																"nodeType": "YulFunctionCall",
																"src": "30152:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30144:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "30144:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30225:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30225:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30238:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30238:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30249:1:15",
																				"nodeType": "YulLiteral",
																				"src": "30249:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30234:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30234:3:15"
																		},
																		"nativeSrc": "30234:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30234:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30181:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "30181:43:15"
																},
																"nativeSrc": "30181:71:15",
																"nodeType": "YulFunctionCall",
																"src": "30181:71:15"
															},
															"nativeSrc": "30181:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "30181:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30306:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30306:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30319:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30319:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30330:2:15",
																				"nodeType": "YulLiteral",
																				"src": "30330:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30315:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30315:3:15"
																		},
																		"nativeSrc": "30315:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30315:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30262:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "30262:43:15"
																},
																"nativeSrc": "30262:72:15",
																"nodeType": "YulFunctionCall",
																"src": "30262:72:15"
															},
															"nativeSrc": "30262:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "30262:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "30388:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30388:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30401:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30401:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30412:2:15",
																				"nodeType": "YulLiteral",
																				"src": "30412:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30397:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30397:3:15"
																		},
																		"nativeSrc": "30397:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30397:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30344:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "30344:43:15"
																},
																"nativeSrc": "30344:72:15",
																"nodeType": "YulFunctionCall",
																"src": "30344:72:15"
															},
															"nativeSrc": "30344:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "30344:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "30470:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30470:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30483:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30483:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30494:2:15",
																				"nodeType": "YulLiteral",
																				"src": "30494:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30479:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30479:3:15"
																		},
																		"nativeSrc": "30479:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30479:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30426:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "30426:43:15"
																},
																"nativeSrc": "30426:72:15",
																"nodeType": "YulFunctionCall",
																"src": "30426:72:15"
															},
															"nativeSrc": "30426:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "30426:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "29952:553:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30082:9:15",
														"nodeType": "YulTypedName",
														"src": "30082:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "30094:6:15",
														"nodeType": "YulTypedName",
														"src": "30094:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "30102:6:15",
														"nodeType": "YulTypedName",
														"src": "30102:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "30110:6:15",
														"nodeType": "YulTypedName",
														"src": "30110:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30118:6:15",
														"nodeType": "YulTypedName",
														"src": "30118:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30129:4:15",
														"nodeType": "YulTypedName",
														"src": "30129:4:15",
														"type": ""
													}
												],
												"src": "29952:553:15"
											},
											{
												"body": {
													"nativeSrc": "30539:152:15",
													"nodeType": "YulBlock",
													"src": "30539:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "30556:1:15",
																		"nodeType": "YulLiteral",
																		"src": "30556:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30559:77:15",
																		"nodeType": "YulLiteral",
																		"src": "30559:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30549:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "30549:6:15"
																},
																"nativeSrc": "30549:88:15",
																"nodeType": "YulFunctionCall",
																"src": "30549:88:15"
															},
															"nativeSrc": "30549:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "30549:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "30653:1:15",
																		"nodeType": "YulLiteral",
																		"src": "30653:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30656:4:15",
																		"nodeType": "YulLiteral",
																		"src": "30656:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30646:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "30646:6:15"
																},
																"nativeSrc": "30646:15:15",
																"nodeType": "YulFunctionCall",
																"src": "30646:15:15"
															},
															"nativeSrc": "30646:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "30646:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "30677:1:15",
																		"nodeType": "YulLiteral",
																		"src": "30677:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30680:4:15",
																		"nodeType": "YulLiteral",
																		"src": "30680:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "30670:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "30670:6:15"
																},
																"nativeSrc": "30670:15:15",
																"nodeType": "YulFunctionCall",
																"src": "30670:15:15"
															},
															"nativeSrc": "30670:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "30670:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "30511:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "30511:180:15"
											},
											{
												"body": {
													"nativeSrc": "30741:147:15",
													"nodeType": "YulBlock",
													"src": "30741:147:15",
													"statements": [
														{
															"nativeSrc": "30751:25:15",
															"nodeType": "YulAssignment",
															"src": "30751:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "30774:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "30774:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "30756:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "30756:17:15"
																},
																"nativeSrc": "30756:20:15",
																"nodeType": "YulFunctionCall",
																"src": "30756:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "30751:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "30751:1:15"
																}
															]
														},
														{
															"nativeSrc": "30785:25:15",
															"nodeType": "YulAssignment",
															"src": "30785:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "30808:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "30808:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "30790:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "30790:17:15"
																},
																"nativeSrc": "30790:20:15",
																"nodeType": "YulFunctionCall",
																"src": "30790:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "30785:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "30785:1:15"
																}
															]
														},
														{
															"nativeSrc": "30819:16:15",
															"nodeType": "YulAssignment",
															"src": "30819:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "30830:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "30830:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "30833:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "30833:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30826:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30826:3:15"
																},
																"nativeSrc": "30826:9:15",
																"nodeType": "YulFunctionCall",
																"src": "30826:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "30819:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30819:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "30859:22:15",
																"nodeType": "YulBlock",
																"src": "30859:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "30861:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "30861:16:15"
																			},
																			"nativeSrc": "30861:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "30861:18:15"
																		},
																		"nativeSrc": "30861:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "30861:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "30851:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "30851:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "30854:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "30854:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "30848:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "30848:2:15"
																},
																"nativeSrc": "30848:10:15",
																"nodeType": "YulFunctionCall",
																"src": "30848:10:15"
															},
															"nativeSrc": "30845:36:15",
															"nodeType": "YulIf",
															"src": "30845:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "30697:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "30728:1:15",
														"nodeType": "YulTypedName",
														"src": "30728:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "30731:1:15",
														"nodeType": "YulTypedName",
														"src": "30731:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "30737:3:15",
														"nodeType": "YulTypedName",
														"src": "30737:3:15",
														"type": ""
													}
												],
												"src": "30697:191:15"
											},
											{
												"body": {
													"nativeSrc": "31120:408:15",
													"nodeType": "YulBlock",
													"src": "31120:408:15",
													"statements": [
														{
															"nativeSrc": "31130:26:15",
															"nodeType": "YulAssignment",
															"src": "31130:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31142:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "31142:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31153:2:15",
																		"nodeType": "YulLiteral",
																		"src": "31153:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31138:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "31138:3:15"
																},
																"nativeSrc": "31138:18:15",
																"nodeType": "YulFunctionCall",
																"src": "31138:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31130:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "31130:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31177:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31177:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31188:1:15",
																				"nodeType": "YulLiteral",
																				"src": "31188:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31173:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31173:3:15"
																		},
																		"nativeSrc": "31173:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31173:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31196:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "31196:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31202:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31202:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31192:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31192:3:15"
																		},
																		"nativeSrc": "31192:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31192:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31166:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "31166:6:15"
																},
																"nativeSrc": "31166:47:15",
																"nodeType": "YulFunctionCall",
																"src": "31166:47:15"
															},
															"nativeSrc": "31166:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "31166:47:15"
														},
														{
															"nativeSrc": "31222:116:15",
															"nodeType": "YulAssignment",
															"src": "31222:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31324:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31324:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "31333:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "31333:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "31230:93:15",
																	"nodeType": "YulIdentifier",
																	"src": "31230:93:15"
																},
																"nativeSrc": "31230:108:15",
																"nodeType": "YulFunctionCall",
																"src": "31230:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31222:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "31222:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31359:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31359:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31370:2:15",
																				"nodeType": "YulLiteral",
																				"src": "31370:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31355:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31355:3:15"
																		},
																		"nativeSrc": "31355:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31355:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31379:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "31379:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31385:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31385:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31375:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31375:3:15"
																		},
																		"nativeSrc": "31375:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31375:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31348:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "31348:6:15"
																},
																"nativeSrc": "31348:48:15",
																"nodeType": "YulFunctionCall",
																"src": "31348:48:15"
															},
															"nativeSrc": "31348:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "31348:48:15"
														},
														{
															"nativeSrc": "31405:116:15",
															"nodeType": "YulAssignment",
															"src": "31405:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "31507:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31507:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "31516:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "31516:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "31413:93:15",
																	"nodeType": "YulIdentifier",
																	"src": "31413:93:15"
																},
																"nativeSrc": "31413:108:15",
																"nodeType": "YulFunctionCall",
																"src": "31413:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31405:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "31405:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "30894:634:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31084:9:15",
														"nodeType": "YulTypedName",
														"src": "31084:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "31096:6:15",
														"nodeType": "YulTypedName",
														"src": "31096:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "31104:6:15",
														"nodeType": "YulTypedName",
														"src": "31104:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31115:4:15",
														"nodeType": "YulTypedName",
														"src": "31115:4:15",
														"type": ""
													}
												],
												"src": "30894:634:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610108575f3560e01c80635c975abb116100a05780638da5cb5b1161006f5780638da5cb5b14610278578063a22cb46514610296578063e985e9c5146102b2578063f242432a146102e2578063f2fde38b146102fe57610108565b80635c975abb1461022a578063715018a614610248578063731133e9146102525780638456cb591461026e57610108565b80631f7fdffa116100dc5780631f7fdffa146101b85780632eb2c2d6146101d45780633f4ba83a146101f05780634e1273f4146101fa57610108565b8062fdd58e1461010c57806301ffc9a71461013c57806302fe53051461016c5780630e89341c14610188575b5f80fd5b61012660048036038101906101219190611964565b61031a565b60405161013391906119b1565b60405180910390f35b61015660048036038101906101519190611a1f565b61036f565b6040516101639190611a64565b60405180910390f35b61018660048036038101906101819190611bb9565b610450565b005b6101a2600480360381019061019d9190611c00565b610464565b6040516101af9190611c8b565b60405180910390f35b6101d260048036038101906101cd9190611e0d565b6104f6565b005b6101ee60048036038101906101e99190611ec5565b610510565b005b6101f86105b7565b005b610214600480360381019061020f9190612050565b6105c9565b604051610221919061217d565b60405180910390f35b6102326106d0565b60405161023f9190611a64565b60405180910390f35b6102506106e6565b005b61026c6004803603810190610267919061219d565b6106f9565b005b610276610713565b005b610280610725565b60405161028d919061222c565b60405180910390f35b6102b060048036038101906102ab919061226f565b61074d565b005b6102cc60048036038101906102c791906122ad565b610763565b6040516102d99190611a64565b60405180910390f35b6102fc60048036038101906102f791906122eb565b6107f1565b005b6103186004803603810190610313919061237e565b610898565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043957507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061044957506104488261091c565b5b9050919050565b610458610985565b61046181610a0c565b50565b606060028054610473906123d6565b80601f016020809104026020016040519081016040528092919081815260200182805461049f906123d6565b80156104ea5780601f106104c1576101008083540402835291602001916104ea565b820191905f5260205f20905b8154815290600101906020018083116104cd57829003601f168201915b50505050509050919050565b6104fe610985565b61050a84848484610a1f565b50505050565b5f610519610aa2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561055e575061055c8682610763565b155b156105a25780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610599929190612406565b60405180910390fd5b6105af8686868686610aa9565b505050505050565b6105bf610985565b6105c7610b9d565b565b6060815183511461061557815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161060c92919061242d565b60405180910390fd5b5f835167ffffffffffffffff81111561063157610630611a95565b5b60405190808252806020026020018201604052801561065f5781602001602082028036833780820191505090505b5090505f5b84518110156106c55761069b6106838287610bff90919063ffffffff16565b6106968387610c1290919063ffffffff16565b61031a565b8282815181106106ae576106ad612454565b5b602002602001018181525050806001019050610664565b508091505092915050565b5f600360149054906101000a900460ff16905090565b6106ee610985565b6106f75f610c25565b565b610701610985565b61070d84848484610ce8565b50505050565b61071b610985565b610723610d7d565b565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61075f610758610aa2565b8383610de0565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6107fa610aa2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561083f575061083d8682610763565b155b156108835780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161087a929190612406565b60405180910390fd5b6108908686868686610f49565b505050505050565b6108a0610985565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610910575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610907919061222c565b60405180910390fd5b61091981610c25565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61098d610aa2565b73ffffffffffffffffffffffffffffffffffffffff166109ab610725565b73ffffffffffffffffffffffffffffffffffffffff1614610a0a576109ce610aa2565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a01919061222c565b60405180910390fd5b565b8060029081610a1b919061261e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a8f575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610a86919061222c565b60405180910390fd5b610a9c5f8585858561104f565b50505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b19575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b10919061222c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b89575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b80919061222c565b60405180910390fd5b610b96858585858561104f565b5050505050565b610ba56110fb565b5f600360146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610be8610aa2565b604051610bf5919061222c565b60405180910390a1565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d58575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610d4f919061222c565b60405180910390fd5b5f80610d64858561113b565b91509150610d755f8784848761104f565b505050505050565b610d8561116b565b6001600360146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610dc9610aa2565b604051610dd6919061222c565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e50575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610e47919061222c565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f3c9190611a64565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fb9575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610fb0919061222c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611029575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611020919061222c565b60405180910390fd5b5f80611035858561113b565b91509150611046878784848761104f565b50505050505050565b61105b858585856111ac565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146110f4575f611097610aa2565b905060018451036110e3575f6110b65f86610c1290919063ffffffff16565b90505f6110cc5f86610c1290919063ffffffff16565b90506110dc8389898585896111be565b50506110f2565b6110f181878787878761136d565b5b505b5050505050565b6111036106d0565b611139576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b6111736106d0565b156111aa576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6111b88484848461151c565b50505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611365578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161121e95949392919061273f565b6020604051808303815f875af192505050801561125957506040513d601f19601f8201168201806040525081019061125691906127ab565b60015b6112da573d805f8114611287576040519150601f19603f3d011682016040523d82523d5f602084013e61128c565b606091505b505f8151036112d257846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112c9919061222c565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461136357846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161135a919061222c565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611514578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016113cd9594939291906127d6565b6020604051808303815f875af192505050801561140857506040513d601f19601f8201168201806040525081019061140591906127ab565b60015b611489573d805f8114611436576040519150601f19603f3d011682016040523d82523d5f602084013e61143b565b606091505b505f81510361148157846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611478919061222c565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461151257846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611509919061222c565b60405180910390fd5b505b505050505050565b61152461116b565b61153084848484611536565b50505050565b805182511461158057815181516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161157792919061242d565b60405180910390fd5b5f611589610aa2565b90505f5b8351811015611785575f6115aa8286610c1290919063ffffffff16565b90505f6115c08386610c1290919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146116e3575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561168f57888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401611686949392919061283c565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461177857805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461177091906128ac565b925050819055505b505080600101905061158d565b506001835103611840575f6117a35f85610c1290919063ffffffff16565b90505f6117b95f85610c1290919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161183192919061242d565b60405180910390a450506118bf565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516118b69291906128df565b60405180910390a45b5050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611900826118d7565b9050919050565b611910816118f6565b811461191a575f80fd5b50565b5f8135905061192b81611907565b92915050565b5f819050919050565b61194381611931565b811461194d575f80fd5b50565b5f8135905061195e8161193a565b92915050565b5f806040838503121561197a576119796118cf565b5b5f6119878582860161191d565b925050602061199885828601611950565b9150509250929050565b6119ab81611931565b82525050565b5f6020820190506119c45f8301846119a2565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119fe816119ca565b8114611a08575f80fd5b50565b5f81359050611a19816119f5565b92915050565b5f60208284031215611a3457611a336118cf565b5b5f611a4184828501611a0b565b91505092915050565b5f8115159050919050565b611a5e81611a4a565b82525050565b5f602082019050611a775f830184611a55565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611acb82611a85565b810181811067ffffffffffffffff82111715611aea57611ae9611a95565b5b80604052505050565b5f611afc6118c6565b9050611b088282611ac2565b919050565b5f67ffffffffffffffff821115611b2757611b26611a95565b5b611b3082611a85565b9050602081019050919050565b828183375f83830152505050565b5f611b5d611b5884611b0d565b611af3565b905082815260208101848484011115611b7957611b78611a81565b5b611b84848285611b3d565b509392505050565b5f82601f830112611ba057611b9f611a7d565b5b8135611bb0848260208601611b4b565b91505092915050565b5f60208284031215611bce57611bcd6118cf565b5b5f82013567ffffffffffffffff811115611beb57611bea6118d3565b5b611bf784828501611b8c565b91505092915050565b5f60208284031215611c1557611c146118cf565b5b5f611c2284828501611950565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611c5d82611c2b565b611c678185611c35565b9350611c77818560208601611c45565b611c8081611a85565b840191505092915050565b5f6020820190508181035f830152611ca38184611c53565b905092915050565b5f67ffffffffffffffff821115611cc557611cc4611a95565b5b602082029050602081019050919050565b5f80fd5b5f611cec611ce784611cab565b611af3565b90508083825260208201905060208402830185811115611d0f57611d0e611cd6565b5b835b81811015611d385780611d248882611950565b845260208401935050602081019050611d11565b5050509392505050565b5f82601f830112611d5657611d55611a7d565b5b8135611d66848260208601611cda565b91505092915050565b5f67ffffffffffffffff821115611d8957611d88611a95565b5b611d9282611a85565b9050602081019050919050565b5f611db1611dac84611d6f565b611af3565b905082815260208101848484011115611dcd57611dcc611a81565b5b611dd8848285611b3d565b509392505050565b5f82601f830112611df457611df3611a7d565b5b8135611e04848260208601611d9f565b91505092915050565b5f805f8060808587031215611e2557611e246118cf565b5b5f611e328782880161191d565b945050602085013567ffffffffffffffff811115611e5357611e526118d3565b5b611e5f87828801611d42565b935050604085013567ffffffffffffffff811115611e8057611e7f6118d3565b5b611e8c87828801611d42565b925050606085013567ffffffffffffffff811115611ead57611eac6118d3565b5b611eb987828801611de0565b91505092959194509250565b5f805f805f60a08688031215611ede57611edd6118cf565b5b5f611eeb8882890161191d565b9550506020611efc8882890161191d565b945050604086013567ffffffffffffffff811115611f1d57611f1c6118d3565b5b611f2988828901611d42565b935050606086013567ffffffffffffffff811115611f4a57611f496118d3565b5b611f5688828901611d42565b925050608086013567ffffffffffffffff811115611f7757611f766118d3565b5b611f8388828901611de0565b9150509295509295909350565b5f67ffffffffffffffff821115611faa57611fa9611a95565b5b602082029050602081019050919050565b5f611fcd611fc884611f90565b611af3565b90508083825260208201905060208402830185811115611ff057611fef611cd6565b5b835b818110156120195780612005888261191d565b845260208401935050602081019050611ff2565b5050509392505050565b5f82601f83011261203757612036611a7d565b5b8135612047848260208601611fbb565b91505092915050565b5f8060408385031215612066576120656118cf565b5b5f83013567ffffffffffffffff811115612083576120826118d3565b5b61208f85828601612023565b925050602083013567ffffffffffffffff8111156120b0576120af6118d3565b5b6120bc85828601611d42565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6120f881611931565b82525050565b5f61210983836120ef565b60208301905092915050565b5f602082019050919050565b5f61212b826120c6565b61213581856120d0565b9350612140836120e0565b805f5b8381101561217057815161215788826120fe565b975061216283612115565b925050600181019050612143565b5085935050505092915050565b5f6020820190508181035f8301526121958184612121565b905092915050565b5f805f80608085870312156121b5576121b46118cf565b5b5f6121c28782880161191d565b94505060206121d387828801611950565b93505060406121e487828801611950565b925050606085013567ffffffffffffffff811115612205576122046118d3565b5b61221187828801611de0565b91505092959194509250565b612226816118f6565b82525050565b5f60208201905061223f5f83018461221d565b92915050565b61224e81611a4a565b8114612258575f80fd5b50565b5f8135905061226981612245565b92915050565b5f8060408385031215612285576122846118cf565b5b5f6122928582860161191d565b92505060206122a38582860161225b565b9150509250929050565b5f80604083850312156122c3576122c26118cf565b5b5f6122d08582860161191d565b92505060206122e18582860161191d565b9150509250929050565b5f805f805f60a08688031215612304576123036118cf565b5b5f6123118882890161191d565b95505060206123228882890161191d565b945050604061233388828901611950565b935050606061234488828901611950565b925050608086013567ffffffffffffffff811115612365576123646118d3565b5b61237188828901611de0565b9150509295509295909350565b5f60208284031215612393576123926118cf565b5b5f6123a08482850161191d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806123ed57607f821691505b602082108103612400576123ff6123a9565b5b50919050565b5f6040820190506124195f83018561221d565b612426602083018461221d565b9392505050565b5f6040820190506124405f8301856119a2565b61244d60208301846119a2565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826124a2565b6124e786836124a2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61252261251d61251884611931565b6124ff565b611931565b9050919050565b5f819050919050565b61253b83612508565b61254f61254782612529565b8484546124ae565b825550505050565b5f90565b612563612557565b61256e818484612532565b505050565b5b81811015612591576125865f8261255b565b600181019050612574565b5050565b601f8211156125d6576125a781612481565b6125b084612493565b810160208510156125bf578190505b6125d36125cb85612493565b830182612573565b50505b505050565b5f82821c905092915050565b5f6125f65f19846008026125db565b1980831691505092915050565b5f61260e83836125e7565b9150826002028217905092915050565b61262782611c2b565b67ffffffffffffffff8111156126405761263f611a95565b5b61264a82546123d6565b612655828285612595565b5f60209050601f831160018114612686575f8415612674578287015190505b61267e8582612603565b8655506126e5565b601f19841661269486612481565b5f5b828110156126bb57848901518255600182019150602085019450602081019050612696565b868310156126d857848901516126d4601f8916826125e7565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f612711826126ed565b61271b81856126f7565b935061272b818560208601611c45565b61273481611a85565b840191505092915050565b5f60a0820190506127525f83018861221d565b61275f602083018761221d565b61276c60408301866119a2565b61277960608301856119a2565b818103608083015261278b8184612707565b90509695505050505050565b5f815190506127a5816119f5565b92915050565b5f602082840312156127c0576127bf6118cf565b5b5f6127cd84828501612797565b91505092915050565b5f60a0820190506127e95f83018861221d565b6127f6602083018761221d565b81810360408301526128088186612121565b9050818103606083015261281c8185612121565b905081810360808301526128308184612707565b90509695505050505050565b5f60808201905061284f5f83018761221d565b61285c60208301866119a2565b61286960408301856119a2565b61287660608301846119a2565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6128b682611931565b91506128c183611931565b92508282019050808211156128d9576128d861287f565b5b92915050565b5f6040820190508181035f8301526128f78185612121565b9050818103602083015261290b8184612121565b9050939250505056fea2646970667358221220765dcb65d43641e58c9e66255e7b4dab49010423ba70d8452b8b0c5e53923a1e64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x108 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2FE JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x26E JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x1F7FDFFA GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1FA JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x188 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x510 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x217D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x6E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x6F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH2 0x713 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH2 0x74D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x22EB JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x237E JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x439 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x449 JUMPI POP PUSH2 0x448 DUP3 PUSH2 0x91C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x458 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x461 DUP2 PUSH2 0xA0C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x473 SWAP1 PUSH2 0x23D6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0x23D6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x985 JUMP JUMPDEST PUSH2 0x50A DUP5 DUP5 DUP5 DUP5 PUSH2 0xA1F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x519 PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x55E JUMPI POP PUSH2 0x55C DUP7 DUP3 PUSH2 0x763 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5A2 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x599 SWAP3 SWAP2 SWAP1 PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5AF DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xAA9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x985 JUMP JUMPDEST PUSH2 0x5C7 PUSH2 0xB9D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x615 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60C SWAP3 SWAP2 SWAP1 PUSH2 0x242D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x631 JUMPI PUSH2 0x630 PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6C5 JUMPI PUSH2 0x69B PUSH2 0x683 DUP3 DUP8 PUSH2 0xBFF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x696 DUP4 DUP8 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6AE JUMPI PUSH2 0x6AD PUSH2 0x2454 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x664 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6EE PUSH2 0x985 JUMP JUMPDEST PUSH2 0x6F7 PUSH0 PUSH2 0xC25 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x701 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x70D DUP5 DUP5 DUP5 DUP5 PUSH2 0xCE8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x71B PUSH2 0x985 JUMP JUMPDEST PUSH2 0x723 PUSH2 0xD7D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x75F PUSH2 0x758 PUSH2 0xAA2 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDE0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7FA PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x83F JUMPI POP PUSH2 0x83D DUP7 DUP3 PUSH2 0x763 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x883 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87A SWAP3 SWAP2 SWAP1 PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x890 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xF49 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0x985 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x910 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x919 DUP2 PUSH2 0xC25 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98D PUSH2 0xAA2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9AB PUSH2 0x725 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA0A JUMPI PUSH2 0x9CE PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA01 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xA1B SWAP2 SWAP1 PUSH2 0x261E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA86 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9C PUSH0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x104F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB19 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB10 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB89 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB96 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x104F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBA5 PUSH2 0x10FB JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xBE8 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD58 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4F SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xD64 DUP6 DUP6 PUSH2 0x113B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xD75 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x104F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD85 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xDC9 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE50 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE47 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1029 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1020 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x1035 DUP6 DUP6 PUSH2 0x113B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1046 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x104F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x105B DUP6 DUP6 DUP6 DUP6 PUSH2 0x11AC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10F4 JUMPI PUSH0 PUSH2 0x1097 PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x10E3 JUMPI PUSH0 PUSH2 0x10B6 PUSH0 DUP7 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x10CC PUSH0 DUP7 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10DC DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x11BE JUMP JUMPDEST POP POP PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x10F1 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x136D JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1103 PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x1139 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1173 PUSH2 0x6D0 JUMP JUMPDEST ISZERO PUSH2 0x11AA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x11B8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x151C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1365 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1259 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1256 SWAP2 SWAP1 PUSH2 0x27AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12DA JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1287 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x128C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x12D2 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C9 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1363 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135A SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1514 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1408 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1405 SWAP2 SWAP1 PUSH2 0x27AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1489 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1436 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x143B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1481 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1478 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1512 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1509 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1524 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x1530 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1536 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1580 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1577 SWAP3 SWAP2 SWAP1 PUSH2 0x242D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1589 PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1785 JUMPI PUSH0 PUSH2 0x15AA DUP3 DUP7 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x15C0 DUP4 DUP7 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E3 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x168F JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1686 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x283C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1778 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1770 SWAP2 SWAP1 PUSH2 0x28AC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x158D JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1840 JUMPI PUSH0 PUSH2 0x17A3 PUSH0 DUP6 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x17B9 PUSH0 DUP6 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1831 SWAP3 SWAP2 SWAP1 PUSH2 0x242D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x18BF JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x18B6 SWAP3 SWAP2 SWAP1 PUSH2 0x28DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1900 DUP3 PUSH2 0x18D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1910 DUP2 PUSH2 0x18F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x191A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x192B DUP2 PUSH2 0x1907 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1943 DUP2 PUSH2 0x1931 JUMP JUMPDEST DUP2 EQ PUSH2 0x194D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x195E DUP2 PUSH2 0x193A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x197A JUMPI PUSH2 0x1979 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1987 DUP6 DUP3 DUP7 ADD PUSH2 0x191D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1998 DUP6 DUP3 DUP7 ADD PUSH2 0x1950 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x19AB DUP2 PUSH2 0x1931 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x19A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19FE DUP2 PUSH2 0x19CA JUMP JUMPDEST DUP2 EQ PUSH2 0x1A08 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A19 DUP2 PUSH2 0x19F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A34 JUMPI PUSH2 0x1A33 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A41 DUP5 DUP3 DUP6 ADD PUSH2 0x1A0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A5E DUP2 PUSH2 0x1A4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A77 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1ACB DUP3 PUSH2 0x1A85 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1AEA JUMPI PUSH2 0x1AE9 PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFC PUSH2 0x18C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B08 DUP3 DUP3 PUSH2 0x1AC2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B27 JUMPI PUSH2 0x1B26 PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST PUSH2 0x1B30 DUP3 PUSH2 0x1A85 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5D PUSH2 0x1B58 DUP5 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B79 JUMPI PUSH2 0x1B78 PUSH2 0x1A81 JUMP JUMPDEST JUMPDEST PUSH2 0x1B84 DUP5 DUP3 DUP6 PUSH2 0x1B3D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BA0 JUMPI PUSH2 0x1B9F PUSH2 0x1A7D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BB0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B4B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCE JUMPI PUSH2 0x1BCD PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BEB JUMPI PUSH2 0x1BEA PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1BF7 DUP5 DUP3 DUP6 ADD PUSH2 0x1B8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C15 JUMPI PUSH2 0x1C14 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C22 DUP5 DUP3 DUP6 ADD PUSH2 0x1950 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5D DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x1C67 DUP2 DUP6 PUSH2 0x1C35 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C77 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x1C80 DUP2 PUSH2 0x1A85 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CA3 DUP2 DUP5 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CC5 JUMPI PUSH2 0x1CC4 PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1CEC PUSH2 0x1CE7 DUP5 PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1D0F JUMPI PUSH2 0x1D0E PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D38 JUMPI DUP1 PUSH2 0x1D24 DUP9 DUP3 PUSH2 0x1950 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D11 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D56 JUMPI PUSH2 0x1D55 PUSH2 0x1A7D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D66 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST PUSH2 0x1D92 DUP3 PUSH2 0x1A85 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB1 PUSH2 0x1DAC DUP5 PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1DCD JUMPI PUSH2 0x1DCC PUSH2 0x1A81 JUMP JUMPDEST JUMPDEST PUSH2 0x1DD8 DUP5 DUP3 DUP6 PUSH2 0x1B3D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DF4 JUMPI PUSH2 0x1DF3 PUSH2 0x1A7D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E04 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E25 JUMPI PUSH2 0x1E24 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E32 DUP8 DUP3 DUP9 ADD PUSH2 0x191D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E53 JUMPI PUSH2 0x1E52 PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1E5F DUP8 DUP3 DUP9 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E80 JUMPI PUSH2 0x1E7F PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1E8C DUP8 DUP3 DUP9 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EAD JUMPI PUSH2 0x1EAC PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1EB9 DUP8 DUP3 DUP9 ADD PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EDE JUMPI PUSH2 0x1EDD PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EEB DUP9 DUP3 DUP10 ADD PUSH2 0x191D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1EFC DUP9 DUP3 DUP10 ADD PUSH2 0x191D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F1D JUMPI PUSH2 0x1F1C PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1F29 DUP9 DUP3 DUP10 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4A JUMPI PUSH2 0x1F49 PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1F56 DUP9 DUP3 DUP10 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F77 JUMPI PUSH2 0x1F76 PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x1F83 DUP9 DUP3 DUP10 ADD PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FCD PUSH2 0x1FC8 DUP5 PUSH2 0x1F90 JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1FF0 JUMPI PUSH2 0x1FEF PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2019 JUMPI DUP1 PUSH2 0x2005 DUP9 DUP3 PUSH2 0x191D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FF2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2037 JUMPI PUSH2 0x2036 PUSH2 0x1A7D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2047 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2066 JUMPI PUSH2 0x2065 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x208F DUP6 DUP3 DUP7 ADD PUSH2 0x2023 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20B0 JUMPI PUSH2 0x20AF PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x20BC DUP6 DUP3 DUP7 ADD PUSH2 0x1D42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F8 DUP2 PUSH2 0x1931 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2109 DUP4 DUP4 PUSH2 0x20EF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x212B DUP3 PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x2135 DUP2 DUP6 PUSH2 0x20D0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2140 DUP4 PUSH2 0x20E0 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2170 JUMPI DUP2 MLOAD PUSH2 0x2157 DUP9 DUP3 PUSH2 0x20FE JUMP JUMPDEST SWAP8 POP PUSH2 0x2162 DUP4 PUSH2 0x2115 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2143 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2195 DUP2 DUP5 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x21B5 JUMPI PUSH2 0x21B4 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21C2 DUP8 DUP3 DUP9 ADD PUSH2 0x191D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x21D3 DUP8 DUP3 DUP9 ADD PUSH2 0x1950 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x21E4 DUP8 DUP3 DUP9 ADD PUSH2 0x1950 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2205 JUMPI PUSH2 0x2204 PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x2211 DUP8 DUP3 DUP9 ADD PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2226 DUP2 PUSH2 0x18F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x223F PUSH0 DUP4 ADD DUP5 PUSH2 0x221D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x224E DUP2 PUSH2 0x1A4A JUMP JUMPDEST DUP2 EQ PUSH2 0x2258 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2269 DUP2 PUSH2 0x2245 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2285 JUMPI PUSH2 0x2284 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2292 DUP6 DUP3 DUP7 ADD PUSH2 0x191D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22A3 DUP6 DUP3 DUP7 ADD PUSH2 0x225B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C3 JUMPI PUSH2 0x22C2 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22D0 DUP6 DUP3 DUP7 ADD PUSH2 0x191D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22E1 DUP6 DUP3 DUP7 ADD PUSH2 0x191D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2304 JUMPI PUSH2 0x2303 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2311 DUP9 DUP3 DUP10 ADD PUSH2 0x191D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2322 DUP9 DUP3 DUP10 ADD PUSH2 0x191D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2333 DUP9 DUP3 DUP10 ADD PUSH2 0x1950 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2344 DUP9 DUP3 DUP10 ADD PUSH2 0x1950 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2365 JUMPI PUSH2 0x2364 PUSH2 0x18D3 JUMP JUMPDEST JUMPDEST PUSH2 0x2371 DUP9 DUP3 DUP10 ADD PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2393 JUMPI PUSH2 0x2392 PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23A0 DUP5 DUP3 DUP6 ADD PUSH2 0x191D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x23ED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2400 JUMPI PUSH2 0x23FF PUSH2 0x23A9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2419 PUSH0 DUP4 ADD DUP6 PUSH2 0x221D JUMP JUMPDEST PUSH2 0x2426 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x221D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2440 PUSH0 DUP4 ADD DUP6 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0x244D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x24DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0x24E7 DUP7 DUP4 PUSH2 0x24A2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2522 PUSH2 0x251D PUSH2 0x2518 DUP5 PUSH2 0x1931 JUMP JUMPDEST PUSH2 0x24FF JUMP JUMPDEST PUSH2 0x1931 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x253B DUP4 PUSH2 0x2508 JUMP JUMPDEST PUSH2 0x254F PUSH2 0x2547 DUP3 PUSH2 0x2529 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x24AE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2563 PUSH2 0x2557 JUMP JUMPDEST PUSH2 0x256E DUP2 DUP5 DUP5 PUSH2 0x2532 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2591 JUMPI PUSH2 0x2586 PUSH0 DUP3 PUSH2 0x255B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2574 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x25D6 JUMPI PUSH2 0x25A7 DUP2 PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x25B0 DUP5 PUSH2 0x2493 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x25BF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x25D3 PUSH2 0x25CB DUP6 PUSH2 0x2493 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2573 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25F6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x25DB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x260E DUP4 DUP4 PUSH2 0x25E7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2627 DUP3 PUSH2 0x1C2B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2640 JUMPI PUSH2 0x263F PUSH2 0x1A95 JUMP JUMPDEST JUMPDEST PUSH2 0x264A DUP3 SLOAD PUSH2 0x23D6 JUMP JUMPDEST PUSH2 0x2655 DUP3 DUP3 DUP6 PUSH2 0x2595 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2686 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2674 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x267E DUP6 DUP3 PUSH2 0x2603 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x26E5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2694 DUP7 PUSH2 0x2481 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x26BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2696 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x26D8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x26D4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x25E7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2711 DUP3 PUSH2 0x26ED JUMP JUMPDEST PUSH2 0x271B DUP2 DUP6 PUSH2 0x26F7 JUMP JUMPDEST SWAP4 POP PUSH2 0x272B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x2734 DUP2 PUSH2 0x1A85 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2752 PUSH0 DUP4 ADD DUP9 PUSH2 0x221D JUMP JUMPDEST PUSH2 0x275F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x221D JUMP JUMPDEST PUSH2 0x276C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0x2779 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x19A2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x278B DUP2 DUP5 PUSH2 0x2707 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27A5 DUP2 PUSH2 0x19F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27C0 JUMPI PUSH2 0x27BF PUSH2 0x18CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27CD DUP5 DUP3 DUP6 ADD PUSH2 0x2797 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x27E9 PUSH0 DUP4 ADD DUP9 PUSH2 0x221D JUMP JUMPDEST PUSH2 0x27F6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x221D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2808 DUP2 DUP7 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x281C DUP2 DUP6 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2830 DUP2 DUP5 PUSH2 0x2707 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x284F PUSH0 DUP4 ADD DUP8 PUSH2 0x221D JUMP JUMPDEST PUSH2 0x285C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0x2869 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19A2 JUMP JUMPDEST PUSH2 0x2876 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x19A2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28B6 DUP3 PUSH2 0x1931 JUMP JUMPDEST SWAP2 POP PUSH2 0x28C1 DUP4 PUSH2 0x1931 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x28D9 JUMPI PUSH2 0x28D8 PUSH2 0x287F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28F7 DUP2 DUP6 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x290B DUP2 DUP5 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x5DCB65D43641E58C9E66255E7B4DAB49010423BA70D845 0x2B DUP12 0xC MCOPY MSTORE8 SWAP3 GASPRICE 0x1E PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "300:1393:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;827:87:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2084:103:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1224:186:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4014:429:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;985:63:14;;;:::i;:::-;;2536:552:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1850:84:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1054:164:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;920:59;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3156:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3367:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132:2;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;827:87:14:-;1531:13:0;:11;:13::i;:::-;892:15:14::1;900:6;892:7;:15::i;:::-;827:87:::0;:::o;2084:103:2:-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;1224:186:14:-;1531:13:0;:11;:13::i;:::-;1369:34:14::1;1380:2;1384:3;1389:7;1398:4;1369:10;:34::i;:::-;1224:186:::0;;;;:::o;4014:429:2:-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;985:63:14:-;1531:13:0;:11;:13::i;:::-;1031:10:14::1;:8;:10::i;:::-;985:63::o:0;2536:552:2:-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;1850:84:9:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1054:164:14:-;1531:13:0;:11;:13::i;:::-;1179:32:14::1;1185:7;1194:2;1198:6;1206:4;1179:5;:32::i;:::-;1054:164:::0;;;;:::o;920:59::-;1531:13:0;:11;:13::i;:::-;964:8:14::1;:6;:8::i;:::-;920:59::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3156:144:2:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;3367:157::-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;762:146:11:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10282:86:2:-;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;11523:282::-;11658:1;11644:16;;:2;:16;;;11640:88;;11714:1;11683:34;;;;;;;;;;;:::i;:::-;;;;;;;;11640:88;11737:61;11772:1;11776:2;11780:3;11785:6;11793:4;11737:26;:61::i;:::-;11523:282;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;9015:445:2:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;2710:117:9:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;4603:197:7:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;10746:346:2:-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;:::-;10828:264;;10746:346;;;;:::o;2463:115:9:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;13268:315:2:-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;2202:126:9:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;16080:849:2:-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;2002:128:9:-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;1484:207:14:-;1648:36;1662:4;1668:2;1672:3;1677:6;1648:13;:36::i;:::-;1484:207;;;;:::o;13761:974:2:-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;1128:221:5:-;1474:19:9;:17;:19::i;:::-;1306:36:5::1;1320:4;1326:2;1330:3;1335:6;1306:13;:36::i;:::-;1128:221:::0;;;;:::o;5144:1281:2:-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:117::-;3322:1;3319;3312:12;3336:117;3445:1;3442;3435:12;3459:102;3500:6;3551:2;3547:7;3542:2;3535:5;3531:14;3527:28;3517:38;;3459:102;;;:::o;3567:180::-;3615:77;3612:1;3605:88;3712:4;3709:1;3702:15;3736:4;3733:1;3726:15;3753:281;3836:27;3858:4;3836:27;:::i;:::-;3828:6;3824:40;3966:6;3954:10;3951:22;3930:18;3918:10;3915:34;3912:62;3909:88;;;3977:18;;:::i;:::-;3909:88;4017:10;4013:2;4006:22;3796:238;3753:281;;:::o;4040:129::-;4074:6;4101:20;;:::i;:::-;4091:30;;4130:33;4158:4;4150:6;4130:33;:::i;:::-;4040:129;;;:::o;4175:308::-;4237:4;4327:18;4319:6;4316:30;4313:56;;;4349:18;;:::i;:::-;4313:56;4387:29;4409:6;4387:29;:::i;:::-;4379:37;;4471:4;4465;4461:15;4453:23;;4175:308;;;:::o;4489:148::-;4587:6;4582:3;4577;4564:30;4628:1;4619:6;4614:3;4610:16;4603:27;4489:148;;;:::o;4643:425::-;4721:5;4746:66;4762:49;4804:6;4762:49;:::i;:::-;4746:66;:::i;:::-;4737:75;;4835:6;4828:5;4821:21;4873:4;4866:5;4862:16;4911:3;4902:6;4897:3;4893:16;4890:25;4887:112;;;4918:79;;:::i;:::-;4887:112;5008:54;5055:6;5050:3;5045;5008:54;:::i;:::-;4727:341;4643:425;;;;;:::o;5088:340::-;5144:5;5193:3;5186:4;5178:6;5174:17;5170:27;5160:122;;5201:79;;:::i;:::-;5160:122;5318:6;5305:20;5343:79;5418:3;5410:6;5403:4;5395:6;5391:17;5343:79;:::i;:::-;5334:88;;5150:278;5088:340;;;;:::o;5434:509::-;5503:6;5552:2;5540:9;5531:7;5527:23;5523:32;5520:119;;;5558:79;;:::i;:::-;5520:119;5706:1;5695:9;5691:17;5678:31;5736:18;5728:6;5725:30;5722:117;;;5758:79;;:::i;:::-;5722:117;5863:63;5918:7;5909:6;5898:9;5894:22;5863:63;:::i;:::-;5853:73;;5649:287;5434:509;;;;:::o;5949:329::-;6008:6;6057:2;6045:9;6036:7;6032:23;6028:32;6025:119;;;6063:79;;:::i;:::-;6025:119;6183:1;6208:53;6253:7;6244:6;6233:9;6229:22;6208:53;:::i;:::-;6198:63;;6154:117;5949:329;;;;:::o;6284:99::-;6336:6;6370:5;6364:12;6354:22;;6284:99;;;:::o;6389:169::-;6473:11;6507:6;6502:3;6495:19;6547:4;6542:3;6538:14;6523:29;;6389:169;;;;:::o;6564:139::-;6653:6;6648:3;6643;6637:23;6694:1;6685:6;6680:3;6676:16;6669:27;6564:139;;;:::o;6709:377::-;6797:3;6825:39;6858:5;6825:39;:::i;:::-;6880:71;6944:6;6939:3;6880:71;:::i;:::-;6873:78;;6960:65;7018:6;7013:3;7006:4;6999:5;6995:16;6960:65;:::i;:::-;7050:29;7072:6;7050:29;:::i;:::-;7045:3;7041:39;7034:46;;6801:285;6709:377;;;;:::o;7092:313::-;7205:4;7243:2;7232:9;7228:18;7220:26;;7292:9;7286:4;7282:20;7278:1;7267:9;7263:17;7256:47;7320:78;7393:4;7384:6;7320:78;:::i;:::-;7312:86;;7092:313;;;;:::o;7411:311::-;7488:4;7578:18;7570:6;7567:30;7564:56;;;7600:18;;:::i;:::-;7564:56;7650:4;7642:6;7638:17;7630:25;;7710:4;7704;7700:15;7692:23;;7411:311;;;:::o;7728:117::-;7837:1;7834;7827:12;7868:710;7964:5;7989:81;8005:64;8062:6;8005:64;:::i;:::-;7989:81;:::i;:::-;7980:90;;8090:5;8119:6;8112:5;8105:21;8153:4;8146:5;8142:16;8135:23;;8206:4;8198:6;8194:17;8186:6;8182:30;8235:3;8227:6;8224:15;8221:122;;;8254:79;;:::i;:::-;8221:122;8369:6;8352:220;8386:6;8381:3;8378:15;8352:220;;;8461:3;8490:37;8523:3;8511:10;8490:37;:::i;:::-;8485:3;8478:50;8557:4;8552:3;8548:14;8541:21;;8428:144;8412:4;8407:3;8403:14;8396:21;;8352:220;;;8356:21;7970:608;;7868:710;;;;;:::o;8601:370::-;8672:5;8721:3;8714:4;8706:6;8702:17;8698:27;8688:122;;8729:79;;:::i;:::-;8688:122;8846:6;8833:20;8871:94;8961:3;8953:6;8946:4;8938:6;8934:17;8871:94;:::i;:::-;8862:103;;8678:293;8601:370;;;;:::o;8977:307::-;9038:4;9128:18;9120:6;9117:30;9114:56;;;9150:18;;:::i;:::-;9114:56;9188:29;9210:6;9188:29;:::i;:::-;9180:37;;9272:4;9266;9262:15;9254:23;;8977:307;;;:::o;9290:423::-;9367:5;9392:65;9408:48;9449:6;9408:48;:::i;:::-;9392:65;:::i;:::-;9383:74;;9480:6;9473:5;9466:21;9518:4;9511:5;9507:16;9556:3;9547:6;9542:3;9538:16;9535:25;9532:112;;;9563:79;;:::i;:::-;9532:112;9653:54;9700:6;9695:3;9690;9653:54;:::i;:::-;9373:340;9290:423;;;;;:::o;9732:338::-;9787:5;9836:3;9829:4;9821:6;9817:17;9813:27;9803:122;;9844:79;;:::i;:::-;9803:122;9961:6;9948:20;9986:78;10060:3;10052:6;10045:4;10037:6;10033:17;9986:78;:::i;:::-;9977:87;;9793:277;9732:338;;;;:::o;10076:1363::-;10221:6;10229;10237;10245;10294:3;10282:9;10273:7;10269:23;10265:33;10262:120;;;10301:79;;:::i;:::-;10262:120;10421:1;10446:53;10491:7;10482:6;10471:9;10467:22;10446:53;:::i;:::-;10436:63;;10392:117;10576:2;10565:9;10561:18;10548:32;10607:18;10599:6;10596:30;10593:117;;;10629:79;;:::i;:::-;10593:117;10734:78;10804:7;10795:6;10784:9;10780:22;10734:78;:::i;:::-;10724:88;;10519:303;10889:2;10878:9;10874:18;10861:32;10920:18;10912:6;10909:30;10906:117;;;10942:79;;:::i;:::-;10906:117;11047:78;11117:7;11108:6;11097:9;11093:22;11047:78;:::i;:::-;11037:88;;10832:303;11202:2;11191:9;11187:18;11174:32;11233:18;11225:6;11222:30;11219:117;;;11255:79;;:::i;:::-;11219:117;11360:62;11414:7;11405:6;11394:9;11390:22;11360:62;:::i;:::-;11350:72;;11145:287;10076:1363;;;;;;;:::o;11445:1509::-;11599:6;11607;11615;11623;11631;11680:3;11668:9;11659:7;11655:23;11651:33;11648:120;;;11687:79;;:::i;:::-;11648:120;11807:1;11832:53;11877:7;11868:6;11857:9;11853:22;11832:53;:::i;:::-;11822:63;;11778:117;11934:2;11960:53;12005:7;11996:6;11985:9;11981:22;11960:53;:::i;:::-;11950:63;;11905:118;12090:2;12079:9;12075:18;12062:32;12121:18;12113:6;12110:30;12107:117;;;12143:79;;:::i;:::-;12107:117;12248:78;12318:7;12309:6;12298:9;12294:22;12248:78;:::i;:::-;12238:88;;12033:303;12403:2;12392:9;12388:18;12375:32;12434:18;12426:6;12423:30;12420:117;;;12456:79;;:::i;:::-;12420:117;12561:78;12631:7;12622:6;12611:9;12607:22;12561:78;:::i;:::-;12551:88;;12346:303;12716:3;12705:9;12701:19;12688:33;12748:18;12740:6;12737:30;12734:117;;;12770:79;;:::i;:::-;12734:117;12875:62;12929:7;12920:6;12909:9;12905:22;12875:62;:::i;:::-;12865:72;;12659:288;11445:1509;;;;;;;;:::o;12960:311::-;13037:4;13127:18;13119:6;13116:30;13113:56;;;13149:18;;:::i;:::-;13113:56;13199:4;13191:6;13187:17;13179:25;;13259:4;13253;13249:15;13241:23;;12960:311;;;:::o;13294:710::-;13390:5;13415:81;13431:64;13488:6;13431:64;:::i;:::-;13415:81;:::i;:::-;13406:90;;13516:5;13545:6;13538:5;13531:21;13579:4;13572:5;13568:16;13561:23;;13632:4;13624:6;13620:17;13612:6;13608:30;13661:3;13653:6;13650:15;13647:122;;;13680:79;;:::i;:::-;13647:122;13795:6;13778:220;13812:6;13807:3;13804:15;13778:220;;;13887:3;13916:37;13949:3;13937:10;13916:37;:::i;:::-;13911:3;13904:50;13983:4;13978:3;13974:14;13967:21;;13854:144;13838:4;13833:3;13829:14;13822:21;;13778:220;;;13782:21;13396:608;;13294:710;;;;;:::o;14027:370::-;14098:5;14147:3;14140:4;14132:6;14128:17;14124:27;14114:122;;14155:79;;:::i;:::-;14114:122;14272:6;14259:20;14297:94;14387:3;14379:6;14372:4;14364:6;14360:17;14297:94;:::i;:::-;14288:103;;14104:293;14027:370;;;;:::o;14403:894::-;14521:6;14529;14578:2;14566:9;14557:7;14553:23;14549:32;14546:119;;;14584:79;;:::i;:::-;14546:119;14732:1;14721:9;14717:17;14704:31;14762:18;14754:6;14751:30;14748:117;;;14784:79;;:::i;:::-;14748:117;14889:78;14959:7;14950:6;14939:9;14935:22;14889:78;:::i;:::-;14879:88;;14675:302;15044:2;15033:9;15029:18;15016:32;15075:18;15067:6;15064:30;15061:117;;;15097:79;;:::i;:::-;15061:117;15202:78;15272:7;15263:6;15252:9;15248:22;15202:78;:::i;:::-;15192:88;;14987:303;14403:894;;;;;:::o;15303:114::-;15370:6;15404:5;15398:12;15388:22;;15303:114;;;:::o;15423:184::-;15522:11;15556:6;15551:3;15544:19;15596:4;15591:3;15587:14;15572:29;;15423:184;;;;:::o;15613:132::-;15680:4;15703:3;15695:11;;15733:4;15728:3;15724:14;15716:22;;15613:132;;;:::o;15751:108::-;15828:24;15846:5;15828:24;:::i;:::-;15823:3;15816:37;15751:108;;:::o;15865:179::-;15934:10;15955:46;15997:3;15989:6;15955:46;:::i;:::-;16033:4;16028:3;16024:14;16010:28;;15865:179;;;;:::o;16050:113::-;16120:4;16152;16147:3;16143:14;16135:22;;16050:113;;;:::o;16199:732::-;16318:3;16347:54;16395:5;16347:54;:::i;:::-;16417:86;16496:6;16491:3;16417:86;:::i;:::-;16410:93;;16527:56;16577:5;16527:56;:::i;:::-;16606:7;16637:1;16622:284;16647:6;16644:1;16641:13;16622:284;;;16723:6;16717:13;16750:63;16809:3;16794:13;16750:63;:::i;:::-;16743:70;;16836:60;16889:6;16836:60;:::i;:::-;16826:70;;16682:224;16669:1;16666;16662:9;16657:14;;16622:284;;;16626:14;16922:3;16915:10;;16323:608;;;16199:732;;;;:::o;16937:373::-;17080:4;17118:2;17107:9;17103:18;17095:26;;17167:9;17161:4;17157:20;17153:1;17142:9;17138:17;17131:47;17195:108;17298:4;17289:6;17195:108;:::i;:::-;17187:116;;16937:373;;;;:::o;17316:943::-;17411:6;17419;17427;17435;17484:3;17472:9;17463:7;17459:23;17455:33;17452:120;;;17491:79;;:::i;:::-;17452:120;17611:1;17636:53;17681:7;17672:6;17661:9;17657:22;17636:53;:::i;:::-;17626:63;;17582:117;17738:2;17764:53;17809:7;17800:6;17789:9;17785:22;17764:53;:::i;:::-;17754:63;;17709:118;17866:2;17892:53;17937:7;17928:6;17917:9;17913:22;17892:53;:::i;:::-;17882:63;;17837:118;18022:2;18011:9;18007:18;17994:32;18053:18;18045:6;18042:30;18039:117;;;18075:79;;:::i;:::-;18039:117;18180:62;18234:7;18225:6;18214:9;18210:22;18180:62;:::i;:::-;18170:72;;17965:287;17316:943;;;;;;;:::o;18265:118::-;18352:24;18370:5;18352:24;:::i;:::-;18347:3;18340:37;18265:118;;:::o;18389:222::-;18482:4;18520:2;18509:9;18505:18;18497:26;;18533:71;18601:1;18590:9;18586:17;18577:6;18533:71;:::i;:::-;18389:222;;;;:::o;18617:116::-;18687:21;18702:5;18687:21;:::i;:::-;18680:5;18677:32;18667:60;;18723:1;18720;18713:12;18667:60;18617:116;:::o;18739:133::-;18782:5;18820:6;18807:20;18798:29;;18836:30;18860:5;18836:30;:::i;:::-;18739:133;;;;:::o;18878:468::-;18943:6;18951;19000:2;18988:9;18979:7;18975:23;18971:32;18968:119;;;19006:79;;:::i;:::-;18968:119;19126:1;19151:53;19196:7;19187:6;19176:9;19172:22;19151:53;:::i;:::-;19141:63;;19097:117;19253:2;19279:50;19321:7;19312:6;19301:9;19297:22;19279:50;:::i;:::-;19269:60;;19224:115;18878:468;;;;;:::o;19352:474::-;19420:6;19428;19477:2;19465:9;19456:7;19452:23;19448:32;19445:119;;;19483:79;;:::i;:::-;19445:119;19603:1;19628:53;19673:7;19664:6;19653:9;19649:22;19628:53;:::i;:::-;19618:63;;19574:117;19730:2;19756:53;19801:7;19792:6;19781:9;19777:22;19756:53;:::i;:::-;19746:63;;19701:118;19352:474;;;;;:::o;19832:1089::-;19936:6;19944;19952;19960;19968;20017:3;20005:9;19996:7;19992:23;19988:33;19985:120;;;20024:79;;:::i;:::-;19985:120;20144:1;20169:53;20214:7;20205:6;20194:9;20190:22;20169:53;:::i;:::-;20159:63;;20115:117;20271:2;20297:53;20342:7;20333:6;20322:9;20318:22;20297:53;:::i;:::-;20287:63;;20242:118;20399:2;20425:53;20470:7;20461:6;20450:9;20446:22;20425:53;:::i;:::-;20415:63;;20370:118;20527:2;20553:53;20598:7;20589:6;20578:9;20574:22;20553:53;:::i;:::-;20543:63;;20498:118;20683:3;20672:9;20668:19;20655:33;20715:18;20707:6;20704:30;20701:117;;;20737:79;;:::i;:::-;20701:117;20842:62;20896:7;20887:6;20876:9;20872:22;20842:62;:::i;:::-;20832:72;;20626:288;19832:1089;;;;;;;;:::o;20927:329::-;20986:6;21035:2;21023:9;21014:7;21010:23;21006:32;21003:119;;;21041:79;;:::i;:::-;21003:119;21161:1;21186:53;21231:7;21222:6;21211:9;21207:22;21186:53;:::i;:::-;21176:63;;21132:117;20927:329;;;;:::o;21262:180::-;21310:77;21307:1;21300:88;21407:4;21404:1;21397:15;21431:4;21428:1;21421:15;21448:320;21492:6;21529:1;21523:4;21519:12;21509:22;;21576:1;21570:4;21566:12;21597:18;21587:81;;21653:4;21645:6;21641:17;21631:27;;21587:81;21715:2;21707:6;21704:14;21684:18;21681:38;21678:84;;21734:18;;:::i;:::-;21678:84;21499:269;21448:320;;;:::o;21774:332::-;21895:4;21933:2;21922:9;21918:18;21910:26;;21946:71;22014:1;22003:9;21999:17;21990:6;21946:71;:::i;:::-;22027:72;22095:2;22084:9;22080:18;22071:6;22027:72;:::i;:::-;21774:332;;;;;:::o;22112:::-;22233:4;22271:2;22260:9;22256:18;22248:26;;22284:71;22352:1;22341:9;22337:17;22328:6;22284:71;:::i;:::-;22365:72;22433:2;22422:9;22418:18;22409:6;22365:72;:::i;:::-;22112:332;;;;;:::o;22450:180::-;22498:77;22495:1;22488:88;22595:4;22592:1;22585:15;22619:4;22616:1;22609:15;22636:141;22685:4;22708:3;22700:11;;22731:3;22728:1;22721:14;22765:4;22762:1;22752:18;22744:26;;22636:141;;;:::o;22783:93::-;22820:6;22867:2;22862;22855:5;22851:14;22847:23;22837:33;;22783:93;;;:::o;22882:107::-;22926:8;22976:5;22970:4;22966:16;22945:37;;22882:107;;;;:::o;22995:393::-;23064:6;23114:1;23102:10;23098:18;23137:97;23167:66;23156:9;23137:97;:::i;:::-;23255:39;23285:8;23274:9;23255:39;:::i;:::-;23243:51;;23327:4;23323:9;23316:5;23312:21;23303:30;;23376:4;23366:8;23362:19;23355:5;23352:30;23342:40;;23071:317;;22995:393;;;;;:::o;23394:60::-;23422:3;23443:5;23436:12;;23394:60;;;:::o;23460:142::-;23510:9;23543:53;23561:34;23570:24;23588:5;23570:24;:::i;:::-;23561:34;:::i;:::-;23543:53;:::i;:::-;23530:66;;23460:142;;;:::o;23608:75::-;23651:3;23672:5;23665:12;;23608:75;;;:::o;23689:269::-;23799:39;23830:7;23799:39;:::i;:::-;23860:91;23909:41;23933:16;23909:41;:::i;:::-;23901:6;23894:4;23888:11;23860:91;:::i;:::-;23854:4;23847:105;23765:193;23689:269;;;:::o;23964:73::-;24009:3;23964:73;:::o;24043:189::-;24120:32;;:::i;:::-;24161:65;24219:6;24211;24205:4;24161:65;:::i;:::-;24096:136;24043:189;;:::o;24238:186::-;24298:120;24315:3;24308:5;24305:14;24298:120;;;24369:39;24406:1;24399:5;24369:39;:::i;:::-;24342:1;24335:5;24331:13;24322:22;;24298:120;;;24238:186;;:::o;24430:543::-;24531:2;24526:3;24523:11;24520:446;;;24565:38;24597:5;24565:38;:::i;:::-;24649:29;24667:10;24649:29;:::i;:::-;24639:8;24635:44;24832:2;24820:10;24817:18;24814:49;;;24853:8;24838:23;;24814:49;24876:80;24932:22;24950:3;24932:22;:::i;:::-;24922:8;24918:37;24905:11;24876:80;:::i;:::-;24535:431;;24520:446;24430:543;;;:::o;24979:117::-;25033:8;25083:5;25077:4;25073:16;25052:37;;24979:117;;;;:::o;25102:169::-;25146:6;25179:51;25227:1;25223:6;25215:5;25212:1;25208:13;25179:51;:::i;:::-;25175:56;25260:4;25254;25250:15;25240:25;;25153:118;25102:169;;;;:::o;25276:295::-;25352:4;25498:29;25523:3;25517:4;25498:29;:::i;:::-;25490:37;;25560:3;25557:1;25553:11;25547:4;25544:21;25536:29;;25276:295;;;;:::o;25576:1395::-;25693:37;25726:3;25693:37;:::i;:::-;25795:18;25787:6;25784:30;25781:56;;;25817:18;;:::i;:::-;25781:56;25861:38;25893:4;25887:11;25861:38;:::i;:::-;25946:67;26006:6;25998;25992:4;25946:67;:::i;:::-;26040:1;26064:4;26051:17;;26096:2;26088:6;26085:14;26113:1;26108:618;;;;26770:1;26787:6;26784:77;;;26836:9;26831:3;26827:19;26821:26;26812:35;;26784:77;26887:67;26947:6;26940:5;26887:67;:::i;:::-;26881:4;26874:81;26743:222;26078:887;;26108:618;26160:4;26156:9;26148:6;26144:22;26194:37;26226:4;26194:37;:::i;:::-;26253:1;26267:208;26281:7;26278:1;26275:14;26267:208;;;26360:9;26355:3;26351:19;26345:26;26337:6;26330:42;26411:1;26403:6;26399:14;26389:24;;26458:2;26447:9;26443:18;26430:31;;26304:4;26301:1;26297:12;26292:17;;26267:208;;;26503:6;26494:7;26491:19;26488:179;;;26561:9;26556:3;26552:19;26546:26;26604:48;26646:4;26638:6;26634:17;26623:9;26604:48;:::i;:::-;26596:6;26589:64;26511:156;26488:179;26713:1;26709;26701:6;26697:14;26693:22;26687:4;26680:36;26115:611;;;26078:887;;25668:1303;;;25576:1395;;:::o;26977:98::-;27028:6;27062:5;27056:12;27046:22;;26977:98;;;:::o;27081:168::-;27164:11;27198:6;27193:3;27186:19;27238:4;27233:3;27229:14;27214:29;;27081:168;;;;:::o;27255:373::-;27341:3;27369:38;27401:5;27369:38;:::i;:::-;27423:70;27486:6;27481:3;27423:70;:::i;:::-;27416:77;;27502:65;27560:6;27555:3;27548:4;27541:5;27537:16;27502:65;:::i;:::-;27592:29;27614:6;27592:29;:::i;:::-;27587:3;27583:39;27576:46;;27345:283;27255:373;;;;:::o;27634:751::-;27857:4;27895:3;27884:9;27880:19;27872:27;;27909:71;27977:1;27966:9;27962:17;27953:6;27909:71;:::i;:::-;27990:72;28058:2;28047:9;28043:18;28034:6;27990:72;:::i;:::-;28072;28140:2;28129:9;28125:18;28116:6;28072:72;:::i;:::-;28154;28222:2;28211:9;28207:18;28198:6;28154:72;:::i;:::-;28274:9;28268:4;28264:20;28258:3;28247:9;28243:19;28236:49;28302:76;28373:4;28364:6;28302:76;:::i;:::-;28294:84;;27634:751;;;;;;;;:::o;28391:141::-;28447:5;28478:6;28472:13;28463:22;;28494:32;28520:5;28494:32;:::i;:::-;28391:141;;;;:::o;28538:349::-;28607:6;28656:2;28644:9;28635:7;28631:23;28627:32;28624:119;;;28662:79;;:::i;:::-;28624:119;28782:1;28807:63;28862:7;28853:6;28842:9;28838:22;28807:63;:::i;:::-;28797:73;;28753:127;28538:349;;;;:::o;28893:1053::-;29216:4;29254:3;29243:9;29239:19;29231:27;;29268:71;29336:1;29325:9;29321:17;29312:6;29268:71;:::i;:::-;29349:72;29417:2;29406:9;29402:18;29393:6;29349:72;:::i;:::-;29468:9;29462:4;29458:20;29453:2;29442:9;29438:18;29431:48;29496:108;29599:4;29590:6;29496:108;:::i;:::-;29488:116;;29651:9;29645:4;29641:20;29636:2;29625:9;29621:18;29614:48;29679:108;29782:4;29773:6;29679:108;:::i;:::-;29671:116;;29835:9;29829:4;29825:20;29819:3;29808:9;29804:19;29797:49;29863:76;29934:4;29925:6;29863:76;:::i;:::-;29855:84;;28893:1053;;;;;;;;:::o;29952:553::-;30129:4;30167:3;30156:9;30152:19;30144:27;;30181:71;30249:1;30238:9;30234:17;30225:6;30181:71;:::i;:::-;30262:72;30330:2;30319:9;30315:18;30306:6;30262:72;:::i;:::-;30344;30412:2;30401:9;30397:18;30388:6;30344:72;:::i;:::-;30426;30494:2;30483:9;30479:18;30470:6;30426:72;:::i;:::-;29952:553;;;;;;;:::o;30511:180::-;30559:77;30556:1;30549:88;30656:4;30653:1;30646:15;30680:4;30677:1;30670:15;30697:191;30737:3;30756:20;30774:1;30756:20;:::i;:::-;30751:25;;30790:20;30808:1;30790:20;:::i;:::-;30785:25;;30833:1;30830;30826:9;30819:16;;30854:3;30851:1;30848:10;30845:36;;;30861:18;;:::i;:::-;30845:36;30697:191;;;;:::o;30894:634::-;31115:4;31153:2;31142:9;31138:18;31130:26;;31202:9;31196:4;31192:20;31188:1;31177:9;31173:17;31166:47;31230:108;31333:4;31324:6;31230:108;:::i;:::-;31222:116;;31385:9;31379:4;31375:20;31370:2;31359:9;31355:18;31348:48;31413:108;31516:4;31507:6;31413:108;:::i;:::-;31405:116;;30894:634;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2114000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"owner()": "2537",
								"pause()": "infinite",
								"paused()": "2547",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "809",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_update(address,address,uint256[] memory,uint256[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 300,
									"end": 1693,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 656,
									"end": 821,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 821,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 656,
									"end": 821,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 656,
									"end": 821,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 656,
									"end": 821,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 656,
									"end": 821,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 656,
									"end": 821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 656,
									"end": 821,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 656,
									"end": 821,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 801,
									"end": 813,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "4B"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH data",
									"source": 2,
									"value": "EAE80A2C7BF2C9D096E554E5E4405CF6AEFA68F606389F34D4CDA8A311083DED"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "4B"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 821,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1606,
									"end": 1612,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1640,
									"end": 1645,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1634,
									"end": 1646,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1554,
									"end": 1653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1659,
									"end": 1839,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 1659,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1707,
									"end": 1784,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1704,
									"end": 1705,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1697,
									"end": 1785,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1804,
									"end": 1808,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1801,
									"end": 1802,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1794,
									"end": 1809,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1828,
									"end": 1832,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1818,
									"end": 1833,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1845,
									"end": 2025,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 1845,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1893,
									"end": 1970,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1883,
									"end": 1971,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1990,
									"end": 1994,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1987,
									"end": 1988,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 1995,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2014,
									"end": 2018,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 2011,
									"end": 2012,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2004,
									"end": 2019,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2112,
									"end": 2113,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 2106,
									"end": 2110,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2102,
									"end": 2114,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 2092,
									"end": 2114,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2092,
									"end": 2114,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2159,
									"end": 2160,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2153,
									"end": 2157,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2149,
									"end": 2161,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2180,
									"end": 2198,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2236,
									"end": 2240,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2224,
									"end": 2241,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2214,
									"end": 2241,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2214,
									"end": 2241,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "tag",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2298,
									"end": 2300,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2287,
									"end": 2301,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2267,
									"end": 2285,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2264,
									"end": 2302,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 2317,
									"end": 2335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "tag",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "tag",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2082,
									"end": 2351,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2031,
									"end": 2351,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2432,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2421,
									"end": 2432,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2421,
									"end": 2432,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2452,
									"end": 2455,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2442,
									"end": 2456,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2486,
									"end": 2490,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2473,
									"end": 2491,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 2465,
									"end": 2491,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2465,
									"end": 2491,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2357,
									"end": 2498,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2588,
									"end": 2590,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2583,
									"end": 2585,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2576,
									"end": 2581,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2572,
									"end": 2586,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2568,
									"end": 2591,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 2558,
									"end": 2591,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2558,
									"end": 2591,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2504,
									"end": 2597,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2647,
									"end": 2655,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2697,
									"end": 2702,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2691,
									"end": 2695,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 2703,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2666,
									"end": 2703,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2666,
									"end": 2703,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2603,
									"end": 2710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2785,
									"end": 2791,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2835,
									"end": 2836,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 2823,
									"end": 2833,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2819,
									"end": 2837,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 2888,
									"end": 2954,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2877,
									"end": 2886,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 2858,
									"end": 2955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "tag",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 3006,
									"end": 3014,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2995,
									"end": 3004,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 2976,
									"end": 3015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "tag",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2964,
									"end": 3015,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 2964,
									"end": 3015,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3048,
									"end": 3052,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3044,
									"end": 3053,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 3037,
									"end": 3042,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3033,
									"end": 3054,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3024,
									"end": 3054,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 3024,
									"end": 3054,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3097,
									"end": 3101,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3087,
									"end": 3095,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3083,
									"end": 3102,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3076,
									"end": 3081,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3073,
									"end": 3103,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 3063,
									"end": 3103,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3063,
									"end": 3103,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2792,
									"end": 3109,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2792,
									"end": 3109,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3152,
									"end": 3159,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3181,
									"end": 3186,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3170,
									"end": 3186,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3170,
									"end": 3186,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3115,
									"end": 3192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3226,
									"end": 3229,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3247,
									"end": 3252,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3198,
									"end": 3258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3314,
									"end": 3323,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 3392,
									"end": 3397,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3374,
									"end": 3398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "tag",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 3365,
									"end": 3399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "tag",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3347,
									"end": 3400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "tag",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3264,
									"end": 3406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3455,
									"end": 3458,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3476,
									"end": 3481,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3412,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 3634,
									"end": 3641,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 3603,
									"end": 3642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "tag",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "94"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "95"
								},
								{
									"begin": 3737,
									"end": 3753,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 3713,
									"end": 3754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "tag",
									"source": 15,
									"value": "95"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3705,
									"end": 3711,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3698,
									"end": 3702,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3692,
									"end": 3703,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 3664,
									"end": 3755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "tag",
									"source": 15,
									"value": "94"
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3658,
									"end": 3662,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3651,
									"end": 3756,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 3569,
									"end": 3762,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3813,
									"end": 3816,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3768,
									"end": 3841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 3924,
									"end": 3956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "tag",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 4023,
									"end": 4029,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4015,
									"end": 4021,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4009,
									"end": 4013,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 3965,
									"end": 4030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "tag",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3900,
									"end": 4036,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 4036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "tag",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4119,
									"end": 4122,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4112,
									"end": 4117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4109,
									"end": 4123,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 4210,
									"end": 4211,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4203,
									"end": 4208,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 4173,
									"end": 4212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "tag",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4146,
									"end": 4147,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4139,
									"end": 4144,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4135,
									"end": 4148,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4042,
									"end": 4228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "tag",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4335,
									"end": 4337,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4330,
									"end": 4333,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4327,
									"end": 4338,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 4401,
									"end": 4406,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 4369,
									"end": 4407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "tag",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 4471,
									"end": 4481,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 4453,
									"end": 4482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "tag",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4439,
									"end": 4483,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4636,
									"end": 4638,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4624,
									"end": 4634,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4621,
									"end": 4639,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4657,
									"end": 4665,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "tag",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "110"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 4754,
									"end": 4757,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 4736,
									"end": 4758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "tag",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4726,
									"end": 4734,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4722,
									"end": 4759,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4709,
									"end": 4720,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 4680,
									"end": 4760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "tag",
									"source": 15,
									"value": "110"
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "tag",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4234,
									"end": 4777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "tag",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4837,
									"end": 4845,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4887,
									"end": 4892,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4881,
									"end": 4885,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4877,
									"end": 4893,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4783,
									"end": 4900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "tag",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4950,
									"end": 4956,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 5031,
									"end": 5032,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5027,
									"end": 5033,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5019,
									"end": 5024,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5016,
									"end": 5017,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 4983,
									"end": 5034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "tag",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4979,
									"end": 5035,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5064,
									"end": 5068,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 5058,
									"end": 5062,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5054,
									"end": 5069,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4957,
									"end": 5075,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4906,
									"end": 5075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "tag",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5156,
									"end": 5160,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 5327,
									"end": 5330,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5321,
									"end": 5325,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 5302,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "tag",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5364,
									"end": 5367,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5361,
									"end": 5362,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 5357,
									"end": 5368,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 5351,
									"end": 5355,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5348,
									"end": 5369,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5375,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 5530,
									"end": 5533,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 5497,
									"end": 5534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "tag",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5599,
									"end": 5617,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5591,
									"end": 5597,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5588,
									"end": 5618,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 5621,
									"end": 5639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "tag",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "tag",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "121"
								},
								{
									"begin": 5697,
									"end": 5701,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5691,
									"end": 5702,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 5665,
									"end": 5703,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "tag",
									"source": 15,
									"value": "121"
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 5810,
									"end": 5816,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5802,
									"end": 5808,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5796,
									"end": 5800,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 5750,
									"end": 5817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "tag",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5844,
									"end": 5845,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5868,
									"end": 5872,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5900,
									"end": 5902,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 5892,
									"end": 5898,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5889,
									"end": 5903,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 5917,
									"end": 5918,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6574,
									"end": 6575,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6591,
									"end": 6597,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "125"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6640,
									"end": 6649,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6635,
									"end": 6638,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 6631,
									"end": 6650,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6625,
									"end": 6651,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "tag",
									"source": 15,
									"value": "125"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "126"
								},
								{
									"begin": 6751,
									"end": 6757,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6744,
									"end": 6749,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 6691,
									"end": 6758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "tag",
									"source": 15,
									"value": "126"
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6685,
									"end": 6689,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 6678,
									"end": 6759,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6547,
									"end": 6769,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "123"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "tag",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5964,
									"end": 5968,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 5960,
									"end": 5969,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5952,
									"end": 5958,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5948,
									"end": 5970,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "127"
								},
								{
									"begin": 6030,
									"end": 6034,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 5998,
									"end": 6035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "tag",
									"source": 15,
									"value": "127"
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6057,
									"end": 6058,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 15,
									"value": "128"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6082,
									"end": 6083,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6079,
									"end": 6093,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6164,
									"end": 6173,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6159,
									"end": 6162,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6155,
									"end": 6174,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6149,
									"end": 6175,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6141,
									"end": 6147,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6134,
									"end": 6176,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6215,
									"end": 6216,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 6207,
									"end": 6213,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6203,
									"end": 6217,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6262,
									"end": 6264,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 6251,
									"end": 6260,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6247,
									"end": 6265,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6108,
									"end": 6112,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 6105,
									"end": 6106,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6101,
									"end": 6113,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "128"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6307,
									"end": 6313,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 6298,
									"end": 6305,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6295,
									"end": 6314,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "131"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6365,
									"end": 6374,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6360,
									"end": 6363,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6356,
									"end": 6375,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6350,
									"end": 6376,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "132"
								},
								{
									"begin": 6450,
									"end": 6454,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 6442,
									"end": 6448,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6438,
									"end": 6455,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 6427,
									"end": 6436,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 6408,
									"end": 6456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "tag",
									"source": 15,
									"value": "132"
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6400,
									"end": 6406,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6393,
									"end": 6457,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6315,
									"end": 6471,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "tag",
									"source": 15,
									"value": "131"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6517,
									"end": 6518,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 6513,
									"end": 6514,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 6505,
									"end": 6511,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 6501,
									"end": 6515,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 6497,
									"end": 6519,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6491,
									"end": 6495,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 6484,
									"end": 6520,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "tag",
									"source": 15,
									"value": "123"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5380,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 1693,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220765dcb65d43641e58c9e66255e7b4dab49010423ba70d8452b8b0c5e53923a1e64736f6c63430008190033",
									".code": [
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "5C975ABB"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "E985E9C5"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "F242432A"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "5C975ABB"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "731133E9"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "8456CB59"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "1F7FDFFA"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "1F7FDFFA"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "2EB2C2D6"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "3F4BA83A"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "4E1273F4"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "FDD58E"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "2FE5305"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "E89341C"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 300,
											"end": 1693,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 827,
											"end": 914,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 827,
											"end": 914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 827,
											"end": 914,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 914,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 827,
											"end": 914,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 827,
											"end": 914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 827,
											"end": 914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 827,
											"end": 914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 827,
											"end": 914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 1224,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 1224,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1048,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 985,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 985,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 985,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 985,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 985,
											"end": 1048,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 985,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 985,
											"end": 1048,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 1054,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 1054,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 920,
											"end": 979,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 920,
											"end": 979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 920,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 920,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 920,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 920,
											"end": 979,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 920,
											"end": 979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 920,
											"end": 979,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 827,
											"end": 914,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 827,
											"end": 914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 892,
											"end": 907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 900,
											"end": 906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 892,
											"end": 899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 892,
											"end": 907,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 892,
											"end": 907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 892,
											"end": 907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 827,
											"end": 914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 1380,
											"end": 1382,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1387,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1389,
											"end": 1396,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1398,
											"end": 1402,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1369,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 1369,
											"end": 1403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1369,
											"end": 1403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 1369,
											"end": 1403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 985,
											"end": 1048,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 985,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 1031,
											"end": 1039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 1031,
											"end": 1041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1031,
											"end": 1041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 1031,
											"end": 1041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 985,
											"end": 1048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 1185,
											"end": 1192,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1194,
											"end": 1196,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1198,
											"end": 1204,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1206,
											"end": 1210,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1179,
											"end": 1184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 1179,
											"end": 1211,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1179,
											"end": 1211,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 1179,
											"end": 1211,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1054,
											"end": 1218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 920,
											"end": 979,
											"name": "tag",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 920,
											"end": 979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 964,
											"end": 972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 964,
											"end": 970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 964,
											"end": 972,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 964,
											"end": 972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 964,
											"end": 972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 920,
											"end": 979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10368,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 10282,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10355,
											"end": 10361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10352,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 10348,
											"end": 10361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10282,
											"end": 10368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10282,
											"end": 10368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11658,
											"end": 11659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11644,
											"end": 11646,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11714,
											"end": 11715,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 11683,
											"end": 11717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11737,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 11772,
											"end": 11773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11776,
											"end": 11778,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11780,
											"end": 11783,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11785,
											"end": 11791,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11737,
											"end": 11763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 11737,
											"end": 11798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11737,
											"end": 11798,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 11737,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 10881,
											"end": 10915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11008,
											"end": 11013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 10985,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16213,
											"end": 16236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16582,
											"end": 16590,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16573,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16704,
											"end": 16708,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16737,
											"end": 16738,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1691,
											"name": "tag",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 1484,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1648,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1670,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1672,
											"end": 1675,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 1648,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1648,
											"end": 1684,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 1648,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1484,
											"end": 1691,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1484,
											"end": 1691,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1484,
											"end": 1691,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1484,
											"end": 1691,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1484,
											"end": 1691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 14464,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15156,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15209,
											"end": 15211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15606,
											"end": 15607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15589,
											"end": 15602,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15589,
											"end": 15607,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 15693,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15880,
											"end": 15893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15867,
											"end": 15869,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15856,
											"end": 15894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 15479,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15271,
											"end": 15538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1349,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 1128,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1320,
											"end": 1324,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1326,
											"end": 1328,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1333,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1341,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 1306,
											"end": 1342,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1306,
											"end": 1342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 1349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 1349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 1349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 1349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 1349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3330,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 3213,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3312,
											"end": 3324,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3336,
											"end": 3453,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 3336,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3447,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3531,
											"end": 3545,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3527,
											"end": 3555,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3517,
											"end": 3555,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3517,
											"end": 3555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3459,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3567,
											"end": 3747,
											"name": "tag",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 3567,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3615,
											"end": 3692,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3612,
											"end": 3613,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3693,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3712,
											"end": 3716,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 3709,
											"end": 3710,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3717,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3736,
											"end": 3740,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3741,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 3836,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "tag",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3834,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3824,
											"end": 3864,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3954,
											"end": 3964,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3951,
											"end": 3973,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3918,
											"end": 3928,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 3977,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4017,
											"end": 4027,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4013,
											"end": 4015,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4006,
											"end": 4028,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3796,
											"end": 4034,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3753,
											"end": 4034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 4101,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 4130,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "tag",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4040,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4237,
											"end": 4241,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 4349,
											"end": 4367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 4387,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4379,
											"end": 4416,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4379,
											"end": 4416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4471,
											"end": 4475,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4465,
											"end": 4469,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4461,
											"end": 4476,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4175,
											"end": 4483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4582,
											"end": 4585,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4577,
											"end": 4580,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 4628,
											"end": 4629,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4625,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4614,
											"end": 4617,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4603,
											"end": 4630,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4489,
											"end": 4637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4721,
											"end": 4726,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 4762,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 4804,
											"end": 4810,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 4762,
											"end": 4811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4762,
											"end": 4811,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 4762,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4746,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 4746,
											"end": 4812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4746,
											"end": 4812,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 4746,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4737,
											"end": 4812,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4737,
											"end": 4812,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4835,
											"end": 4841,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4828,
											"end": 4833,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4821,
											"end": 4842,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4873,
											"end": 4877,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4866,
											"end": 4871,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4862,
											"end": 4878,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4911,
											"end": 4914,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4902,
											"end": 4908,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4897,
											"end": 4900,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 4909,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4890,
											"end": 4915,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 4918,
											"end": 4997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "tag",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "tag",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5008,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 5055,
											"end": 5061,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5050,
											"end": 5053,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5045,
											"end": 5048,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5008,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 5008,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5008,
											"end": 5062,
											"name": "tag",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 5008,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4727,
											"end": 5068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4643,
											"end": 5068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5196,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5186,
											"end": 5190,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5178,
											"end": 5184,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5174,
											"end": 5191,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5160,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 5160,
											"end": 5282,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5201,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 5201,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 5201,
											"end": 5280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5201,
											"end": 5280,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 5201,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5160,
											"end": 5282,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 5160,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5305,
											"end": 5325,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5343,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 5418,
											"end": 5421,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5410,
											"end": 5416,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5401,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5391,
											"end": 5408,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5343,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 5343,
											"end": 5422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5343,
											"end": 5422,
											"name": "tag",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 5343,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5150,
											"end": 5428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5088,
											"end": 5428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5503,
											"end": 5509,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5540,
											"end": 5549,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5531,
											"end": 5538,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5527,
											"end": 5550,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5523,
											"end": 5555,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 5558,
											"end": 5637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "tag",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5704,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5691,
											"end": 5708,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5736,
											"end": 5754,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5725,
											"end": 5755,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5758,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 5758,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 5758,
											"end": 5837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5758,
											"end": 5837,
											"name": "tag",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 5758,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5863,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 5918,
											"end": 5925,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5909,
											"end": 5915,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5898,
											"end": 5907,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5894,
											"end": 5916,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5863,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 5863,
											"end": 5926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5863,
											"end": 5926,
											"name": "tag",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 5863,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5853,
											"end": 5926,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5853,
											"end": 5926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5649,
											"end": 5936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5434,
											"end": 5943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6008,
											"end": 6014,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6057,
											"end": 6059,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6045,
											"end": 6054,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6036,
											"end": 6043,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6055,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 6063,
											"end": 6142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "tag",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "tag",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6183,
											"end": 6184,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6250,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6233,
											"end": 6242,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6229,
											"end": 6251,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6208,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 6208,
											"end": 6261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6208,
											"end": 6261,
											"name": "tag",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 6208,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6198,
											"end": 6261,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6198,
											"end": 6261,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6154,
											"end": 6271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5949,
											"end": 6278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6336,
											"end": 6342,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6375,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6364,
											"end": 6376,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6354,
											"end": 6376,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6354,
											"end": 6376,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6284,
											"end": 6383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6473,
											"end": 6484,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6502,
											"end": 6505,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6495,
											"end": 6514,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6547,
											"end": 6551,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6542,
											"end": 6545,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6538,
											"end": 6552,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6523,
											"end": 6552,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6523,
											"end": 6552,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6653,
											"end": 6659,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6648,
											"end": 6651,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6643,
											"end": 6646,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6637,
											"end": 6660,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 6694,
											"end": 6695,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6685,
											"end": 6691,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6680,
											"end": 6683,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6676,
											"end": 6692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6669,
											"end": 6696,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6564,
											"end": 6703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6797,
											"end": 6800,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6825,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 6858,
											"end": 6863,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6825,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 6825,
											"end": 6864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6825,
											"end": 6864,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 6825,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6880,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 6944,
											"end": 6950,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6939,
											"end": 6942,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6880,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 6880,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6880,
											"end": 6951,
											"name": "tag",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 6880,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6873,
											"end": 6951,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6873,
											"end": 6951,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6960,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 7018,
											"end": 7024,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7013,
											"end": 7016,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6999,
											"end": 7004,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6995,
											"end": 7011,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6960,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 6960,
											"end": 7025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6960,
											"end": 7025,
											"name": "tag",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 6960,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7050,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 7072,
											"end": 7078,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7050,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 7050,
											"end": 7079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7050,
											"end": 7079,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 7050,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7045,
											"end": 7048,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7041,
											"end": 7080,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7034,
											"end": 7080,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7034,
											"end": 7080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6801,
											"end": 7086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6709,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7205,
											"end": 7209,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7245,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7232,
											"end": 7241,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7228,
											"end": 7246,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7220,
											"end": 7246,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7220,
											"end": 7246,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7292,
											"end": 7301,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7286,
											"end": 7290,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7302,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7278,
											"end": 7279,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7267,
											"end": 7276,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7256,
											"end": 7303,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7320,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 7393,
											"end": 7397,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7390,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7320,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 7320,
											"end": 7398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7320,
											"end": 7398,
											"name": "tag",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 7320,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7312,
											"end": 7398,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7312,
											"end": 7398,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7092,
											"end": 7405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7488,
											"end": 7492,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7596,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7570,
											"end": 7576,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7567,
											"end": 7597,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 7600,
											"end": 7618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "tag",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7642,
											"end": 7648,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7638,
											"end": 7655,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 7630,
											"end": 7655,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7630,
											"end": 7655,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7710,
											"end": 7714,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7704,
											"end": 7708,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7700,
											"end": 7715,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7692,
											"end": 7715,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7692,
											"end": 7715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7411,
											"end": 7722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7728,
											"end": 7845,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 7728,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7837,
											"end": 7838,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7835,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7827,
											"end": 7839,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7964,
											"end": 7969,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 8005,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 8062,
											"end": 8068,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8005,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 8005,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8005,
											"end": 8069,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 8005,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7989,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 7989,
											"end": 8070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7989,
											"end": 8070,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 7989,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7980,
											"end": 8070,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7980,
											"end": 8070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8090,
											"end": 8095,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8119,
											"end": 8125,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8112,
											"end": 8117,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8105,
											"end": 8126,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8153,
											"end": 8157,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8146,
											"end": 8151,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8142,
											"end": 8158,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8206,
											"end": 8210,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8198,
											"end": 8204,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8194,
											"end": 8211,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 8186,
											"end": 8192,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8182,
											"end": 8212,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8235,
											"end": 8238,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8227,
											"end": 8233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8224,
											"end": 8239,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8254,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 8254,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 8254,
											"end": 8333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8254,
											"end": 8333,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 8254,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8369,
											"end": 8375,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "tag",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8386,
											"end": 8392,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8381,
											"end": 8384,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8378,
											"end": 8393,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8461,
											"end": 8464,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8490,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 8523,
											"end": 8526,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8511,
											"end": 8521,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8490,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 8490,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8490,
											"end": 8527,
											"name": "tag",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 8490,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8485,
											"end": 8488,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8478,
											"end": 8528,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8557,
											"end": 8561,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8552,
											"end": 8555,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8548,
											"end": 8562,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8541,
											"end": 8562,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8541,
											"end": 8562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8428,
											"end": 8572,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8412,
											"end": 8416,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8407,
											"end": 8410,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8403,
											"end": 8417,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8396,
											"end": 8417,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8396,
											"end": 8417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8356,
											"end": 8377,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7970,
											"end": 8578,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7970,
											"end": 8578,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7868,
											"end": 8578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8672,
											"end": 8677,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8721,
											"end": 8724,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8714,
											"end": 8718,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8702,
											"end": 8719,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8698,
											"end": 8725,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8688,
											"end": 8810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 8688,
											"end": 8810,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8729,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 8729,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 8729,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8729,
											"end": 8808,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 8729,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8688,
											"end": 8810,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 8688,
											"end": 8810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8846,
											"end": 8852,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8833,
											"end": 8853,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8871,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 8961,
											"end": 8964,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8953,
											"end": 8959,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8946,
											"end": 8950,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8934,
											"end": 8951,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8871,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 8871,
											"end": 8965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8871,
											"end": 8965,
											"name": "tag",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 8871,
											"end": 8965,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8862,
											"end": 8965,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8862,
											"end": 8965,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8678,
											"end": 8971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8601,
											"end": 8971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9038,
											"end": 9042,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9128,
											"end": 9146,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9120,
											"end": 9126,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9117,
											"end": 9147,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 9150,
											"end": 9168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 9210,
											"end": 9216,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 9188,
											"end": 9217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9180,
											"end": 9217,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9180,
											"end": 9217,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9272,
											"end": 9276,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9266,
											"end": 9270,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9262,
											"end": 9277,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9254,
											"end": 9277,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9254,
											"end": 9277,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8977,
											"end": 9284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9367,
											"end": 9372,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9392,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 9408,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 9449,
											"end": 9455,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9408,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 9408,
											"end": 9456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9408,
											"end": 9456,
											"name": "tag",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 9408,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9392,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 9392,
											"end": 9457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9392,
											"end": 9457,
											"name": "tag",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 9392,
											"end": 9457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9383,
											"end": 9457,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9383,
											"end": 9457,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9480,
											"end": 9486,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9473,
											"end": 9478,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9466,
											"end": 9487,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9518,
											"end": 9522,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9511,
											"end": 9516,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9507,
											"end": 9523,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9556,
											"end": 9559,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9547,
											"end": 9553,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9542,
											"end": 9545,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9538,
											"end": 9554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9535,
											"end": 9560,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9563,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 9563,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 9563,
											"end": 9642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9563,
											"end": 9642,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 9563,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9653,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 9700,
											"end": 9706,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9695,
											"end": 9698,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 9693,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9653,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 9653,
											"end": 9707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9653,
											"end": 9707,
											"name": "tag",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 9653,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9373,
											"end": 9713,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9290,
											"end": 9713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9787,
											"end": 9792,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9839,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9829,
											"end": 9833,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 9821,
											"end": 9827,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9817,
											"end": 9834,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9813,
											"end": 9840,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9803,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 9803,
											"end": 9925,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 9844,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "tag",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9803,
											"end": 9925,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 9803,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9961,
											"end": 9967,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9948,
											"end": 9968,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9986,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 10060,
											"end": 10063,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10052,
											"end": 10058,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10045,
											"end": 10049,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10037,
											"end": 10043,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10033,
											"end": 10050,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9986,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 9986,
											"end": 10064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9986,
											"end": 10064,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 9986,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9977,
											"end": 10064,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9977,
											"end": 10064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9793,
											"end": 10070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9732,
											"end": 10070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 11439,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 10076,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10221,
											"end": 10227,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10235,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10237,
											"end": 10243,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10245,
											"end": 10251,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10294,
											"end": 10297,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 10282,
											"end": 10291,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10265,
											"end": 10298,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10262,
											"end": 10382,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10262,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 10262,
											"end": 10382,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10301,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 10301,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 10301,
											"end": 10380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10301,
											"end": 10380,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 10301,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10262,
											"end": 10382,
											"name": "tag",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 10262,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10421,
											"end": 10422,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10446,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 10491,
											"end": 10498,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10482,
											"end": 10488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10471,
											"end": 10480,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10467,
											"end": 10489,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10446,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 10446,
											"end": 10499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10446,
											"end": 10499,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 10446,
											"end": 10499,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10436,
											"end": 10499,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 10436,
											"end": 10499,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10392,
											"end": 10509,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10576,
											"end": 10578,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10565,
											"end": 10574,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10561,
											"end": 10579,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10548,
											"end": 10580,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 10607,
											"end": 10625,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10599,
											"end": 10605,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10596,
											"end": 10626,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10593,
											"end": 10710,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10593,
											"end": 10710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 10593,
											"end": 10710,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10629,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 10629,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 10629,
											"end": 10708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10629,
											"end": 10708,
											"name": "tag",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 10629,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10593,
											"end": 10710,
											"name": "tag",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 10593,
											"end": 10710,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10734,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 10804,
											"end": 10811,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10795,
											"end": 10801,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10780,
											"end": 10802,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10734,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 10734,
											"end": 10812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10734,
											"end": 10812,
											"name": "tag",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 10734,
											"end": 10812,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10724,
											"end": 10812,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10724,
											"end": 10812,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10519,
											"end": 10822,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10889,
											"end": 10891,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10878,
											"end": 10887,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10874,
											"end": 10892,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10861,
											"end": 10893,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 10920,
											"end": 10938,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10912,
											"end": 10918,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10909,
											"end": 10939,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10906,
											"end": 11023,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10906,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 10906,
											"end": 11023,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10942,
											"end": 11021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 10942,
											"end": 11021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 10942,
											"end": 11021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10942,
											"end": 11021,
											"name": "tag",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 10942,
											"end": 11021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10906,
											"end": 11023,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 10906,
											"end": 11023,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11047,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 11117,
											"end": 11124,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 11108,
											"end": 11114,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11097,
											"end": 11106,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11093,
											"end": 11115,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11047,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 11047,
											"end": 11125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11047,
											"end": 11125,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 11047,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11037,
											"end": 11125,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11037,
											"end": 11125,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10832,
											"end": 11135,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11202,
											"end": 11204,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11191,
											"end": 11200,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11174,
											"end": 11206,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11233,
											"end": 11251,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11225,
											"end": 11231,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11222,
											"end": 11252,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 11255,
											"end": 11334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "tag",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "tag",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 11414,
											"end": 11421,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 11405,
											"end": 11411,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11394,
											"end": 11403,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11390,
											"end": 11412,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 11360,
											"end": 11422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11350,
											"end": 11422,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11350,
											"end": 11422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11145,
											"end": 11432,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 11439,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 11439,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 11439,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 11439,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 11439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 11439,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 11439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 11439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 12954,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 11445,
											"end": 12954,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11599,
											"end": 11605,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11607,
											"end": 11613,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11615,
											"end": 11621,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11623,
											"end": 11629,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11631,
											"end": 11637,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11680,
											"end": 11683,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 11668,
											"end": 11677,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11659,
											"end": 11666,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11655,
											"end": 11678,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11651,
											"end": 11684,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 11648,
											"end": 11768,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11648,
											"end": 11768,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 11648,
											"end": 11768,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11687,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 11687,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 11687,
											"end": 11766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11687,
											"end": 11766,
											"name": "tag",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 11687,
											"end": 11766,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11648,
											"end": 11768,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 11648,
											"end": 11768,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11807,
											"end": 11808,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 11877,
											"end": 11884,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11868,
											"end": 11874,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11857,
											"end": 11866,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 11853,
											"end": 11875,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 11832,
											"end": 11885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "tag",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11822,
											"end": 11885,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 11822,
											"end": 11885,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11778,
											"end": 11895,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11934,
											"end": 11936,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11960,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 12005,
											"end": 12012,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11996,
											"end": 12002,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11985,
											"end": 11994,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 11981,
											"end": 12003,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11960,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 11960,
											"end": 12013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11960,
											"end": 12013,
											"name": "tag",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 11960,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11950,
											"end": 12013,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 11950,
											"end": 12013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11905,
											"end": 12023,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12090,
											"end": 12092,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12079,
											"end": 12088,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12075,
											"end": 12093,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12062,
											"end": 12094,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 12121,
											"end": 12139,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12113,
											"end": 12119,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12110,
											"end": 12140,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12107,
											"end": 12224,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12107,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 12107,
											"end": 12224,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12143,
											"end": 12222,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 12143,
											"end": 12222,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 12143,
											"end": 12222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12143,
											"end": 12222,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 12143,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12107,
											"end": 12224,
											"name": "tag",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 12107,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12248,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 12318,
											"end": 12325,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 12309,
											"end": 12315,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12298,
											"end": 12307,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 12294,
											"end": 12316,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12248,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 12248,
											"end": 12326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12248,
											"end": 12326,
											"name": "tag",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 12248,
											"end": 12326,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12238,
											"end": 12326,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 12238,
											"end": 12326,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12033,
											"end": 12336,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12403,
											"end": 12405,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 12392,
											"end": 12401,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12388,
											"end": 12406,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12375,
											"end": 12407,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12426,
											"end": 12432,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12423,
											"end": 12453,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12420,
											"end": 12537,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12420,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 12420,
											"end": 12537,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12456,
											"end": 12535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 12456,
											"end": 12535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 12456,
											"end": 12535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12456,
											"end": 12535,
											"name": "tag",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 12456,
											"end": 12535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12420,
											"end": 12537,
											"name": "tag",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 12420,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12561,
											"end": 12639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 12631,
											"end": 12638,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 12622,
											"end": 12628,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12620,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 12607,
											"end": 12629,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12561,
											"end": 12639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 12561,
											"end": 12639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12561,
											"end": 12639,
											"name": "tag",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 12561,
											"end": 12639,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12551,
											"end": 12639,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12551,
											"end": 12639,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12346,
											"end": 12649,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12716,
											"end": 12719,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 12705,
											"end": 12714,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12701,
											"end": 12720,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12688,
											"end": 12721,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 12748,
											"end": 12766,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12740,
											"end": 12746,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12737,
											"end": 12767,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12734,
											"end": 12851,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12734,
											"end": 12851,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 12734,
											"end": 12851,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12770,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 12770,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 12770,
											"end": 12849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12770,
											"end": 12849,
											"name": "tag",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 12770,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12734,
											"end": 12851,
											"name": "tag",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 12734,
											"end": 12851,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12875,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 12929,
											"end": 12936,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 12920,
											"end": 12926,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12909,
											"end": 12918,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 12905,
											"end": 12927,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12875,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 12875,
											"end": 12937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12875,
											"end": 12937,
											"name": "tag",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 12875,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12865,
											"end": 12937,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12865,
											"end": 12937,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12659,
											"end": 12947,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 12954,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 12954,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 12954,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 12954,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 12954,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 12954,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 12954,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 12954,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 12954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12960,
											"end": 13271,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 12960,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13037,
											"end": 13041,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13127,
											"end": 13145,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13119,
											"end": 13125,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13116,
											"end": 13146,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13113,
											"end": 13169,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13113,
											"end": 13169,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 13113,
											"end": 13169,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13149,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 13149,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 13149,
											"end": 13167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13149,
											"end": 13167,
											"name": "tag",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 13149,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13113,
											"end": 13169,
											"name": "tag",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 13113,
											"end": 13169,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13199,
											"end": 13203,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13191,
											"end": 13197,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13187,
											"end": 13204,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 13179,
											"end": 13204,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13179,
											"end": 13204,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13259,
											"end": 13263,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13253,
											"end": 13257,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13249,
											"end": 13264,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13241,
											"end": 13264,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13241,
											"end": 13264,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12960,
											"end": 13271,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12960,
											"end": 13271,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12960,
											"end": 13271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12960,
											"end": 13271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13294,
											"end": 14004,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 13294,
											"end": 14004,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13390,
											"end": 13395,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13415,
											"end": 13496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 13431,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 13488,
											"end": 13494,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13431,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 13431,
											"end": 13495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13431,
											"end": 13495,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 13431,
											"end": 13495,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13415,
											"end": 13496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 13415,
											"end": 13496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13415,
											"end": 13496,
											"name": "tag",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 13415,
											"end": 13496,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13406,
											"end": 13496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13406,
											"end": 13496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13516,
											"end": 13521,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13545,
											"end": 13551,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13538,
											"end": 13543,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13531,
											"end": 13552,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13579,
											"end": 13583,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13572,
											"end": 13577,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13568,
											"end": 13584,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13561,
											"end": 13584,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13561,
											"end": 13584,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13632,
											"end": 13636,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13624,
											"end": 13630,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13620,
											"end": 13637,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 13612,
											"end": 13618,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13608,
											"end": 13638,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13661,
											"end": 13664,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13653,
											"end": 13659,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13650,
											"end": 13665,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13647,
											"end": 13769,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13647,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "551"
										},
										{
											"begin": 13647,
											"end": 13769,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13680,
											"end": 13759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 13680,
											"end": 13759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 13680,
											"end": 13759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13680,
											"end": 13759,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 13680,
											"end": 13759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13647,
											"end": 13769,
											"name": "tag",
											"source": 15,
											"value": "551"
										},
										{
											"begin": 13647,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13795,
											"end": 13801,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13778,
											"end": 13998,
											"name": "tag",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 13778,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13812,
											"end": 13818,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13807,
											"end": 13810,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13804,
											"end": 13819,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13778,
											"end": 13998,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13778,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 13778,
											"end": 13998,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13887,
											"end": 13890,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13916,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 13937,
											"end": 13947,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13916,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 13916,
											"end": 13953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13916,
											"end": 13953,
											"name": "tag",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 13916,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13911,
											"end": 13914,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13904,
											"end": 13954,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13983,
											"end": 13987,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13978,
											"end": 13981,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13974,
											"end": 13988,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13967,
											"end": 13988,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 13967,
											"end": 13988,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13854,
											"end": 13998,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13838,
											"end": 13842,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13833,
											"end": 13836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13829,
											"end": 13843,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13822,
											"end": 13843,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13822,
											"end": 13843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13778,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 13778,
											"end": 13998,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13778,
											"end": 13998,
											"name": "tag",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 13778,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13782,
											"end": 13803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13396,
											"end": 14004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13396,
											"end": 14004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13294,
											"end": 14004,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 13294,
											"end": 14004,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13294,
											"end": 14004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13294,
											"end": 14004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13294,
											"end": 14004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13294,
											"end": 14004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14027,
											"end": 14397,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 14027,
											"end": 14397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14098,
											"end": 14103,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14147,
											"end": 14150,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14140,
											"end": 14144,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 14132,
											"end": 14138,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14128,
											"end": 14145,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14124,
											"end": 14151,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 14114,
											"end": 14236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 14114,
											"end": 14236,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14155,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 14155,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 14155,
											"end": 14234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14155,
											"end": 14234,
											"name": "tag",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 14155,
											"end": 14234,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14114,
											"end": 14236,
											"name": "tag",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 14114,
											"end": 14236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14272,
											"end": 14278,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14259,
											"end": 14279,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 14297,
											"end": 14391,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 14387,
											"end": 14390,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14379,
											"end": 14385,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14372,
											"end": 14376,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14364,
											"end": 14370,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14360,
											"end": 14377,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14297,
											"end": 14391,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 14297,
											"end": 14391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14297,
											"end": 14391,
											"name": "tag",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 14297,
											"end": 14391,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14288,
											"end": 14391,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14288,
											"end": 14391,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14104,
											"end": 14397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14027,
											"end": 14397,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14027,
											"end": 14397,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14027,
											"end": 14397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14027,
											"end": 14397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14027,
											"end": 14397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14403,
											"end": 15297,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 14403,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14521,
											"end": 14527,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14529,
											"end": 14535,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14578,
											"end": 14580,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 14566,
											"end": 14575,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14557,
											"end": 14564,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14553,
											"end": 14576,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14549,
											"end": 14581,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 14546,
											"end": 14665,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14546,
											"end": 14665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 14546,
											"end": 14665,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14584,
											"end": 14663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 14584,
											"end": 14663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 14584,
											"end": 14663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14584,
											"end": 14663,
											"name": "tag",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 14584,
											"end": 14663,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14546,
											"end": 14665,
											"name": "tag",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 14546,
											"end": 14665,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14732,
											"end": 14733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14721,
											"end": 14730,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14717,
											"end": 14734,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14704,
											"end": 14735,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14754,
											"end": 14760,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14751,
											"end": 14781,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 14748,
											"end": 14865,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14748,
											"end": 14865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 14748,
											"end": 14865,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14784,
											"end": 14863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 14784,
											"end": 14863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 14784,
											"end": 14863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14784,
											"end": 14863,
											"name": "tag",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 14784,
											"end": 14863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14748,
											"end": 14865,
											"name": "tag",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 14748,
											"end": 14865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14889,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 14959,
											"end": 14966,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14950,
											"end": 14956,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14939,
											"end": 14948,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14935,
											"end": 14957,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14889,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 14889,
											"end": 14967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14889,
											"end": 14967,
											"name": "tag",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 14889,
											"end": 14967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14879,
											"end": 14967,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14879,
											"end": 14967,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14675,
											"end": 14977,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15044,
											"end": 15046,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15033,
											"end": 15042,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15029,
											"end": 15047,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15016,
											"end": 15048,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 15075,
											"end": 15093,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15067,
											"end": 15073,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15064,
											"end": 15094,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 15061,
											"end": 15178,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15061,
											"end": 15178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 15061,
											"end": 15178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15097,
											"end": 15176,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 15097,
											"end": 15176,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 15097,
											"end": 15176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15097,
											"end": 15176,
											"name": "tag",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 15097,
											"end": 15176,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15061,
											"end": 15178,
											"name": "tag",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 15061,
											"end": 15178,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15202,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 15272,
											"end": 15279,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15263,
											"end": 15269,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15252,
											"end": 15261,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15248,
											"end": 15270,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15202,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 15202,
											"end": 15280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15202,
											"end": 15280,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 15202,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15192,
											"end": 15280,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15192,
											"end": 15280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14987,
											"end": 15290,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14403,
											"end": 15297,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14403,
											"end": 15297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14403,
											"end": 15297,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14403,
											"end": 15297,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14403,
											"end": 15297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14403,
											"end": 15297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15303,
											"end": 15417,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 15303,
											"end": 15417,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15370,
											"end": 15376,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15404,
											"end": 15409,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15398,
											"end": 15410,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15388,
											"end": 15410,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15388,
											"end": 15410,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15303,
											"end": 15417,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15303,
											"end": 15417,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15303,
											"end": 15417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15303,
											"end": 15417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15423,
											"end": 15607,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 15423,
											"end": 15607,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15522,
											"end": 15533,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15556,
											"end": 15562,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15551,
											"end": 15554,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15544,
											"end": 15563,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15596,
											"end": 15600,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15591,
											"end": 15594,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15587,
											"end": 15601,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15572,
											"end": 15601,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15572,
											"end": 15601,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15423,
											"end": 15607,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15423,
											"end": 15607,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15423,
											"end": 15607,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15423,
											"end": 15607,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15423,
											"end": 15607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15613,
											"end": 15745,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 15613,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15680,
											"end": 15684,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15703,
											"end": 15706,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15695,
											"end": 15706,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15695,
											"end": 15706,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15733,
											"end": 15737,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15728,
											"end": 15731,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15724,
											"end": 15738,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15716,
											"end": 15738,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15716,
											"end": 15738,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15613,
											"end": 15745,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15613,
											"end": 15745,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15613,
											"end": 15745,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15613,
											"end": 15745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15751,
											"end": 15859,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 15751,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15828,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 15846,
											"end": 15851,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15828,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 15828,
											"end": 15852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15828,
											"end": 15852,
											"name": "tag",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 15828,
											"end": 15852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15823,
											"end": 15826,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15816,
											"end": 15853,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15751,
											"end": 15859,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15751,
											"end": 15859,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15751,
											"end": 15859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15865,
											"end": 16044,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 15865,
											"end": 16044,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15934,
											"end": 15944,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15955,
											"end": 16001,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 15997,
											"end": 16000,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15989,
											"end": 15995,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15955,
											"end": 16001,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 15955,
											"end": 16001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15955,
											"end": 16001,
											"name": "tag",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 15955,
											"end": 16001,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16033,
											"end": 16037,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16028,
											"end": 16031,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16024,
											"end": 16038,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16010,
											"end": 16038,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16010,
											"end": 16038,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15865,
											"end": 16044,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15865,
											"end": 16044,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15865,
											"end": 16044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15865,
											"end": 16044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15865,
											"end": 16044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16120,
											"end": 16124,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16152,
											"end": 16156,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16147,
											"end": 16150,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16143,
											"end": 16157,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16135,
											"end": 16157,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16135,
											"end": 16157,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16050,
											"end": 16163,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16050,
											"end": 16163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16199,
											"end": 16931,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 16199,
											"end": 16931,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16318,
											"end": 16321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16347,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 16395,
											"end": 16400,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16347,
											"end": 16401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 16347,
											"end": 16401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16347,
											"end": 16401,
											"name": "tag",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 16347,
											"end": 16401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16417,
											"end": 16503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 16496,
											"end": 16502,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16491,
											"end": 16494,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16417,
											"end": 16503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 16417,
											"end": 16503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16417,
											"end": 16503,
											"name": "tag",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 16417,
											"end": 16503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16410,
											"end": 16503,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16410,
											"end": 16503,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16527,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 16577,
											"end": 16582,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16527,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 16527,
											"end": 16583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16527,
											"end": 16583,
											"name": "tag",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 16527,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16606,
											"end": 16613,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 16637,
											"end": 16638,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16622,
											"end": 16906,
											"name": "tag",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 16622,
											"end": 16906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16647,
											"end": 16653,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16644,
											"end": 16645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16641,
											"end": 16654,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 16622,
											"end": 16906,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16622,
											"end": 16906,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 16622,
											"end": 16906,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16717,
											"end": 16730,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 16750,
											"end": 16813,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 16809,
											"end": 16812,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 16794,
											"end": 16807,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16750,
											"end": 16813,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 16750,
											"end": 16813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16750,
											"end": 16813,
											"name": "tag",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 16750,
											"end": 16813,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16743,
											"end": 16813,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 16743,
											"end": 16813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16836,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 16889,
											"end": 16895,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16836,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 16836,
											"end": 16896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16836,
											"end": 16896,
											"name": "tag",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 16836,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16826,
											"end": 16896,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16826,
											"end": 16896,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16682,
											"end": 16906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16669,
											"end": 16670,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 16666,
											"end": 16667,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16662,
											"end": 16671,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16657,
											"end": 16671,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16657,
											"end": 16671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16622,
											"end": 16906,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 16622,
											"end": 16906,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16622,
											"end": 16906,
											"name": "tag",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 16622,
											"end": 16906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16626,
											"end": 16640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16922,
											"end": 16925,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16915,
											"end": 16925,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16915,
											"end": 16925,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16323,
											"end": 16931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16323,
											"end": 16931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16323,
											"end": 16931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16199,
											"end": 16931,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16199,
											"end": 16931,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16199,
											"end": 16931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16199,
											"end": 16931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16199,
											"end": 16931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16937,
											"end": 17310,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16937,
											"end": 17310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17080,
											"end": 17084,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17118,
											"end": 17120,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17107,
											"end": 17116,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17103,
											"end": 17121,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17095,
											"end": 17121,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17095,
											"end": 17121,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17167,
											"end": 17176,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17161,
											"end": 17165,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17157,
											"end": 17177,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 17153,
											"end": 17154,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17142,
											"end": 17151,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17138,
											"end": 17155,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17131,
											"end": 17178,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17195,
											"end": 17303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "588"
										},
										{
											"begin": 17298,
											"end": 17302,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17289,
											"end": 17295,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17195,
											"end": 17303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 17195,
											"end": 17303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17195,
											"end": 17303,
											"name": "tag",
											"source": 15,
											"value": "588"
										},
										{
											"begin": 17195,
											"end": 17303,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17187,
											"end": 17303,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17187,
											"end": 17303,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16937,
											"end": 17310,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16937,
											"end": 17310,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16937,
											"end": 17310,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16937,
											"end": 17310,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16937,
											"end": 17310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17316,
											"end": 18259,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 17316,
											"end": 18259,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17411,
											"end": 17417,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17419,
											"end": 17425,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17427,
											"end": 17433,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17435,
											"end": 17441,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17484,
											"end": 17487,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 17472,
											"end": 17481,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17463,
											"end": 17470,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 17459,
											"end": 17482,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 17455,
											"end": 17488,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 17452,
											"end": 17572,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17452,
											"end": 17572,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 17452,
											"end": 17572,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17491,
											"end": 17570,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 17491,
											"end": 17570,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 17491,
											"end": 17570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17491,
											"end": 17570,
											"name": "tag",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 17491,
											"end": 17570,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17452,
											"end": 17572,
											"name": "tag",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 17452,
											"end": 17572,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17611,
											"end": 17612,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17636,
											"end": 17689,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 17681,
											"end": 17688,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 17672,
											"end": 17678,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17661,
											"end": 17670,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 17657,
											"end": 17679,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17636,
											"end": 17689,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 17636,
											"end": 17689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17636,
											"end": 17689,
											"name": "tag",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 17636,
											"end": 17689,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17626,
											"end": 17689,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 17626,
											"end": 17689,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17582,
											"end": 17699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17738,
											"end": 17740,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17764,
											"end": 17817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "593"
										},
										{
											"begin": 17809,
											"end": 17816,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 17800,
											"end": 17806,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17789,
											"end": 17798,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 17785,
											"end": 17807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17764,
											"end": 17817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 17764,
											"end": 17817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17764,
											"end": 17817,
											"name": "tag",
											"source": 15,
											"value": "593"
										},
										{
											"begin": 17764,
											"end": 17817,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17754,
											"end": 17817,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 17754,
											"end": 17817,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17709,
											"end": 17827,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17866,
											"end": 17868,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17892,
											"end": 17945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 17937,
											"end": 17944,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 17928,
											"end": 17934,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17917,
											"end": 17926,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 17913,
											"end": 17935,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17892,
											"end": 17945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 17892,
											"end": 17945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17892,
											"end": 17945,
											"name": "tag",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 17892,
											"end": 17945,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17882,
											"end": 17945,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17882,
											"end": 17945,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17837,
											"end": 17955,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18022,
											"end": 18024,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 18011,
											"end": 18020,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 18007,
											"end": 18025,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17994,
											"end": 18026,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 18053,
											"end": 18071,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18045,
											"end": 18051,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18042,
											"end": 18072,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 18039,
											"end": 18156,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18039,
											"end": 18156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 18039,
											"end": 18156,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18075,
											"end": 18154,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 18075,
											"end": 18154,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 18075,
											"end": 18154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18075,
											"end": 18154,
											"name": "tag",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 18075,
											"end": 18154,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18039,
											"end": 18156,
											"name": "tag",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 18039,
											"end": 18156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18180,
											"end": 18242,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 18234,
											"end": 18241,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 18225,
											"end": 18231,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18214,
											"end": 18223,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 18210,
											"end": 18232,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18180,
											"end": 18242,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 18180,
											"end": 18242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18180,
											"end": 18242,
											"name": "tag",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 18180,
											"end": 18242,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18170,
											"end": 18242,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18170,
											"end": 18242,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17965,
											"end": 18252,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17316,
											"end": 18259,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17316,
											"end": 18259,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 17316,
											"end": 18259,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17316,
											"end": 18259,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 17316,
											"end": 18259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17316,
											"end": 18259,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17316,
											"end": 18259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17316,
											"end": 18259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18265,
											"end": 18383,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 18265,
											"end": 18383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18352,
											"end": 18376,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 18370,
											"end": 18375,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18352,
											"end": 18376,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 18352,
											"end": 18376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18352,
											"end": 18376,
											"name": "tag",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 18352,
											"end": 18376,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18347,
											"end": 18350,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18340,
											"end": 18377,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18265,
											"end": 18383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18265,
											"end": 18383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18265,
											"end": 18383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18389,
											"end": 18611,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 18389,
											"end": 18611,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18482,
											"end": 18486,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18520,
											"end": 18522,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18509,
											"end": 18518,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18505,
											"end": 18523,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18497,
											"end": 18523,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18497,
											"end": 18523,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18533,
											"end": 18604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 18601,
											"end": 18602,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18590,
											"end": 18599,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18586,
											"end": 18603,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18577,
											"end": 18583,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 18533,
											"end": 18604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 18533,
											"end": 18604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18533,
											"end": 18604,
											"name": "tag",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 18533,
											"end": 18604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18389,
											"end": 18611,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18389,
											"end": 18611,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18389,
											"end": 18611,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18389,
											"end": 18611,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18389,
											"end": 18611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18617,
											"end": 18733,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 18617,
											"end": 18733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18687,
											"end": 18708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 18702,
											"end": 18707,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18687,
											"end": 18708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 18687,
											"end": 18708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18687,
											"end": 18708,
											"name": "tag",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 18687,
											"end": 18708,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18680,
											"end": 18685,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18677,
											"end": 18709,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 18667,
											"end": 18727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 18667,
											"end": 18727,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18723,
											"end": 18724,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18720,
											"end": 18721,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18713,
											"end": 18725,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 18667,
											"end": 18727,
											"name": "tag",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 18667,
											"end": 18727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18617,
											"end": 18733,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18617,
											"end": 18733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18739,
											"end": 18872,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 18739,
											"end": 18872,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18782,
											"end": 18787,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18820,
											"end": 18826,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18807,
											"end": 18827,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 18798,
											"end": 18827,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18798,
											"end": 18827,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18836,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 18860,
											"end": 18865,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18836,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 18836,
											"end": 18866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18836,
											"end": 18866,
											"name": "tag",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 18836,
											"end": 18866,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18739,
											"end": 18872,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18739,
											"end": 18872,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18739,
											"end": 18872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18739,
											"end": 18872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18739,
											"end": 18872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18878,
											"end": 19346,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 18878,
											"end": 19346,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18943,
											"end": 18949,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18951,
											"end": 18957,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19000,
											"end": 19002,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 18988,
											"end": 18997,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18979,
											"end": 18986,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 18975,
											"end": 18998,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 18971,
											"end": 19003,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 18968,
											"end": 19087,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18968,
											"end": 19087,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 18968,
											"end": 19087,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19006,
											"end": 19085,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 19006,
											"end": 19085,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 19006,
											"end": 19085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19006,
											"end": 19085,
											"name": "tag",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 19006,
											"end": 19085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18968,
											"end": 19087,
											"name": "tag",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 18968,
											"end": 19087,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19126,
											"end": 19127,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19151,
											"end": 19204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 19196,
											"end": 19203,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19187,
											"end": 19193,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19176,
											"end": 19185,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19172,
											"end": 19194,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19151,
											"end": 19204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 19151,
											"end": 19204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19151,
											"end": 19204,
											"name": "tag",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 19151,
											"end": 19204,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19141,
											"end": 19204,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19141,
											"end": 19204,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19097,
											"end": 19214,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19253,
											"end": 19255,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19279,
											"end": 19329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 19321,
											"end": 19328,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19312,
											"end": 19318,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19301,
											"end": 19310,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19297,
											"end": 19319,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19279,
											"end": 19329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 19279,
											"end": 19329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19279,
											"end": 19329,
											"name": "tag",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 19279,
											"end": 19329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19269,
											"end": 19329,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19269,
											"end": 19329,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19224,
											"end": 19339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18878,
											"end": 19346,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18878,
											"end": 19346,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18878,
											"end": 19346,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18878,
											"end": 19346,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18878,
											"end": 19346,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18878,
											"end": 19346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19352,
											"end": 19826,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 19352,
											"end": 19826,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19420,
											"end": 19426,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19428,
											"end": 19434,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19477,
											"end": 19479,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 19465,
											"end": 19474,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19456,
											"end": 19463,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19452,
											"end": 19475,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19448,
											"end": 19480,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 19445,
											"end": 19564,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 19445,
											"end": 19564,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "613"
										},
										{
											"begin": 19445,
											"end": 19564,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19483,
											"end": 19562,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 19483,
											"end": 19562,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 19483,
											"end": 19562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19483,
											"end": 19562,
											"name": "tag",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 19483,
											"end": 19562,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19445,
											"end": 19564,
											"name": "tag",
											"source": 15,
											"value": "613"
										},
										{
											"begin": 19445,
											"end": 19564,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19603,
											"end": 19604,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19628,
											"end": 19681,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 19673,
											"end": 19680,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19664,
											"end": 19670,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19653,
											"end": 19662,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19649,
											"end": 19671,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19628,
											"end": 19681,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 19628,
											"end": 19681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19628,
											"end": 19681,
											"name": "tag",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 19628,
											"end": 19681,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19618,
											"end": 19681,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19618,
											"end": 19681,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19574,
											"end": 19691,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19730,
											"end": 19732,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19756,
											"end": 19809,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 19801,
											"end": 19808,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19792,
											"end": 19798,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19781,
											"end": 19790,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19777,
											"end": 19799,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19756,
											"end": 19809,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 19756,
											"end": 19809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19756,
											"end": 19809,
											"name": "tag",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 19756,
											"end": 19809,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19746,
											"end": 19809,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19746,
											"end": 19809,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19701,
											"end": 19819,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19352,
											"end": 19826,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19352,
											"end": 19826,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19352,
											"end": 19826,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19352,
											"end": 19826,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19352,
											"end": 19826,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19352,
											"end": 19826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19832,
											"end": 20921,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 19832,
											"end": 20921,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19936,
											"end": 19942,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19944,
											"end": 19950,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19952,
											"end": 19958,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19960,
											"end": 19966,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19968,
											"end": 19974,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20017,
											"end": 20020,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 20005,
											"end": 20014,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19996,
											"end": 20003,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 19992,
											"end": 20015,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19988,
											"end": 20021,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 19985,
											"end": 20105,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 19985,
											"end": 20105,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "618"
										},
										{
											"begin": 19985,
											"end": 20105,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20024,
											"end": 20103,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 20024,
											"end": 20103,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 20024,
											"end": 20103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20024,
											"end": 20103,
											"name": "tag",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 20024,
											"end": 20103,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19985,
											"end": 20105,
											"name": "tag",
											"source": 15,
											"value": "618"
										},
										{
											"begin": 19985,
											"end": 20105,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20144,
											"end": 20145,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20169,
											"end": 20222,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 20214,
											"end": 20221,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 20205,
											"end": 20211,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20194,
											"end": 20203,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20190,
											"end": 20212,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20169,
											"end": 20222,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 20169,
											"end": 20222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20169,
											"end": 20222,
											"name": "tag",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 20169,
											"end": 20222,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20159,
											"end": 20222,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 20159,
											"end": 20222,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20115,
											"end": 20232,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20271,
											"end": 20273,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20297,
											"end": 20350,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "621"
										},
										{
											"begin": 20342,
											"end": 20349,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 20333,
											"end": 20339,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20322,
											"end": 20331,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20318,
											"end": 20340,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20297,
											"end": 20350,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 20297,
											"end": 20350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20297,
											"end": 20350,
											"name": "tag",
											"source": 15,
											"value": "621"
										},
										{
											"begin": 20297,
											"end": 20350,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20287,
											"end": 20350,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 20287,
											"end": 20350,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20242,
											"end": 20360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20399,
											"end": 20401,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 20425,
											"end": 20478,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "622"
										},
										{
											"begin": 20470,
											"end": 20477,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 20461,
											"end": 20467,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20450,
											"end": 20459,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20446,
											"end": 20468,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20425,
											"end": 20478,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 20425,
											"end": 20478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20425,
											"end": 20478,
											"name": "tag",
											"source": 15,
											"value": "622"
										},
										{
											"begin": 20425,
											"end": 20478,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20415,
											"end": 20478,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 20415,
											"end": 20478,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20370,
											"end": 20488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20527,
											"end": 20529,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 20553,
											"end": 20606,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 20598,
											"end": 20605,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 20589,
											"end": 20595,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20578,
											"end": 20587,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20574,
											"end": 20596,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20553,
											"end": 20606,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 20553,
											"end": 20606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20553,
											"end": 20606,
											"name": "tag",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 20553,
											"end": 20606,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20543,
											"end": 20606,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20543,
											"end": 20606,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20498,
											"end": 20616,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20683,
											"end": 20686,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 20672,
											"end": 20681,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 20668,
											"end": 20687,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20655,
											"end": 20688,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 20715,
											"end": 20733,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20707,
											"end": 20713,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20704,
											"end": 20734,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 20701,
											"end": 20818,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20701,
											"end": 20818,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 20701,
											"end": 20818,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20737,
											"end": 20816,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 20737,
											"end": 20816,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 20737,
											"end": 20816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20737,
											"end": 20816,
											"name": "tag",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 20737,
											"end": 20816,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20701,
											"end": 20818,
											"name": "tag",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 20701,
											"end": 20818,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20842,
											"end": 20904,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "626"
										},
										{
											"begin": 20896,
											"end": 20903,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 20887,
											"end": 20893,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20876,
											"end": 20885,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20872,
											"end": 20894,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20842,
											"end": 20904,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 20842,
											"end": 20904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20842,
											"end": 20904,
											"name": "tag",
											"source": 15,
											"value": "626"
										},
										{
											"begin": 20842,
											"end": 20904,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20832,
											"end": 20904,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20832,
											"end": 20904,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20626,
											"end": 20914,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19832,
											"end": 20921,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19832,
											"end": 20921,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 19832,
											"end": 20921,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19832,
											"end": 20921,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19832,
											"end": 20921,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 19832,
											"end": 20921,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19832,
											"end": 20921,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 19832,
											"end": 20921,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19832,
											"end": 20921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20927,
											"end": 21256,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 20927,
											"end": 21256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20986,
											"end": 20992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21035,
											"end": 21037,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21023,
											"end": 21032,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21014,
											"end": 21021,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21010,
											"end": 21033,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 21006,
											"end": 21038,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 21003,
											"end": 21122,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 21003,
											"end": 21122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "628"
										},
										{
											"begin": 21003,
											"end": 21122,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 21041,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "629"
										},
										{
											"begin": 21041,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 21041,
											"end": 21120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21041,
											"end": 21120,
											"name": "tag",
											"source": 15,
											"value": "629"
										},
										{
											"begin": 21041,
											"end": 21120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21003,
											"end": 21122,
											"name": "tag",
											"source": 15,
											"value": "628"
										},
										{
											"begin": 21003,
											"end": 21122,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21161,
											"end": 21162,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21186,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 21231,
											"end": 21238,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21222,
											"end": 21228,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21211,
											"end": 21220,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21207,
											"end": 21229,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21186,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 21186,
											"end": 21239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21186,
											"end": 21239,
											"name": "tag",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 21186,
											"end": 21239,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21176,
											"end": 21239,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21176,
											"end": 21239,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21132,
											"end": 21249,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20927,
											"end": 21256,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20927,
											"end": 21256,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20927,
											"end": 21256,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20927,
											"end": 21256,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20927,
											"end": 21256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21262,
											"end": 21442,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 21262,
											"end": 21442,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21310,
											"end": 21387,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21307,
											"end": 21308,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21300,
											"end": 21388,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21407,
											"end": 21411,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 21404,
											"end": 21405,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 21397,
											"end": 21412,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21431,
											"end": 21435,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 21428,
											"end": 21429,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21421,
											"end": 21436,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 21448,
											"end": 21768,
											"name": "tag",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 21448,
											"end": 21768,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21492,
											"end": 21498,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21529,
											"end": 21530,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 21523,
											"end": 21527,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21519,
											"end": 21531,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 21509,
											"end": 21531,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21509,
											"end": 21531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21576,
											"end": 21577,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 21570,
											"end": 21574,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21566,
											"end": 21578,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 21597,
											"end": 21615,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 21587,
											"end": 21668,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "633"
										},
										{
											"begin": 21587,
											"end": 21668,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 21653,
											"end": 21657,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 21645,
											"end": 21651,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21641,
											"end": 21658,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 21631,
											"end": 21658,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21631,
											"end": 21658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21587,
											"end": 21668,
											"name": "tag",
											"source": 15,
											"value": "633"
										},
										{
											"begin": 21587,
											"end": 21668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21715,
											"end": 21717,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21707,
											"end": 21713,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21704,
											"end": 21718,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 21684,
											"end": 21702,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21681,
											"end": 21719,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 21678,
											"end": 21762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "634"
										},
										{
											"begin": 21678,
											"end": 21762,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 21734,
											"end": 21752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 21734,
											"end": 21752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 21734,
											"end": 21752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21734,
											"end": 21752,
											"name": "tag",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 21734,
											"end": 21752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21678,
											"end": 21762,
											"name": "tag",
											"source": 15,
											"value": "634"
										},
										{
											"begin": 21678,
											"end": 21762,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21499,
											"end": 21768,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21448,
											"end": 21768,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21448,
											"end": 21768,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21448,
											"end": 21768,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21448,
											"end": 21768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21774,
											"end": 22106,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 21774,
											"end": 22106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21895,
											"end": 21899,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21933,
											"end": 21935,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 21922,
											"end": 21931,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21918,
											"end": 21936,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21910,
											"end": 21936,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21910,
											"end": 21936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21946,
											"end": 22017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "637"
										},
										{
											"begin": 22014,
											"end": 22015,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22003,
											"end": 22012,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21999,
											"end": 22016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21990,
											"end": 21996,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21946,
											"end": 22017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 21946,
											"end": 22017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21946,
											"end": 22017,
											"name": "tag",
											"source": 15,
											"value": "637"
										},
										{
											"begin": 21946,
											"end": 22017,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22027,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "638"
										},
										{
											"begin": 22095,
											"end": 22097,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22084,
											"end": 22093,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22080,
											"end": 22098,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22071,
											"end": 22077,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22027,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 22027,
											"end": 22099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22027,
											"end": 22099,
											"name": "tag",
											"source": 15,
											"value": "638"
										},
										{
											"begin": 22027,
											"end": 22099,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21774,
											"end": 22106,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 21774,
											"end": 22106,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21774,
											"end": 22106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21774,
											"end": 22106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21774,
											"end": 22106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21774,
											"end": 22106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22112,
											"end": 22444,
											"name": "tag",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 22112,
											"end": 22444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22233,
											"end": 22237,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22271,
											"end": 22273,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 22260,
											"end": 22269,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22256,
											"end": 22274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22248,
											"end": 22274,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22248,
											"end": 22274,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22284,
											"end": 22355,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "640"
										},
										{
											"begin": 22352,
											"end": 22353,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22341,
											"end": 22350,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22337,
											"end": 22354,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22328,
											"end": 22334,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22284,
											"end": 22355,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 22284,
											"end": 22355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22284,
											"end": 22355,
											"name": "tag",
											"source": 15,
											"value": "640"
										},
										{
											"begin": 22284,
											"end": 22355,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22365,
											"end": 22437,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "641"
										},
										{
											"begin": 22433,
											"end": 22435,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22422,
											"end": 22431,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22418,
											"end": 22436,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22409,
											"end": 22415,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22365,
											"end": 22437,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 22365,
											"end": 22437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22365,
											"end": 22437,
											"name": "tag",
											"source": 15,
											"value": "641"
										},
										{
											"begin": 22365,
											"end": 22437,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22112,
											"end": 22444,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 22112,
											"end": 22444,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 22112,
											"end": 22444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22112,
											"end": 22444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22112,
											"end": 22444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22112,
											"end": 22444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22450,
											"end": 22630,
											"name": "tag",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 22450,
											"end": 22630,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22498,
											"end": 22575,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22495,
											"end": 22496,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22488,
											"end": 22576,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22595,
											"end": 22599,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 22592,
											"end": 22593,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 22585,
											"end": 22600,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22619,
											"end": 22623,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 22616,
											"end": 22617,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22609,
											"end": 22624,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 22636,
											"end": 22777,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 22636,
											"end": 22777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22685,
											"end": 22689,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22708,
											"end": 22711,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22700,
											"end": 22711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22700,
											"end": 22711,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22731,
											"end": 22734,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22728,
											"end": 22729,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22721,
											"end": 22735,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22765,
											"end": 22769,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22762,
											"end": 22763,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22752,
											"end": 22770,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 22744,
											"end": 22770,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22744,
											"end": 22770,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22636,
											"end": 22777,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22636,
											"end": 22777,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22636,
											"end": 22777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22636,
											"end": 22777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 22876,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 22783,
											"end": 22876,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22820,
											"end": 22826,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22867,
											"end": 22869,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22862,
											"end": 22864,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 22855,
											"end": 22860,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22851,
											"end": 22865,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22847,
											"end": 22870,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 22837,
											"end": 22870,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22837,
											"end": 22870,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 22876,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 22876,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 22876,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22783,
											"end": 22876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22882,
											"end": 22989,
											"name": "tag",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 22882,
											"end": 22989,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22926,
											"end": 22934,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22976,
											"end": 22981,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22970,
											"end": 22974,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22966,
											"end": 22982,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 22945,
											"end": 22982,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22945,
											"end": 22982,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22882,
											"end": 22989,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 22882,
											"end": 22989,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22882,
											"end": 22989,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22882,
											"end": 22989,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22882,
											"end": 22989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22995,
											"end": 23388,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 22995,
											"end": 23388,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23064,
											"end": 23070,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23114,
											"end": 23115,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 23102,
											"end": 23112,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23098,
											"end": 23116,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 23137,
											"end": 23234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "647"
										},
										{
											"begin": 23167,
											"end": 23233,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23156,
											"end": 23165,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23137,
											"end": 23234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 23137,
											"end": 23234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23137,
											"end": 23234,
											"name": "tag",
											"source": 15,
											"value": "647"
										},
										{
											"begin": 23137,
											"end": 23234,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23255,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "648"
										},
										{
											"begin": 23285,
											"end": 23293,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 23274,
											"end": 23283,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23255,
											"end": 23294,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 23255,
											"end": 23294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23255,
											"end": 23294,
											"name": "tag",
											"source": 15,
											"value": "648"
										},
										{
											"begin": 23255,
											"end": 23294,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23243,
											"end": 23294,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 23243,
											"end": 23294,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23327,
											"end": 23331,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 23323,
											"end": 23332,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 23316,
											"end": 23321,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23312,
											"end": 23333,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 23303,
											"end": 23333,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 23303,
											"end": 23333,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23376,
											"end": 23380,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 23366,
											"end": 23374,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 23362,
											"end": 23381,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 23355,
											"end": 23360,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23352,
											"end": 23382,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 23342,
											"end": 23382,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23342,
											"end": 23382,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23071,
											"end": 23388,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23071,
											"end": 23388,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22995,
											"end": 23388,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 22995,
											"end": 23388,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 22995,
											"end": 23388,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22995,
											"end": 23388,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22995,
											"end": 23388,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22995,
											"end": 23388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23394,
											"end": 23454,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 23394,
											"end": 23454,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23422,
											"end": 23425,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23443,
											"end": 23448,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23436,
											"end": 23448,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23436,
											"end": 23448,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23394,
											"end": 23454,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23394,
											"end": 23454,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23394,
											"end": 23454,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23394,
											"end": 23454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23460,
											"end": 23602,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 23460,
											"end": 23602,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23510,
											"end": 23519,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23543,
											"end": 23596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "651"
										},
										{
											"begin": 23561,
											"end": 23595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "652"
										},
										{
											"begin": 23570,
											"end": 23594,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "653"
										},
										{
											"begin": 23588,
											"end": 23593,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23570,
											"end": 23594,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 23570,
											"end": 23594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23570,
											"end": 23594,
											"name": "tag",
											"source": 15,
											"value": "653"
										},
										{
											"begin": 23570,
											"end": 23594,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23561,
											"end": 23595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 23561,
											"end": 23595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23561,
											"end": 23595,
											"name": "tag",
											"source": 15,
											"value": "652"
										},
										{
											"begin": 23561,
											"end": 23595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23543,
											"end": 23596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 23543,
											"end": 23596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23543,
											"end": 23596,
											"name": "tag",
											"source": 15,
											"value": "651"
										},
										{
											"begin": 23543,
											"end": 23596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23530,
											"end": 23596,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23530,
											"end": 23596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23460,
											"end": 23602,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23460,
											"end": 23602,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23460,
											"end": 23602,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23460,
											"end": 23602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23608,
											"end": 23683,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 23608,
											"end": 23683,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23651,
											"end": 23654,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23672,
											"end": 23677,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23665,
											"end": 23677,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23665,
											"end": 23677,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23608,
											"end": 23683,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23608,
											"end": 23683,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23608,
											"end": 23683,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23608,
											"end": 23683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23689,
											"end": 23958,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 23689,
											"end": 23958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23799,
											"end": 23838,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "656"
										},
										{
											"begin": 23830,
											"end": 23837,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23799,
											"end": 23838,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 23799,
											"end": 23838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23799,
											"end": 23838,
											"name": "tag",
											"source": 15,
											"value": "656"
										},
										{
											"begin": 23799,
											"end": 23838,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23860,
											"end": 23951,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "657"
										},
										{
											"begin": 23909,
											"end": 23950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "658"
										},
										{
											"begin": 23933,
											"end": 23949,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23909,
											"end": 23950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 23909,
											"end": 23950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23909,
											"end": 23950,
											"name": "tag",
											"source": 15,
											"value": "658"
										},
										{
											"begin": 23909,
											"end": 23950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23901,
											"end": 23907,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23894,
											"end": 23898,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23888,
											"end": 23899,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 23860,
											"end": 23951,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 23860,
											"end": 23951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23860,
											"end": 23951,
											"name": "tag",
											"source": 15,
											"value": "657"
										},
										{
											"begin": 23860,
											"end": 23951,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23854,
											"end": 23858,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23847,
											"end": 23952,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 23765,
											"end": 23958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23689,
											"end": 23958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23689,
											"end": 23958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23689,
											"end": 23958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23689,
											"end": 23958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23964,
											"end": 24037,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 23964,
											"end": 24037,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24009,
											"end": 24012,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23964,
											"end": 24037,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23964,
											"end": 24037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24043,
											"end": 24232,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 24043,
											"end": 24232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24120,
											"end": 24152,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "661"
										},
										{
											"begin": 24120,
											"end": 24152,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 24120,
											"end": 24152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24120,
											"end": 24152,
											"name": "tag",
											"source": 15,
											"value": "661"
										},
										{
											"begin": 24120,
											"end": 24152,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24161,
											"end": 24226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "662"
										},
										{
											"begin": 24219,
											"end": 24225,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24211,
											"end": 24217,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24205,
											"end": 24209,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24161,
											"end": 24226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 24161,
											"end": 24226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24161,
											"end": 24226,
											"name": "tag",
											"source": 15,
											"value": "662"
										},
										{
											"begin": 24161,
											"end": 24226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24096,
											"end": 24232,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24043,
											"end": 24232,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24043,
											"end": 24232,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24043,
											"end": 24232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24238,
											"end": 24424,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 24238,
											"end": 24424,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24298,
											"end": 24418,
											"name": "tag",
											"source": 15,
											"value": "664"
										},
										{
											"begin": 24298,
											"end": 24418,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24315,
											"end": 24318,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24308,
											"end": 24313,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24305,
											"end": 24319,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 24298,
											"end": 24418,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 24298,
											"end": 24418,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "666"
										},
										{
											"begin": 24298,
											"end": 24418,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 24369,
											"end": 24408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 24406,
											"end": 24407,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24399,
											"end": 24404,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24369,
											"end": 24408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 24369,
											"end": 24408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24369,
											"end": 24408,
											"name": "tag",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 24369,
											"end": 24408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24342,
											"end": 24343,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 24335,
											"end": 24340,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24331,
											"end": 24344,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24322,
											"end": 24344,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24322,
											"end": 24344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24298,
											"end": 24418,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "664"
										},
										{
											"begin": 24298,
											"end": 24418,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24298,
											"end": 24418,
											"name": "tag",
											"source": 15,
											"value": "666"
										},
										{
											"begin": 24298,
											"end": 24418,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24238,
											"end": 24424,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24238,
											"end": 24424,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24238,
											"end": 24424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24430,
											"end": 24973,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 24430,
											"end": 24973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24531,
											"end": 24533,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 24526,
											"end": 24529,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24523,
											"end": 24534,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 24520,
											"end": 24966,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 24520,
											"end": 24966,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "669"
										},
										{
											"begin": 24520,
											"end": 24966,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 24565,
											"end": 24603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "670"
										},
										{
											"begin": 24597,
											"end": 24602,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24565,
											"end": 24603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 24565,
											"end": 24603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24565,
											"end": 24603,
											"name": "tag",
											"source": 15,
											"value": "670"
										},
										{
											"begin": 24565,
											"end": 24603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24649,
											"end": 24678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "671"
										},
										{
											"begin": 24667,
											"end": 24677,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24649,
											"end": 24678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 24649,
											"end": 24678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24649,
											"end": 24678,
											"name": "tag",
											"source": 15,
											"value": "671"
										},
										{
											"begin": 24649,
											"end": 24678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24639,
											"end": 24647,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24635,
											"end": 24679,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24832,
											"end": 24834,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 24820,
											"end": 24830,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 24817,
											"end": 24835,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 24814,
											"end": 24863,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 24814,
											"end": 24863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "672"
										},
										{
											"begin": 24814,
											"end": 24863,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 24853,
											"end": 24861,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24838,
											"end": 24861,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24838,
											"end": 24861,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24814,
											"end": 24863,
											"name": "tag",
											"source": 15,
											"value": "672"
										},
										{
											"begin": 24814,
											"end": 24863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24876,
											"end": 24956,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "673"
										},
										{
											"begin": 24932,
											"end": 24954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "674"
										},
										{
											"begin": 24950,
											"end": 24953,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 24932,
											"end": 24954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 24932,
											"end": 24954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24932,
											"end": 24954,
											"name": "tag",
											"source": 15,
											"value": "674"
										},
										{
											"begin": 24932,
											"end": 24954,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24922,
											"end": 24930,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24918,
											"end": 24955,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24905,
											"end": 24916,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24876,
											"end": 24956,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 24876,
											"end": 24956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24876,
											"end": 24956,
											"name": "tag",
											"source": 15,
											"value": "673"
										},
										{
											"begin": 24876,
											"end": 24956,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24535,
											"end": 24966,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24535,
											"end": 24966,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24520,
											"end": 24966,
											"name": "tag",
											"source": 15,
											"value": "669"
										},
										{
											"begin": 24520,
											"end": 24966,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24430,
											"end": 24973,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24430,
											"end": 24973,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24430,
											"end": 24973,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24430,
											"end": 24973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24979,
											"end": 25096,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 24979,
											"end": 25096,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25033,
											"end": 25041,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25083,
											"end": 25088,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25077,
											"end": 25081,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25073,
											"end": 25089,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 25052,
											"end": 25089,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25052,
											"end": 25089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24979,
											"end": 25096,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 24979,
											"end": 25096,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24979,
											"end": 25096,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24979,
											"end": 25096,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24979,
											"end": 25096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25102,
											"end": 25271,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 25102,
											"end": 25271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25146,
											"end": 25152,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25179,
											"end": 25230,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "677"
										},
										{
											"begin": 25227,
											"end": 25228,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25223,
											"end": 25229,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 25215,
											"end": 25220,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 25212,
											"end": 25213,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 25208,
											"end": 25221,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 25179,
											"end": 25230,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 25179,
											"end": 25230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25179,
											"end": 25230,
											"name": "tag",
											"source": 15,
											"value": "677"
										},
										{
											"begin": 25179,
											"end": 25230,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25175,
											"end": 25231,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 25260,
											"end": 25264,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 25254,
											"end": 25258,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25250,
											"end": 25265,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 25240,
											"end": 25265,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25240,
											"end": 25265,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25153,
											"end": 25271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25102,
											"end": 25271,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 25102,
											"end": 25271,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25102,
											"end": 25271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25102,
											"end": 25271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25102,
											"end": 25271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25276,
											"end": 25571,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 25276,
											"end": 25571,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25352,
											"end": 25356,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25498,
											"end": 25527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "679"
										},
										{
											"begin": 25523,
											"end": 25526,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25517,
											"end": 25521,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25498,
											"end": 25527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 25498,
											"end": 25527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25498,
											"end": 25527,
											"name": "tag",
											"source": 15,
											"value": "679"
										},
										{
											"begin": 25498,
											"end": 25527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25490,
											"end": 25527,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25490,
											"end": 25527,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25560,
											"end": 25563,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25557,
											"end": 25558,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 25553,
											"end": 25564,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 25547,
											"end": 25551,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25544,
											"end": 25565,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 25536,
											"end": 25565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25536,
											"end": 25565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25276,
											"end": 25571,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 25276,
											"end": 25571,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25276,
											"end": 25571,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25276,
											"end": 25571,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25276,
											"end": 25571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25576,
											"end": 26971,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 25576,
											"end": 26971,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25693,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "681"
										},
										{
											"begin": 25726,
											"end": 25729,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25693,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 25693,
											"end": 25730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25693,
											"end": 25730,
											"name": "tag",
											"source": 15,
											"value": "681"
										},
										{
											"begin": 25693,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25795,
											"end": 25813,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25787,
											"end": 25793,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25784,
											"end": 25814,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 25781,
											"end": 25837,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 25781,
											"end": 25837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "682"
										},
										{
											"begin": 25781,
											"end": 25837,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 25817,
											"end": 25835,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 25817,
											"end": 25835,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 25817,
											"end": 25835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25817,
											"end": 25835,
											"name": "tag",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 25817,
											"end": 25835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25781,
											"end": 25837,
											"name": "tag",
											"source": 15,
											"value": "682"
										},
										{
											"begin": 25781,
											"end": 25837,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25861,
											"end": 25899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "684"
										},
										{
											"begin": 25893,
											"end": 25897,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25887,
											"end": 25898,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 25861,
											"end": 25899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 25861,
											"end": 25899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25861,
											"end": 25899,
											"name": "tag",
											"source": 15,
											"value": "684"
										},
										{
											"begin": 25861,
											"end": 25899,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25946,
											"end": 26013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "685"
										},
										{
											"begin": 26006,
											"end": 26012,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25998,
											"end": 26004,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25992,
											"end": 25996,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 25946,
											"end": 26013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 25946,
											"end": 26013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25946,
											"end": 26013,
											"name": "tag",
											"source": 15,
											"value": "685"
										},
										{
											"begin": 25946,
											"end": 26013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26040,
											"end": 26041,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26064,
											"end": 26068,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26051,
											"end": 26068,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26051,
											"end": 26068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26096,
											"end": 26098,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 26088,
											"end": 26094,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26085,
											"end": 26099,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 26113,
											"end": 26114,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 26108,
											"end": 26726,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26108,
											"end": 26726,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 26108,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "687"
										},
										{
											"begin": 26108,
											"end": 26726,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 26770,
											"end": 26771,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26787,
											"end": 26793,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26784,
											"end": 26861,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 26784,
											"end": 26861,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "688"
										},
										{
											"begin": 26784,
											"end": 26861,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 26836,
											"end": 26845,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26831,
											"end": 26834,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 26827,
											"end": 26846,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26821,
											"end": 26847,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 26812,
											"end": 26847,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26812,
											"end": 26847,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26784,
											"end": 26861,
											"name": "tag",
											"source": 15,
											"value": "688"
										},
										{
											"begin": 26784,
											"end": 26861,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26887,
											"end": 26954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "689"
										},
										{
											"begin": 26947,
											"end": 26953,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 26940,
											"end": 26945,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26887,
											"end": 26954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 26887,
											"end": 26954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26887,
											"end": 26954,
											"name": "tag",
											"source": 15,
											"value": "689"
										},
										{
											"begin": 26887,
											"end": 26954,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26881,
											"end": 26885,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 26874,
											"end": 26955,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 26743,
											"end": 26965,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26078,
											"end": 26965,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 26078,
											"end": 26965,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26108,
											"end": 26726,
											"name": "tag",
											"source": 15,
											"value": "687"
										},
										{
											"begin": 26108,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26160,
											"end": 26164,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 26156,
											"end": 26165,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 26148,
											"end": 26154,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26144,
											"end": 26166,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 26194,
											"end": 26231,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "690"
										},
										{
											"begin": 26226,
											"end": 26230,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 26194,
											"end": 26231,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 26194,
											"end": 26231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26194,
											"end": 26231,
											"name": "tag",
											"source": 15,
											"value": "690"
										},
										{
											"begin": 26194,
											"end": 26231,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26253,
											"end": 26254,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26267,
											"end": 26475,
											"name": "tag",
											"source": 15,
											"value": "691"
										},
										{
											"begin": 26267,
											"end": 26475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26281,
											"end": 26288,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26278,
											"end": 26279,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26275,
											"end": 26289,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 26267,
											"end": 26475,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 26267,
											"end": 26475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "693"
										},
										{
											"begin": 26267,
											"end": 26475,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 26360,
											"end": 26369,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26355,
											"end": 26358,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 26351,
											"end": 26370,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26345,
											"end": 26371,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 26337,
											"end": 26343,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26330,
											"end": 26372,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 26411,
											"end": 26412,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 26403,
											"end": 26409,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26399,
											"end": 26413,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26389,
											"end": 26413,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26389,
											"end": 26413,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26458,
											"end": 26460,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26447,
											"end": 26456,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 26443,
											"end": 26461,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26430,
											"end": 26461,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 26430,
											"end": 26461,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26304,
											"end": 26308,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26301,
											"end": 26302,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26297,
											"end": 26309,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26292,
											"end": 26309,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26292,
											"end": 26309,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26267,
											"end": 26475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "691"
										},
										{
											"begin": 26267,
											"end": 26475,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26267,
											"end": 26475,
											"name": "tag",
											"source": 15,
											"value": "693"
										},
										{
											"begin": 26267,
											"end": 26475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26503,
											"end": 26509,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 26494,
											"end": 26501,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26491,
											"end": 26510,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 26488,
											"end": 26667,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 26488,
											"end": 26667,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "694"
										},
										{
											"begin": 26488,
											"end": 26667,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 26561,
											"end": 26570,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26556,
											"end": 26559,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 26552,
											"end": 26571,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26546,
											"end": 26572,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 26604,
											"end": 26652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "695"
										},
										{
											"begin": 26646,
											"end": 26650,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 26638,
											"end": 26644,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 26634,
											"end": 26651,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 26623,
											"end": 26632,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26604,
											"end": 26652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 26604,
											"end": 26652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26604,
											"end": 26652,
											"name": "tag",
											"source": 15,
											"value": "695"
										},
										{
											"begin": 26604,
											"end": 26652,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26596,
											"end": 26602,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26589,
											"end": 26653,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 26511,
											"end": 26667,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26488,
											"end": 26667,
											"name": "tag",
											"source": 15,
											"value": "694"
										},
										{
											"begin": 26488,
											"end": 26667,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26713,
											"end": 26714,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 26709,
											"end": 26710,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 26701,
											"end": 26707,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 26697,
											"end": 26711,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 26693,
											"end": 26715,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26687,
											"end": 26691,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 26680,
											"end": 26716,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 26115,
											"end": 26726,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26115,
											"end": 26726,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26115,
											"end": 26726,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26078,
											"end": 26965,
											"name": "tag",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 26078,
											"end": 26965,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26078,
											"end": 26965,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25668,
											"end": 26971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25668,
											"end": 26971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25668,
											"end": 26971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25576,
											"end": 26971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25576,
											"end": 26971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25576,
											"end": 26971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26977,
											"end": 27075,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 26977,
											"end": 27075,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27028,
											"end": 27034,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27062,
											"end": 27067,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27056,
											"end": 27068,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 27046,
											"end": 27068,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27046,
											"end": 27068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26977,
											"end": 27075,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26977,
											"end": 27075,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26977,
											"end": 27075,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26977,
											"end": 27075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27081,
											"end": 27249,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 27081,
											"end": 27249,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27164,
											"end": 27175,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27198,
											"end": 27204,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27193,
											"end": 27196,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27186,
											"end": 27205,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 27238,
											"end": 27242,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27233,
											"end": 27236,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27229,
											"end": 27243,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27214,
											"end": 27243,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27214,
											"end": 27243,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27081,
											"end": 27249,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 27081,
											"end": 27249,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27081,
											"end": 27249,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27081,
											"end": 27249,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27081,
											"end": 27249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27255,
											"end": 27628,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 27255,
											"end": 27628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27341,
											"end": 27344,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27369,
											"end": 27407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "699"
										},
										{
											"begin": 27401,
											"end": 27406,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27369,
											"end": 27407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 27369,
											"end": 27407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27369,
											"end": 27407,
											"name": "tag",
											"source": 15,
											"value": "699"
										},
										{
											"begin": 27369,
											"end": 27407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27423,
											"end": 27493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "700"
										},
										{
											"begin": 27486,
											"end": 27492,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27481,
											"end": 27484,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 27423,
											"end": 27493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 27423,
											"end": 27493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27423,
											"end": 27493,
											"name": "tag",
											"source": 15,
											"value": "700"
										},
										{
											"begin": 27423,
											"end": 27493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27416,
											"end": 27493,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 27416,
											"end": 27493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27502,
											"end": 27567,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "701"
										},
										{
											"begin": 27560,
											"end": 27566,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27555,
											"end": 27558,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 27548,
											"end": 27552,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27541,
											"end": 27546,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 27537,
											"end": 27553,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27502,
											"end": 27567,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 27502,
											"end": 27567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27502,
											"end": 27567,
											"name": "tag",
											"source": 15,
											"value": "701"
										},
										{
											"begin": 27502,
											"end": 27567,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27592,
											"end": 27621,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "702"
										},
										{
											"begin": 27614,
											"end": 27620,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27592,
											"end": 27621,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 27592,
											"end": 27621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27592,
											"end": 27621,
											"name": "tag",
											"source": 15,
											"value": "702"
										},
										{
											"begin": 27592,
											"end": 27621,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27587,
											"end": 27590,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 27583,
											"end": 27622,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27576,
											"end": 27622,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27576,
											"end": 27622,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27345,
											"end": 27628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27255,
											"end": 27628,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 27255,
											"end": 27628,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27255,
											"end": 27628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27255,
											"end": 27628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27255,
											"end": 27628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27634,
											"end": 28385,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 27634,
											"end": 28385,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27857,
											"end": 27861,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27895,
											"end": 27898,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 27884,
											"end": 27893,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27880,
											"end": 27899,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27872,
											"end": 27899,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27872,
											"end": 27899,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27909,
											"end": 27980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "704"
										},
										{
											"begin": 27977,
											"end": 27978,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27966,
											"end": 27975,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27962,
											"end": 27979,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27953,
											"end": 27959,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 27909,
											"end": 27980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 27909,
											"end": 27980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27909,
											"end": 27980,
											"name": "tag",
											"source": 15,
											"value": "704"
										},
										{
											"begin": 27909,
											"end": 27980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27990,
											"end": 28062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "705"
										},
										{
											"begin": 28058,
											"end": 28060,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28047,
											"end": 28056,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28043,
											"end": 28061,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28034,
											"end": 28040,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 27990,
											"end": 28062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 27990,
											"end": 28062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27990,
											"end": 28062,
											"name": "tag",
											"source": 15,
											"value": "705"
										},
										{
											"begin": 27990,
											"end": 28062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28072,
											"end": 28144,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "706"
										},
										{
											"begin": 28140,
											"end": 28142,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 28129,
											"end": 28138,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28125,
											"end": 28143,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28116,
											"end": 28122,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 28072,
											"end": 28144,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 28072,
											"end": 28144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28072,
											"end": 28144,
											"name": "tag",
											"source": 15,
											"value": "706"
										},
										{
											"begin": 28072,
											"end": 28144,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28154,
											"end": 28226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "707"
										},
										{
											"begin": 28222,
											"end": 28224,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 28211,
											"end": 28220,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28198,
											"end": 28204,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 28154,
											"end": 28226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 28154,
											"end": 28226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28154,
											"end": 28226,
											"name": "tag",
											"source": 15,
											"value": "707"
										},
										{
											"begin": 28154,
											"end": 28226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28274,
											"end": 28283,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28268,
											"end": 28272,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28264,
											"end": 28284,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 28258,
											"end": 28261,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 28247,
											"end": 28256,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28243,
											"end": 28262,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28236,
											"end": 28285,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28302,
											"end": 28378,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "708"
										},
										{
											"begin": 28373,
											"end": 28377,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28364,
											"end": 28370,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 28302,
											"end": 28378,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 28302,
											"end": 28378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28302,
											"end": 28378,
											"name": "tag",
											"source": 15,
											"value": "708"
										},
										{
											"begin": 28302,
											"end": 28378,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28294,
											"end": 28378,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28294,
											"end": 28378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27634,
											"end": 28385,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 27634,
											"end": 28385,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 27634,
											"end": 28385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27634,
											"end": 28385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27634,
											"end": 28385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27634,
											"end": 28385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27634,
											"end": 28385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27634,
											"end": 28385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27634,
											"end": 28385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28391,
											"end": 28532,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 28391,
											"end": 28532,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28447,
											"end": 28452,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28478,
											"end": 28484,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28472,
											"end": 28485,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 28463,
											"end": 28485,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28463,
											"end": 28485,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28494,
											"end": 28526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "710"
										},
										{
											"begin": 28520,
											"end": 28525,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28494,
											"end": 28526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 28494,
											"end": 28526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28494,
											"end": 28526,
											"name": "tag",
											"source": 15,
											"value": "710"
										},
										{
											"begin": 28494,
											"end": 28526,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28391,
											"end": 28532,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 28391,
											"end": 28532,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28391,
											"end": 28532,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28391,
											"end": 28532,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28391,
											"end": 28532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28538,
											"end": 28887,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 28538,
											"end": 28887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28607,
											"end": 28613,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28656,
											"end": 28658,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28644,
											"end": 28653,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28635,
											"end": 28642,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 28631,
											"end": 28654,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 28627,
											"end": 28659,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 28624,
											"end": 28743,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 28624,
											"end": 28743,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "712"
										},
										{
											"begin": 28624,
											"end": 28743,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 28662,
											"end": 28741,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "713"
										},
										{
											"begin": 28662,
											"end": 28741,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 28662,
											"end": 28741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28662,
											"end": 28741,
											"name": "tag",
											"source": 15,
											"value": "713"
										},
										{
											"begin": 28662,
											"end": 28741,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28624,
											"end": 28743,
											"name": "tag",
											"source": 15,
											"value": "712"
										},
										{
											"begin": 28624,
											"end": 28743,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28782,
											"end": 28783,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28807,
											"end": 28870,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "714"
										},
										{
											"begin": 28862,
											"end": 28869,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 28853,
											"end": 28859,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28842,
											"end": 28851,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 28838,
											"end": 28860,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28807,
											"end": 28870,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 28807,
											"end": 28870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28807,
											"end": 28870,
											"name": "tag",
											"source": 15,
											"value": "714"
										},
										{
											"begin": 28807,
											"end": 28870,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28797,
											"end": 28870,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28797,
											"end": 28870,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28753,
											"end": 28880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28538,
											"end": 28887,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 28538,
											"end": 28887,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28538,
											"end": 28887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28538,
											"end": 28887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28538,
											"end": 28887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28893,
											"end": 29946,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 28893,
											"end": 29946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29216,
											"end": 29220,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29254,
											"end": 29257,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 29243,
											"end": 29252,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29239,
											"end": 29258,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29231,
											"end": 29258,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29231,
											"end": 29258,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29268,
											"end": 29339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "716"
										},
										{
											"begin": 29336,
											"end": 29337,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29325,
											"end": 29334,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29321,
											"end": 29338,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29312,
											"end": 29318,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 29268,
											"end": 29339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 29268,
											"end": 29339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29268,
											"end": 29339,
											"name": "tag",
											"source": 15,
											"value": "716"
										},
										{
											"begin": 29268,
											"end": 29339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29349,
											"end": 29421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "717"
										},
										{
											"begin": 29417,
											"end": 29419,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29406,
											"end": 29415,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29402,
											"end": 29420,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29393,
											"end": 29399,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 29349,
											"end": 29421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 29349,
											"end": 29421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29349,
											"end": 29421,
											"name": "tag",
											"source": 15,
											"value": "717"
										},
										{
											"begin": 29349,
											"end": 29421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29468,
											"end": 29477,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29462,
											"end": 29466,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29458,
											"end": 29478,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 29453,
											"end": 29455,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 29442,
											"end": 29451,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29438,
											"end": 29456,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29431,
											"end": 29479,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29496,
											"end": 29604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "718"
										},
										{
											"begin": 29599,
											"end": 29603,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29590,
											"end": 29596,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 29496,
											"end": 29604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 29496,
											"end": 29604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29496,
											"end": 29604,
											"name": "tag",
											"source": 15,
											"value": "718"
										},
										{
											"begin": 29496,
											"end": 29604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29488,
											"end": 29604,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29488,
											"end": 29604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29651,
											"end": 29660,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29645,
											"end": 29649,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29641,
											"end": 29661,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 29636,
											"end": 29638,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 29625,
											"end": 29634,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29621,
											"end": 29639,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29614,
											"end": 29662,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29679,
											"end": 29787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "719"
										},
										{
											"begin": 29782,
											"end": 29786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29773,
											"end": 29779,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 29679,
											"end": 29787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 29679,
											"end": 29787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29679,
											"end": 29787,
											"name": "tag",
											"source": 15,
											"value": "719"
										},
										{
											"begin": 29679,
											"end": 29787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29671,
											"end": 29787,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29671,
											"end": 29787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29835,
											"end": 29844,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29829,
											"end": 29833,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29825,
											"end": 29845,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 29819,
											"end": 29822,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 29808,
											"end": 29817,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29804,
											"end": 29823,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29797,
											"end": 29846,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29863,
											"end": 29939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "720"
										},
										{
											"begin": 29934,
											"end": 29938,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29925,
											"end": 29931,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 29863,
											"end": 29939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 29863,
											"end": 29939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29863,
											"end": 29939,
											"name": "tag",
											"source": 15,
											"value": "720"
										},
										{
											"begin": 29863,
											"end": 29939,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29855,
											"end": 29939,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29855,
											"end": 29939,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28893,
											"end": 29946,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 28893,
											"end": 29946,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 28893,
											"end": 29946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28893,
											"end": 29946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28893,
											"end": 29946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28893,
											"end": 29946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28893,
											"end": 29946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28893,
											"end": 29946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28893,
											"end": 29946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29952,
											"end": 30505,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 29952,
											"end": 30505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30129,
											"end": 30133,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30167,
											"end": 30170,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 30156,
											"end": 30165,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30152,
											"end": 30171,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30144,
											"end": 30171,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30144,
											"end": 30171,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30181,
											"end": 30252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "722"
										},
										{
											"begin": 30249,
											"end": 30250,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30238,
											"end": 30247,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30234,
											"end": 30251,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30225,
											"end": 30231,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 30181,
											"end": 30252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 30181,
											"end": 30252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30181,
											"end": 30252,
											"name": "tag",
											"source": 15,
											"value": "722"
										},
										{
											"begin": 30181,
											"end": 30252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30262,
											"end": 30334,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "723"
										},
										{
											"begin": 30330,
											"end": 30332,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30319,
											"end": 30328,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30315,
											"end": 30333,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30306,
											"end": 30312,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 30262,
											"end": 30334,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 30262,
											"end": 30334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30262,
											"end": 30334,
											"name": "tag",
											"source": 15,
											"value": "723"
										},
										{
											"begin": 30262,
											"end": 30334,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30344,
											"end": 30416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "724"
										},
										{
											"begin": 30412,
											"end": 30414,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 30401,
											"end": 30410,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30397,
											"end": 30415,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30388,
											"end": 30394,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 30344,
											"end": 30416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 30344,
											"end": 30416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30344,
											"end": 30416,
											"name": "tag",
											"source": 15,
											"value": "724"
										},
										{
											"begin": 30344,
											"end": 30416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30426,
											"end": 30498,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "725"
										},
										{
											"begin": 30494,
											"end": 30496,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 30483,
											"end": 30492,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30479,
											"end": 30497,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30470,
											"end": 30476,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 30426,
											"end": 30498,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 30426,
											"end": 30498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30426,
											"end": 30498,
											"name": "tag",
											"source": 15,
											"value": "725"
										},
										{
											"begin": 30426,
											"end": 30498,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29952,
											"end": 30505,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 29952,
											"end": 30505,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 29952,
											"end": 30505,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29952,
											"end": 30505,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29952,
											"end": 30505,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29952,
											"end": 30505,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29952,
											"end": 30505,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29952,
											"end": 30505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30511,
											"end": 30691,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 30511,
											"end": 30691,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30559,
											"end": 30636,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30556,
											"end": 30557,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30549,
											"end": 30637,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 30656,
											"end": 30660,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 30653,
											"end": 30654,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 30646,
											"end": 30661,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 30680,
											"end": 30684,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 30677,
											"end": 30678,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30670,
											"end": 30685,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 30697,
											"end": 30888,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 30697,
											"end": 30888,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30737,
											"end": 30740,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30756,
											"end": 30776,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "728"
										},
										{
											"begin": 30774,
											"end": 30775,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30756,
											"end": 30776,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 30756,
											"end": 30776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30756,
											"end": 30776,
											"name": "tag",
											"source": 15,
											"value": "728"
										},
										{
											"begin": 30756,
											"end": 30776,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30751,
											"end": 30776,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30751,
											"end": 30776,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30790,
											"end": 30810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 30808,
											"end": 30809,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30790,
											"end": 30810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 30790,
											"end": 30810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30790,
											"end": 30810,
											"name": "tag",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 30790,
											"end": 30810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30785,
											"end": 30810,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30785,
											"end": 30810,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30833,
											"end": 30834,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30830,
											"end": 30831,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30826,
											"end": 30835,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30819,
											"end": 30835,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30819,
											"end": 30835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30854,
											"end": 30857,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 30851,
											"end": 30852,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30848,
											"end": 30858,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 30845,
											"end": 30881,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 30845,
											"end": 30881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "730"
										},
										{
											"begin": 30845,
											"end": 30881,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 30861,
											"end": 30879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "731"
										},
										{
											"begin": 30861,
											"end": 30879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 30861,
											"end": 30879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30861,
											"end": 30879,
											"name": "tag",
											"source": 15,
											"value": "731"
										},
										{
											"begin": 30861,
											"end": 30879,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30845,
											"end": 30881,
											"name": "tag",
											"source": 15,
											"value": "730"
										},
										{
											"begin": 30845,
											"end": 30881,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30697,
											"end": 30888,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30697,
											"end": 30888,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30697,
											"end": 30888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30697,
											"end": 30888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30697,
											"end": 30888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30894,
											"end": 31528,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 30894,
											"end": 31528,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31115,
											"end": 31119,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31153,
											"end": 31155,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 31142,
											"end": 31151,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31138,
											"end": 31156,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31130,
											"end": 31156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31130,
											"end": 31156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31202,
											"end": 31211,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31196,
											"end": 31200,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31192,
											"end": 31212,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31188,
											"end": 31189,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31177,
											"end": 31186,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31173,
											"end": 31190,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31166,
											"end": 31213,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 31230,
											"end": 31338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "733"
										},
										{
											"begin": 31333,
											"end": 31337,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31324,
											"end": 31330,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 31230,
											"end": 31338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 31230,
											"end": 31338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31230,
											"end": 31338,
											"name": "tag",
											"source": 15,
											"value": "733"
										},
										{
											"begin": 31230,
											"end": 31338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31222,
											"end": 31338,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31222,
											"end": 31338,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31385,
											"end": 31394,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31379,
											"end": 31383,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31375,
											"end": 31395,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31370,
											"end": 31372,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31359,
											"end": 31368,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31355,
											"end": 31373,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31348,
											"end": 31396,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 31413,
											"end": 31521,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "734"
										},
										{
											"begin": 31516,
											"end": 31520,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31507,
											"end": 31513,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 31413,
											"end": 31521,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 31413,
											"end": 31521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31413,
											"end": 31521,
											"name": "tag",
											"source": 15,
											"value": "734"
										},
										{
											"begin": 31413,
											"end": 31521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31405,
											"end": 31521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31405,
											"end": 31521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30894,
											"end": 31528,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 30894,
											"end": 31528,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30894,
											"end": 31528,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30894,
											"end": 31528,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30894,
											"end": 31528,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30894,
											"end": 31528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								},
								"EAE80A2C7BF2C9D096E554E5E4405CF6AEFA68F606389F34D4CDA8A311083DED": "68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4a4c44536a722f6d657461646174615f626c6f636b636861696e2f6d61696e2f7b69647d2e6a736f6e"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":\"VoluntariadoUFV\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol\":{\"keccak256\":\"0x866feab1d0ba71404ed131a1bcea272ce84f6215da28ff91d6dc2bebb7614b66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a21bd8f0cfb2d359c09562a3e2b2cc2a80b408a90f9e9801a1b8f67a891f082c\",\"dweb:/ipfs/QmeSVGiEnDjDoBEsz1P35NwYXk8u7DMspKkLzQjavTPdqM\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol\":{\"keccak256\":\"0x46c023a746312a4e187e276b85c3ef4756938825306124b1e85441c2f407adb0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://028f5f5fa064ca7f71c0163e6874c644b8e65561ca6a4c837419b477037614f7\",\"dweb:/ipfs/QmcFnLeAYTdWTdsW8ReRX53Sk68UxKs3bbgqYs8RRHpue1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol:VoluntariadoUFV",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol:VoluntariadoUFV",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol:VoluntariadoUFV",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol:VoluntariadoUFV",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1777,
								"contract": "github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol:VoluntariadoUFV",
								"label": "_paused",
								"offset": 20,
								"slot": "3",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1768
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1769,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1768,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1768,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1768
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1750,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1738
						],
						"Context": [
							1768
						],
						"ERC1155": [
							1335
						],
						"ERC165": [
							2019
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1555
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							2031
						]
					},
					"id": 1336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1459,
							"src": "135:40:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "143:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1501,
							"src": "176:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1500,
										"src": "184:16:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1556,
							"src": "233:73:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1555,
										"src": "241:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1769,
							"src": "307:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1768,
										"src": "315:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 2020,
							"src": "356:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2031,
										"src": "364:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 296,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2019,
										"src": "373:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1739,
							"src": "426:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 298,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1738,
										"src": "434:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 285,
							"src": "473:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 284,
										"src": "481:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"756:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1768,
										"src": "756:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"765:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2019,
										"src": "765:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "773:8:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1555,
										"src": "783:19:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 284,
										"src": "804:14:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1335,
							"linearizedBaseContracts": [
								1335,
								284,
								1555,
								1458,
								2019,
								2031,
								1768
							],
							"name": "ERC1155",
							"nameLocation": "745:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 316,
									"libraryName": {
										"id": 313,
										"name": "Arrays",
										"nameLocations": [
											"831:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1738,
										"src": "831:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:2",
									"typeName": {
										"baseType": {
											"id": 314,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 315,
										"nodeType": "ArrayTypeName",
										"src": "842:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 320,
									"libraryName": {
										"id": 317,
										"name": "Arrays",
										"nameLocations": [
											"863:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1738,
										"src": "863:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:2",
									"typeName": {
										"baseType": {
											"id": 318,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 319,
										"nodeType": "ArrayTypeName",
										"src": "874:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "890:76:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 325,
										"keyName": "id",
										"keyNameLocation": "906:2:2",
										"keyType": {
											"id": 321,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 324,
											"keyName": "account",
											"keyNameLocation": "928:7:2",
											"keyType": {
												"id": 322,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "973:88:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 331,
										"keyName": "account",
										"keyNameLocation": "989:7:2",
										"keyType": {
											"id": 327,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 330,
											"keyName": "operator",
											"keyNameLocation": "1016:8:2",
											"keyType": {
												"id": 328,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 329,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "1182:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 333,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1283:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1301:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 340,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "1293:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:2"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 345,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:2"
									},
									"scope": 1335,
									"src": "1251:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2018,
										2030
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1488:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1517:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 358,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "1537:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 357,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1458",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1574:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 364,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1555,
																			"src": "1594:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1555_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1555_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 363,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1555",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1666:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 369,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1335_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2018,
															"src": "1642:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 355,
												"id": 374,
												"nodeType": "Return",
												"src": "1498:180:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 352,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 350,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2019,
												"src": "1456:6:2"
											},
											{
												"id": 351,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2031,
												"src": "1464:7:2"
											}
										],
										"src": "1447:25:2"
									},
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1407:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 347,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1482:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:2"
									},
									"scope": 1335,
									"src": "1380:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1554
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2159:28:2",
										"statements": [
											{
												"expression": {
													"id": 384,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "2176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 383,
												"id": 385,
												"nodeType": "Return",
												"src": "2169:11:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2097:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:2"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2144:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:2"
									},
									"scope": 1335,
									"src": "2084:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1396
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2333:46:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 397,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2350:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 399,
														"indexExpression": {
															"id": 398,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2360:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 401,
													"indexExpression": {
														"id": 400,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2364:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 402,
												"nodeType": "Return",
												"src": "2343:29:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:2",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2266:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2283:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2324:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:2"
									},
									"scope": 1335,
									"src": "2247:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2678:410:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 417,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2692:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 419,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2711:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 430,
												"nodeType": "IfStatement",
												"src": "2688:121:2",
												"trueBody": {
													"id": 429,
													"nodeType": "Block",
													"src": "2723:86:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 423,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "2770:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 425,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "2782:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 422,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "2744:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 428,
															"nodeType": "RevertStatement",
															"src": "2737:61:2"
														}
													]
												}
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "2819:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 433,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 434,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 439,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "2866:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 436,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 437,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:2"
											},
											{
												"body": {
													"id": 469,
													"nodeType": "Block",
													"src": "2939:112:2",
													"statements": [
														{
															"expression": {
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 454,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2953:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 456,
																	"indexExpression": {
																		"id": 455,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "2967:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 460,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3010:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 458,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 408,
																					"src": "2982:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1737,
																				"src": "2982:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 464,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3037:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 462,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 411,
																					"src": "3014:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1724,
																				"src": "3014:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 457,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2972:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 468,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2913:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 448,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2917:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"initializationExpression": {
													"assignments": [
														444
													],
													"declarations": [
														{
															"constant": false,
															"id": 444,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 470,
															"src": "2898:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 446,
													"initialValue": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:2",
														"subExpression": {
															"id": 451,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2936:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 453,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:2"
											},
											{
												"expression": {
													"id": 471,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "3068:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 416,
												"id": 472,
												"nodeType": "Return",
												"src": "3061:20:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2569:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 406,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 407,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2604:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2660:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 413,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 414,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:2"
									},
									"scope": 1335,
									"src": "2536:552:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1417
									],
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "3231:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "3260:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3274:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3284:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 482,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "3241:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:2"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3183:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3201:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:2"
									},
									"scope": 1335,
									"src": "3156:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1427
									],
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "3463:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 500,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3480:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 502,
														"indexExpression": {
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "3499:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 504,
													"indexExpression": {
														"id": 503,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3508:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 499,
												"id": 505,
												"nodeType": "Return",
												"src": "3473:44:2"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3393:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3410:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3457:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:2"
									},
									"scope": 1335,
									"src": "3367:157:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "3704:238:2",
										"statements": [
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "3714:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 521,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 523,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "3731:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 526,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3757:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 527,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "3765:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 530,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "3793:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 531,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "3799:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 529,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "3776:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "3753:129:2",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "3808:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 536,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "3858:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 537,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "3866:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 535,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "3829:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 539,
															"nodeType": "RevertStatement",
															"src": "3822:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3909:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3915:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "3919:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 546,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3923:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 547,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3930:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "3891:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:2"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3617:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3631:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3643:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3670:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:2"
									},
									"scope": 1335,
									"src": "3591:351:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1457
									],
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "4198:245:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "4208:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 567,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 569,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "4225:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4251:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 573,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4259:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 576,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "4287:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 577,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "4293:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 575,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "4270:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "4247:129:2",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "4302:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "4352:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 583,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "4360:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 581,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "4323:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "4316:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4408:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "4414:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "4418:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 592,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4423:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4431:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 588,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "4385:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:2"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4054:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4076:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4096:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 557,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 558,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4126:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 560,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 561,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4159:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:2"
									},
									"scope": 1335,
									"src": "4014:429:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "5251:1174:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 611,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5265:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 613,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5279:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "5261:117:2",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "5294:84:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 617,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "5341:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 619,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "5353:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 616,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "5315:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 622,
															"nodeType": "RevertStatement",
															"src": "5308:59:2"
														}
													]
												}
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "5388:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 625,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 627,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "5407:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:2"
											},
											{
												"body": {
													"id": 710,
													"nodeType": "Block",
													"src": "5471:650:2",
													"statements": [
														{
															"assignments": [
																642
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 642,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5485:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 641,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 647,
															"initialValue": {
																"arguments": [
																	{
																		"id": 645,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5521:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 643,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "5498:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1724,
																	"src": "5498:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:2"
														},
														{
															"assignments": [
																649
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 649,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5537:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 654,
															"initialValue": {
																"arguments": [
																	{
																		"id": 652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5579:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 650,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "5553:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1724,
																	"src": "5553:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 655,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "5600:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 656,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 693,
															"nodeType": "IfStatement",
															"src": "5596:420:2",
															"trueBody": {
																"id": 692,
																"nodeType": "Block",
																"src": "5620:396:2",
																"statements": [
																	{
																		"assignments": [
																			662
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 662,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 692,
																				"src": "5638:19:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 668,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 663,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 326,
																					"src": "5660:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 665,
																				"indexExpression": {
																					"id": 664,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "5670:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 667,
																			"indexExpression": {
																				"id": 666,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 600,
																				"src": "5674:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:2"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 669,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "5701:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 670,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "5715:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 680,
																		"nodeType": "IfStatement",
																		"src": "5697:129:2",
																		"trueBody": {
																			"id": 679,
																			"nodeType": "Block",
																			"src": "5722:104:2",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 673,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 600,
																								"src": "5778:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 674,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 662,
																								"src": "5784:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 675,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 649,
																								"src": "5797:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 676,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5804:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 672,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 249,
																							"src": "5751:26:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 677,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 678,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:2"
																				}
																			]
																		}
																	},
																	{
																		"id": 691,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 681,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 326,
																								"src": "5942:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 684,
																							"indexExpression": {
																								"id": 682,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5952:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 685,
																						"indexExpression": {
																							"id": 683,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 600,
																							"src": "5956:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 686,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 662,
																							"src": "5964:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 687,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 649,
																							"src": "5978:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 690,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:2"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "6034:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 695,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 709,
															"nodeType": "IfStatement",
															"src": "6030:81:2",
															"trueBody": {
																"id": 708,
																"nodeType": "Block",
																"src": "6052:59:2",
																"statements": [
																	{
																		"expression": {
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 700,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 326,
																						"src": "6070:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 703,
																					"indexExpression": {
																						"id": 701,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 642,
																						"src": "6080:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 704,
																				"indexExpression": {
																					"id": 702,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "6084:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 705,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "6091:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 707,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "5450:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 635,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5454:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"initializationExpression": {
													"assignments": [
														631
													],
													"declarations": [
														{
															"constant": false,
															"id": 631,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 711,
															"src": "5435:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 630,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 633,
													"initialValue": {
														"hexValue": "30",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:2",
														"subExpression": {
															"id": 638,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5468:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 640,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:2"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 712,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "6135:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "6343:76:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 740,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6376:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 741,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6386:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 742,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6392:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6396:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 744,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6401:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 739,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "6362:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "6357:51:2"
														}
													]
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "6131:288:2",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "6152:185:2",
													"statements": [
														{
															"assignments": [
																717
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 717,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6166:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 722,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 718,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6179:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1724,
																	"src": "6179:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:2"
														},
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6218:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 729,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 725,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6234:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1724,
																	"src": "6234:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 731,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6296:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 732,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6306:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 733,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6312:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 734,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "6316:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 735,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "6320:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 730,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "6281:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 737,
															"nodeType": "EmitStatement",
															"src": "6276:50:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5161:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5175:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5187:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 603,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 604,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5209:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 606,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 607,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:2"
									},
									"scope": 1335,
									"src": "5144:1281:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "7195:499:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "7213:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "7219:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "7223:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 770,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "7228:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 766,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "7205:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "7249:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 774,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "7245:443:2",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "7267:421:2",
													"statements": [
														{
															"assignments": [
																780
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 780,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 823,
																	"src": "7281:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 783,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 781,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1750,
																	"src": "7300:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 784,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "7330:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 821,
																"nodeType": "Block",
																"src": "7571:107:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 813,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7625:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 814,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7635:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 815,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7641:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 816,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7645:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 817,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7650:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 818,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7658:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 812,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "7589:35:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 820,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:2"
																	}
																]
															},
															"id": 822,
															"nodeType": "IfStatement",
															"src": "7326:352:2",
															"trueBody": {
																"id": 811,
																"nodeType": "Block",
																"src": "7347:218:2",
																"statements": [
																	{
																		"assignments": [
																			789
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 789,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7365:10:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 788,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 794,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 790,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7378:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1724,
																				"src": "7378:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:2"
																	},
																	{
																		"assignments": [
																			796
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 796,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7421:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 795,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 801,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 797,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7437:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1724,
																				"src": "7437:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 803,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7514:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 804,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7524:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 805,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7530:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 806,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "7534:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 807,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "7538:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 808,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7545:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 802,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1248,
																				"src": "7483:30:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 810,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:2",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7049:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7071:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7091:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 756,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 757,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7121:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 759,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 760,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7154:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:2"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:2"
									},
									"scope": 1335,
									"src": "7004:690:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "8259:355:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "8273:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "8269:88:2",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "8291:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "8312:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "RevertStatement",
															"src": "8305:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "8370:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 856,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "8366:88:2",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "8390:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 862,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 861,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8411:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "RevertStatement",
															"src": "8404:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													874,
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8464:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 872,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 873,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8486:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 875,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 876,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 882,
												"initialValue": {
													"arguments": [
														{
															"id": 879,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8532:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8536:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "8513:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 884,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "8579:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "8585:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "8589:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 887,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8594:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 888,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "8602:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 883,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "8552:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:2"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:2",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8178:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8192:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8204:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8216:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8231:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:2"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:2"
									},
									"scope": 1335,
									"src": "8151:463:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "9194:266:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 908,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "9208:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 909,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "9204:88:2",
												"trueBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "9226:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 915,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 914,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "9247:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 920,
															"nodeType": "RevertStatement",
															"src": "9240:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "9305:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 924,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "9301:88:2",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "9325:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 930,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 929,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "9346:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 935,
															"nodeType": "RevertStatement",
															"src": "9339:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9425:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "9431:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "9435:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 942,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "9440:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 943,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "9448:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "9398:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:2"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9056:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9078:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9098:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 898,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 899,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9128:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 901,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 902,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9161:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:2"
									},
									"scope": 1335,
									"src": "9015:445:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "10338:30:2",
										"statements": [
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "10348:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 954,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "10355:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:2"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "10299:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:2"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:2"
									},
									"scope": 1335,
									"src": "10282:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "10828:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "10842:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "10838:88:2",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "10860:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 977,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 976,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10881:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "10874:41:2"
														}
													]
												}
											},
											{
												"assignments": [
													989,
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10936:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 987,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 988,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10958:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 990,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 991,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "11004:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 995,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "11008:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "10985:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 999,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "11063:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "11067:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1005,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "11072:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1006,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11080:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 998,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11024:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:2"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:2",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10761:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10773:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10785:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10800:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:2"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:2"
									},
									"scope": 1335,
									"src": "10746:346:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "11630:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "11644:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "11640:88:2",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "11662:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1031,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "11683:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1036,
															"nodeType": "RevertStatement",
															"src": "11676:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1040,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "11776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "11780:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1046,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "11785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "11793:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1039,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11737:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:2"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11543:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11555:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1014,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1015,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11577:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1017,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1018,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11602:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:2"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:2"
									},
									"scope": 1335,
									"src": "11523:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "12164:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1061,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "12178:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1062,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "12174:88:2",
												"trueBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "12198:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1068,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1067,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12219:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1073,
															"nodeType": "RevertStatement",
															"src": "12212:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													1080,
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12272:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1078,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1079,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12294:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1081,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1082,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1085,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "12340:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "12344:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "12321:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "12387:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "12405:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1096,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "12410:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1089,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12360:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:2"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:2",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12114:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12128:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12140:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:2"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:2"
									},
									"scope": 1335,
									"src": "12099:329:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "12874:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "12888:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "12884:88:2",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "12908:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1120,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1119,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12929:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "RevertStatement",
															"src": "12922:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "13008:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "13026:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1135,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "13031:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1128,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12981:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:2"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12804:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12818:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1106,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12840:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:2"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:2"
									},
									"scope": 1335,
									"src": "12784:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "13361:222:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "13375:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1151,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "13371:94:2",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "13399:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1157,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1156,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "13420:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1162,
															"nodeType": "RevertStatement",
															"src": "13413:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1165,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "13474:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1168,
															"indexExpression": {
																"id": 1166,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "13493:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1169,
														"indexExpression": {
															"id": 1167,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13500:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1170,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "13512:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1174,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "13550:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13557:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13567:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1173,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "13535:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "EmitStatement",
												"src": "13530:46:2"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13296:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13311:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13329:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:2"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:2"
									},
									"scope": 1335,
									"src": "13268:315:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "13953:782:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1196,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "13967:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "13963:766:2",
												"trueBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "13987:742:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1225,
																		"nodeType": "Block",
																		"src": "14103:206:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1214,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1212,
																						"src": "14125:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1215,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "14137:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1216,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:2",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1481,
																							"src": "14137:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1224,
																				"nodeType": "IfStatement",
																				"src": "14121:174:2",
																				"trueBody": {
																					"id": 1223,
																					"nodeType": "Block",
																					"src": "14182:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1220,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14273:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1219,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14250:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1221,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1222,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1226,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1213,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1212,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1226,
																				"src": "14086:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1211,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:2"
																	},
																	"src": "14077:232:2"
																},
																{
																	"block": {
																		"id": 1242,
																		"nodeType": "Block",
																		"src": "14338:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1230,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1228,
																							"src": "14360:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1240,
																					"nodeType": "Block",
																					"src": "14515:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14601:86:2",
																								"nodeType": "YulBlock",
																								"src": "14601:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14638:2:2",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14642:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14634:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:2"
																													},
																													"nativeSrc": "14634:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14657:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14651:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:2"
																													},
																													"nativeSrc": "14651:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14627:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:2"
																											},
																											"nativeSrc": "14627:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:2"
																										},
																										"nativeSrc": "14627:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1239,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:2"
																						}
																					]
																				},
																				"id": 1241,
																				"nodeType": "IfStatement",
																				"src": "14356:349:2",
																				"trueBody": {
																					"id": 1238,
																					"nodeType": "Block",
																					"src": "14380:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1235,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14487:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1234,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14464:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1236,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1237,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1243,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1229,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1228,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1243,
																				"src": "14317:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1227,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:2"
																	},
																	"src": "14310:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "14044:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1206,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "14054:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1207,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "14060:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1208,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "14064:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1209,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "14071:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1202,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "14022:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1201,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "14005:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:2",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1481,
																	"src": "14005:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1244,
															"nodeType": "TryStatement",
															"src": "14001:718:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:2",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13810:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13836:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13858:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13878:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13898:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13921:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:2"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:2"
									},
									"scope": 1335,
									"src": "13761:974:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "15140:824:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1266,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "15154:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "15150:808:2",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "15174:784:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1295,
																		"nodeType": "Block",
																		"src": "15327:211:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1284,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1282,
																						"src": "15349:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1285,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "15361:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1286,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:2",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1499,
																							"src": "15361:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1287,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1294,
																				"nodeType": "IfStatement",
																				"src": "15345:179:2",
																				"trueBody": {
																					"id": 1293,
																					"nodeType": "Block",
																					"src": "15411:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1290,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15502:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1289,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15479:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1291,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1292,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1296,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1283,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1282,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1296,
																				"src": "15297:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1281,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:2"
																	},
																	"src": "15271:267:2"
																},
																{
																	"block": {
																		"id": 1312,
																		"nodeType": "Block",
																		"src": "15567:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1300,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1298,
																							"src": "15589:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1310,
																					"nodeType": "Block",
																					"src": "15744:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15830:86:2",
																								"nodeType": "YulBlock",
																								"src": "15830:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15867:2:2",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15871:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15863:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:2"
																													},
																													"nativeSrc": "15863:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15886:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15880:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:2"
																													},
																													"nativeSrc": "15880:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15856:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:2"
																											},
																											"nativeSrc": "15856:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:2"
																										},
																										"nativeSrc": "15856:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1309,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:2"
																						}
																					]
																				},
																				"id": 1311,
																				"nodeType": "IfStatement",
																				"src": "15585:349:2",
																				"trueBody": {
																					"id": 1308,
																					"nodeType": "Block",
																					"src": "15609:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1305,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15716:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1304,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15693:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1306,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1307,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1313,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1299,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1298,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1313,
																				"src": "15546:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1297,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:2"
																	},
																	"src": "15539:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1275,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "15236:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1276,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "15246:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1277,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "15252:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1278,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "15257:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1279,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "15265:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1272,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "15209:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1271,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "15192:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:2",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1499,
																	"src": "15192:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1314,
															"nodeType": "TryStatement",
															"src": "15188:760:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:2",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "14977:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15003:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15045:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15075:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15108:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:2"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:2"
									},
									"scope": 1335,
									"src": "14923:1041:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "16238:691:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16300:623:2",
													"nodeType": "YulBlock",
													"src": "16300:623:2",
													"statements": [
														{
															"nativeSrc": "16358:21:2",
															"nodeType": "YulAssignment",
															"src": "16358:21:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16374:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16368:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:2"
																},
																"nativeSrc": "16368:11:2",
																"nodeType": "YulFunctionCall",
																"src": "16368:11:2"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16358:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16436:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16444:1:2",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16429:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:2"
																},
																"nativeSrc": "16429:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16429:17:2"
															},
															"nativeSrc": "16429:17:2",
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16567:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16575:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16563:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:2"
																		},
																		"nativeSrc": "16563:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:2"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16582:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16556:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:2"
																},
																"nativeSrc": "16556:35:2",
																"nodeType": "YulFunctionCall",
																"src": "16556:35:2"
															},
															"nativeSrc": "16556:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:2"
														},
														{
															"nativeSrc": "16682:27:2",
															"nodeType": "YulAssignment",
															"src": "16682:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16696:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16704:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16692:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:2"
																},
																"nativeSrc": "16692:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16692:17:2"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16682:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16729:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16737:1:2",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16722:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:2"
																},
																"nativeSrc": "16722:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16722:17:2"
															},
															"nativeSrc": "16722:17:2",
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16763:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16771:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:2"
																		},
																		"nativeSrc": "16759:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:2"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16778:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16752:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:2"
																},
																"nativeSrc": "16752:35:2",
																"nodeType": "YulFunctionCall",
																"src": "16752:35:2"
															},
															"nativeSrc": "16752:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16889:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16899:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16907:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16895:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:2"
																		},
																		"nativeSrc": "16895:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16882:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:2"
																},
																"nativeSrc": "16882:31:2",
																"nodeType": "YulFunctionCall",
																"src": "16882:31:2"
															},
															"nativeSrc": "16882:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1321,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:2",
														"valueSize": 1
													},
													{
														"declaration": 1323,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:2",
														"valueSize": 1
													}
												],
												"id": 1332,
												"nodeType": "InlineAssembly",
												"src": "16291:632:2"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:2",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16117:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:2"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16188:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1325,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1326,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16213:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1328,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1329,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:2"
									},
									"scope": 1335,
									"src": "16080:849:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1336,
							"src": "727:16204:2",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "109:16823:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC165": [
							2031
						]
					},
					"id": 1459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 2032,
							"src": "136:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1338,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2031,
										"src": "144:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1341,
										"name": "IERC165",
										"nameLocations": [
											"358:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2031,
										"src": "358:7:3"
									},
									"id": 1342,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1340,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1458,
							"linearizedBaseContracts": [
								1458,
								2031
							],
							"name": "IERC1155",
							"nameLocation": "346:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:3",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1355,
									"name": "TransferSingle",
									"nameLocation": "508:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "523:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "549:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "571:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "591:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "603:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:3"
									},
									"src": "502:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1370,
									"name": "TransferBatch",
									"nameLocation": "779:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "802:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "836:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "866:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "894:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ArrayTypeName",
													"src": "894:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "917:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1366,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1367,
													"nodeType": "ArrayTypeName",
													"src": "917:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:3"
									},
									"src": "773:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1379,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1119:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1144:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1170:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:3"
									},
									"src": "1098:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1386,
									"name": "URI",
									"nameLocation": "1545:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1549:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1563:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:3"
									},
									"src": "1539:44:3"
								},
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:3",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1785:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1802:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:3"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1837:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:3"
									},
									"scope": 1458,
									"src": "1766:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2078:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1398,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1399,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2115:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1401,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1402,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2167:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1405,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1406,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:3"
									},
									"scope": 1458,
									"src": "2045:140:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2471:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2489:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:3"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:3"
									},
									"scope": 1458,
									"src": "2444:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2685:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2702:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:3"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2743:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:3"
									},
									"scope": 1458,
									"src": "2659:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:3",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3696:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3722:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3734:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3749:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:3"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:3"
									},
									"scope": 1458,
									"src": "3670:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "3785:814:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4613:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4652:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4644:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4674:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4666:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4705:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4686:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1447,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4686:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1448,
													"nodeType": "ArrayTypeName",
													"src": "4686:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4737:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4718:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1450,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4718:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1451,
													"nodeType": "ArrayTypeName",
													"src": "4718:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4753:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4753:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:144:3"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4787:0:3"
									},
									"scope": 1458,
									"src": "4604:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1459,
							"src": "336:4454:3",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "110:4681:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							2031
						]
					},
					"id": 1501,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1501,
							"sourceUnit": 2032,
							"src": "144:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1461,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2031,
										"src": "152:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1464,
										"name": "IERC165",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2031,
										"src": "357:7:4"
									},
									"id": 1465,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:4",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1500,
							"linearizedBaseContracts": [
								1500,
								2031
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:4",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1238:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1264:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1286:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1306:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1329:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:4"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1373:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:4"
									},
									"scope": 1500,
									"src": "1202:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:4",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2427:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2453:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2475:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1487,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1488,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2507:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2542:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:4"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2586:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:4"
									},
									"scope": 1500,
									"src": "2386:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1501,
							"src": "327:2269:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol",
					"exportedSymbols": {
						"ERC1155": [
							1335
						],
						"ERC1155Pausable": [
							1539
						],
						"Pausable": [
							1885
						]
					},
					"id": 1540,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1502,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1504,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1540,
							"sourceUnit": 1336,
							"src": "154:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1503,
										"name": "ERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1335,
										"src": "162:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 1506,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1540,
							"sourceUnit": 1886,
							"src": "194:53:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1505,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1885,
										"src": "202:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1508,
										"name": "ERC1155",
										"nameLocations": [
											"976:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "976:7:5"
									},
									"id": 1509,
									"nodeType": "InheritanceSpecifier",
									"src": "976:7:5"
								},
								{
									"baseName": {
										"id": 1510,
										"name": "Pausable",
										"nameLocations": [
											"985:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1885,
										"src": "985:8:5"
									},
									"id": 1511,
									"nodeType": "InheritanceSpecifier",
									"src": "985:8:5"
								}
							],
							"canonicalName": "ERC1155Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1507,
								"nodeType": "StructuredDocumentation",
								"src": "249:689:5",
								"text": " @dev ERC1155 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1539,
							"linearizedBaseContracts": [
								1539,
								1885,
								1335,
								284,
								1555,
								1458,
								2019,
								2031,
								1768
							],
							"name": "ERC1155Pausable",
							"nameLocation": "957:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										750
									],
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "1296:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1531,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "1320:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1532,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "1326:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1533,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "1330:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1534,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "1335:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 1528,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1306:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC1155Pausable_$1539_$",
																"typeString": "type(contract super ERC1155Pausable)"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1312:7:5",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 750,
														"src": "1306:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "1306:36:5"
											}
										]
									},
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "1000:123:5",
										"text": " @dev See {ERC1155-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1525,
												"name": "whenNotPaused",
												"nameLocations": [
													"1282:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1810,
												"src": "1282:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1282:13:5"
										}
									],
									"name": "_update",
									"nameLocation": "1137:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1524,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1273:8:5"
									},
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1162:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1154:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1184:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1176:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1213:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1196:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1517,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1196:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1518,
													"nodeType": "ArrayTypeName",
													"src": "1196:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1243:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1226:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1520,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1226:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1521,
													"nodeType": "ArrayTypeName",
													"src": "1226:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:111:5"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:0:5"
									},
									"scope": 1539,
									"src": "1128:221:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1540,
							"src": "939:412:5",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283,
								1790,
								1793
							],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386,
								1782,
								1787
							]
						}
					],
					"src": "128:1224:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC1155MetadataURI": [
							1555
						]
					},
					"id": 1556,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1541,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1543,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1556,
							"sourceUnit": 1459,
							"src": "158:41:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1542,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "166:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1545,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "399:8:6"
									},
									"id": 1546,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:6"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1544,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:6",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1555,
							"linearizedBaseContracts": [
								1555,
								1458,
								2031
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:6",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "624:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:6"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "659:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:6"
									},
									"scope": 1555,
									"src": "611:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1556,
							"src": "366:310:6",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "132:545:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1738
						],
						"Math": [
							3085
						],
						"StorageSlot": [
							1995
						]
					},
					"id": 1739,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1557,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1559,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1739,
							"sourceUnit": 1996,
							"src": "126:46:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1558,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1995,
										"src": "134:11:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1561,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1739,
							"sourceUnit": 3086,
							"src": "173:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1560,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3085,
										"src": "181:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1562,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:7",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1738,
							"linearizedBaseContracts": [
								1738
							],
							"name": "Arrays",
							"nameLocation": "284:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1565,
									"libraryName": {
										"id": 1563,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1995,
										"src": "303:11:7"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:7",
									"typeName": {
										"id": 1564,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "843:834:7",
										"statements": [
											{
												"assignments": [
													1577
												],
												"declarations": [
													{
														"constant": false,
														"id": 1577,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1647,
														"src": "853:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1576,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1579,
												"initialValue": {
													"hexValue": "30",
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:7"
											},
											{
												"assignments": [
													1581
												],
												"declarations": [
													{
														"constant": false,
														"id": 1581,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1647,
														"src": "878:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1584,
												"initialValue": {
													"expression": {
														"id": 1582,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "893:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1585,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "920:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1591,
												"nodeType": "IfStatement",
												"src": "916:48:7",
												"trueBody": {
													"id": 1590,
													"nodeType": "Block",
													"src": "931:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1575,
															"id": 1589,
															"nodeType": "Return",
															"src": "945:8:7"
														}
													]
												}
											},
											{
												"body": {
													"id": 1623,
													"nodeType": "Block",
													"src": "993:423:7",
													"statements": [
														{
															"assignments": [
																1596
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1596,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1623,
																	"src": "1007:11:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1595,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1602,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1599,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1577,
																		"src": "1034:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1600,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "1039:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1597,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3085,
																		"src": "1021:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3085_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:7",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2259,
																	"src": "1021:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1604,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1569,
																				"src": "1282:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1605,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1596,
																				"src": "1289:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1603,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1669,
																				1690,
																				1711
																			],
																			"referencedDeclaration": 1711,
																			"src": "1269:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1900_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1900_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:7",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1899,
																	"src": "1269:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1608,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1571,
																	"src": "1302:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1621,
																"nodeType": "Block",
																"src": "1360:46:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1615,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1577,
																				"src": "1378:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1616,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1596,
																					"src": "1384:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1617,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1620,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:7"
																	}
																]
															},
															"id": 1622,
															"nodeType": "IfStatement",
															"src": "1265:141:7",
															"trueBody": {
																"id": 1614,
																"nodeType": "Block",
																"src": "1311:43:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1610,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1581,
																				"src": "1329:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1611,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1596,
																				"src": "1336:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1613,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1592,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "981:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1593,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "987:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1624,
												"nodeType": "WhileStatement",
												"src": "974:442:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1625,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "1533:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1629,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1569,
																		"src": "1557:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1630,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1577,
																			"src": "1564:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1628,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1669,
																		1690,
																		1711
																	],
																	"referencedDeclaration": 1711,
																	"src": "1544:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1900_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1900_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1899,
															"src": "1544:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1635,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "1582:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1645,
													"nodeType": "Block",
													"src": "1636:35:7",
													"statements": [
														{
															"expression": {
																"id": 1643,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "1657:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1575,
															"id": 1644,
															"nodeType": "Return",
															"src": "1650:10:7"
														}
													]
												},
												"id": 1646,
												"nodeType": "IfStatement",
												"src": "1529:142:7",
												"trueBody": {
													"id": 1642,
													"nodeType": "Block",
													"src": "1591:39:7",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1638,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "1612:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1575,
															"id": 1641,
															"nodeType": "Return",
															"src": "1605:14:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:7",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "769:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1567,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1568,
													"nodeType": "ArrayTypeName",
													"src": "769:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "794:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:7"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "834:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:7"
									},
									"scope": 1738,
									"src": "745:932:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "1993:459:7",
										"statements": [
											{
												"assignments": [
													1661
												],
												"declarations": [
													{
														"constant": false,
														"id": 1661,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "2003:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1660,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1662,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:7"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:7",
													"nodeType": "YulBlock",
													"src": "2316:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:7"
																},
																"nativeSrc": "2330:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:7"
															},
															"nativeSrc": "2330:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:7"
														},
														{
															"nativeSrc": "2362:36:7",
															"nodeType": "YulAssignment",
															"src": "2362:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:7",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:7"
																		},
																		"nativeSrc": "2374:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:7"
																},
																"nativeSrc": "2370:28:7",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:7"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1652,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1654,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1661,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:7",
														"valueSize": 1
													}
												],
												"id": 1663,
												"nodeType": "InlineAssembly",
												"src": "2307:101:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1664,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "2424:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:7",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1917,
														"src": "2424:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1891_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1891_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1667,
												"nodeType": "Return",
												"src": "2417:28:7"
											}
										]
									},
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1901:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1650,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1651,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1924:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:7"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1960:31:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1891_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1656,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:7",
															"1972:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1891,
														"src": "1960:23:7"
													},
													"referencedDeclaration": 1891,
													"src": "1960:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1891_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:7"
									},
									"scope": 1738,
									"src": "1879:573:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "2768:459:7",
										"statements": [
											{
												"assignments": [
													1682
												],
												"declarations": [
													{
														"constant": false,
														"id": 1682,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1689,
														"src": "2778:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1681,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1683,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:7"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:7",
													"nodeType": "YulBlock",
													"src": "3091:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:7"
																},
																"nativeSrc": "3105:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:7"
															},
															"nativeSrc": "3105:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:7"
														},
														{
															"nativeSrc": "3137:36:7",
															"nodeType": "YulAssignment",
															"src": "3137:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:7",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:7"
																		},
																		"nativeSrc": "3149:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:7"
																},
																"nativeSrc": "3145:28:7",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:7"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1673,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1675,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1682,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:7",
														"valueSize": 1
													}
												],
												"id": 1684,
												"nodeType": "InlineAssembly",
												"src": "3082:101:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1685,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "3199:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:7",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1939,
														"src": "3199:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1897_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1897_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1680,
												"id": 1688,
												"nodeType": "Return",
												"src": "3192:28:7"
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2676:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1671,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1672,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2699:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:7"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2735:31:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1897_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1678,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1677,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:7",
															"2747:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1897,
														"src": "2735:23:7"
													},
													"referencedDeclaration": 1897,
													"src": "2735:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1897_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:7"
									},
									"scope": 1738,
									"src": "2654:573:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "3543:459:7",
										"statements": [
											{
												"assignments": [
													1703
												],
												"declarations": [
													{
														"constant": false,
														"id": 1703,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1710,
														"src": "3553:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1702,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1704,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:7"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:7",
													"nodeType": "YulBlock",
													"src": "3866:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:7"
																},
																"nativeSrc": "3880:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:7"
															},
															"nativeSrc": "3880:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:7"
														},
														{
															"nativeSrc": "3912:36:7",
															"nodeType": "YulAssignment",
															"src": "3912:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:7",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:7"
																		},
																		"nativeSrc": "3924:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:7"
																},
																"nativeSrc": "3920:28:7",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:7"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1694,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1696,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1703,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:7",
														"valueSize": 1
													}
												],
												"id": 1705,
												"nodeType": "InlineAssembly",
												"src": "3857:101:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1706,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "3974:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:7",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1950,
														"src": "3974:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1900_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1900_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1701,
												"id": 1709,
												"nodeType": "Return",
												"src": "3967:28:7"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "3451:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1692,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1693,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "3474:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:7"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "3510:31:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1900_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1698,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:7",
															"3522:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1900,
														"src": "3510:23:7"
													},
													"referencedDeclaration": 1900,
													"src": "3510:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1900_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:7"
									},
									"scope": 1738,
									"src": "3429:573:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "4303:98:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:7",
													"nodeType": "YulBlock",
													"src": "4322:73:7",
													"statements": [
														{
															"nativeSrc": "4336:49:7",
															"nodeType": "YulAssignment",
															"src": "4336:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:7"
																				},
																				"nativeSrc": "4353:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:7"
																				},
																				"nativeSrc": "4369:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:7"
																		},
																		"nativeSrc": "4349:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:7"
																},
																"nativeSrc": "4343:42:7",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:7"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1715,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1717,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1720,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:7",
														"valueSize": 1
													}
												],
												"id": 1722,
												"nodeType": "InlineAssembly",
												"src": "4313:82:7"
											}
										]
									},
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "4232:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1713,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1714,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "4254:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:7"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "4290:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:7"
									},
									"scope": 1738,
									"src": "4204:197:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "4702:98:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:7",
													"nodeType": "YulBlock",
													"src": "4721:73:7",
													"statements": [
														{
															"nativeSrc": "4735:49:7",
															"nodeType": "YulAssignment",
															"src": "4735:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:7"
																				},
																				"nativeSrc": "4752:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:7"
																				},
																				"nativeSrc": "4768:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:7"
																		},
																		"nativeSrc": "4748:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:7"
																},
																"nativeSrc": "4742:42:7",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:7"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1728,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1730,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1733,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:7",
														"valueSize": 1
													}
												],
												"id": 1735,
												"nodeType": "InlineAssembly",
												"src": "4712:82:7"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4631:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1726,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1727,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4653:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:7"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4689:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:7"
									},
									"scope": 1738,
									"src": "4603:197:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1739,
							"src": "276:4526:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1768
						]
					},
					"id": 1769,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1740,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1741,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1768,
							"linearizedBaseContracts": [
								1768
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1746,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1745,
												"id": 1748,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1768,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1755,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1754,
												"id": 1757,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1768,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1763,
												"id": 1765,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1768,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1769,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1768
						],
						"Pausable": [
							1885
						]
					},
					"id": 1886,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1770,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1772,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1886,
							"sourceUnit": 1769,
							"src": "128:45:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1771,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1768,
										"src": "136:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1774,
										"name": "Context",
										"nameLocations": [
											"645:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1768,
										"src": "645:7:9"
									},
									"id": 1775,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:9"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1773,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:9",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1885,
							"linearizedBaseContracts": [
								1885,
								1768
							],
							"name": "Pausable",
							"nameLocation": "633:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1777,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1885,
									"src": "659:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1776,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:9",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1782,
									"name": "Paused",
									"nameLocation": "770:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "777:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:9"
									},
									"src": "764:30:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:9",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1787,
									"name": "Unpaused",
									"nameLocation": "881:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "890:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:9"
									},
									"src": "875:32:9"
								},
								{
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:9",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1790,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:9"
									},
									"src": "994:22:9"
								},
								{
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:9",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1793,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:9"
									},
									"src": "1107:22:9"
								},
								{
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "1221:32:9",
										"statements": [
											{
												"expression": {
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1797,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "1231:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:9"
											}
										]
									},
									"documentation": {
										"id": 1794,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:9",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1802,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:9"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:9"
									},
									"scope": 1885,
									"src": "1207:46:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1809,
										"nodeType": "Block",
										"src": "1464:47:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1805,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "1474:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:9"
											},
											{
												"id": 1808,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:9"
											}
										]
									},
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:9",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1810,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:9"
									},
									"src": "1439:72:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1817,
										"nodeType": "Block",
										"src": "1711:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1813,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1852,
														"src": "1721:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:9"
											},
											{
												"id": 1816,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:9"
											}
										]
									},
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:9",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1818,
									"name": "whenPaused",
									"nameLocation": "1698:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:9"
									},
									"src": "1689:66:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "1903:31:9",
										"statements": [
											{
												"expression": {
													"id": 1824,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1777,
													"src": "1920:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1823,
												"id": 1825,
												"nodeType": "Return",
												"src": "1913:14:9"
											}
										]
									},
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:9",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:9"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "1897:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1821,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:9"
									},
									"scope": 1885,
									"src": "1850:84:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "2053:77:9",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1831,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "2067:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1837,
												"nodeType": "IfStatement",
												"src": "2063:61:9",
												"trueBody": {
													"id": 1836,
													"nodeType": "Block",
													"src": "2077:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1833,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "2098:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1835,
															"nodeType": "RevertStatement",
															"src": "2091:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:9",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:9"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:9"
									},
									"scope": 1885,
									"src": "2002:128:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "2250:78:9",
										"statements": [
											{
												"condition": {
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:9",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1843,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "2265:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1850,
												"nodeType": "IfStatement",
												"src": "2260:62:9",
												"trueBody": {
													"id": 1849,
													"nodeType": "Block",
													"src": "2275:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1846,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1793,
																	"src": "2296:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1848,
															"nodeType": "RevertStatement",
															"src": "2289:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:9",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:9"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:9"
									},
									"scope": 1885,
									"src": "2202:126:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "2512:66:9",
										"statements": [
											{
												"expression": {
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1858,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "2522:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1863,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "2558:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1862,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "2551:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1866,
												"nodeType": "EmitStatement",
												"src": "2546:25:9"
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:9",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1856,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1855,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1810,
												"src": "2498:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:9"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:9"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:9"
									},
									"scope": 1885,
									"src": "2463:115:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "2758:69:9",
										"statements": [
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1874,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "2768:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1879,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "2807:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1878,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "2798:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1882,
												"nodeType": "EmitStatement",
												"src": "2793:27:9"
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:9",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1872,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1871,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1818,
												"src": "2747:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:9"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:9"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:9"
									},
									"scope": 1885,
									"src": "2710:117:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1886,
							"src": "615:2214:9",
							"usedErrors": [
								1790,
								1793
							],
							"usedEvents": [
								1782,
								1787
							]
						}
					],
					"src": "102:2728:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1995
						]
					},
					"id": 1996,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1887,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1888,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1995,
							"linearizedBaseContracts": [
								1995
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1891,
									"members": [
										{
											"constant": false,
											"id": 1890,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1891,
											"src": "1300:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1889,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:10",
									"nodeType": "StructDefinition",
									"scope": 1995,
									"src": "1271:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1894,
									"members": [
										{
											"constant": false,
											"id": 1893,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1894,
											"src": "1355:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1892,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:10",
									"nodeType": "StructDefinition",
									"scope": 1995,
									"src": "1326:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1897,
									"members": [
										{
											"constant": false,
											"id": 1896,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1897,
											"src": "1407:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1895,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:10",
									"nodeType": "StructDefinition",
									"scope": 1995,
									"src": "1378:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1900,
									"members": [
										{
											"constant": false,
											"id": 1899,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1900,
											"src": "1462:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1898,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:10",
									"nodeType": "StructDefinition",
									"scope": 1995,
									"src": "1433:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1903,
									"members": [
										{
											"constant": false,
											"id": 1902,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1903,
											"src": "1516:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1901,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:10",
									"nodeType": "StructDefinition",
									"scope": 1995,
									"src": "1488:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1906,
									"members": [
										{
											"constant": false,
											"id": 1905,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "1568:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1904,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:10",
									"nodeType": "StructDefinition",
									"scope": 1995,
									"src": "1541:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "1768:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:10",
													"nodeType": "YulBlock",
													"src": "1830:38:10",
													"statements": [
														{
															"nativeSrc": "1844:14:10",
															"nodeType": "YulAssignment",
															"src": "1844:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:10",
																"nodeType": "YulIdentifier",
																"src": "1854:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1913,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1909,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:10",
														"valueSize": 1
													}
												],
												"id": 1915,
												"nodeType": "InlineAssembly",
												"src": "1821:47:10"
											}
										]
									},
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "1708:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1908,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:10"
									},
									"returnParameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "1745:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1891_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1912,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1911,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1891,
														"src": "1745:11:10"
													},
													"referencedDeclaration": 1891,
													"src": "1745:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1891_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:10"
									},
									"scope": 1995,
									"src": "1684:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1927,
										"nodeType": "Block",
										"src": "2056:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:10",
													"nodeType": "YulBlock",
													"src": "2118:38:10",
													"statements": [
														{
															"nativeSrc": "2132:14:10",
															"nodeType": "YulAssignment",
															"src": "2132:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:10",
																"nodeType": "YulIdentifier",
																"src": "2142:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1924,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1920,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:10",
														"valueSize": 1
													}
												],
												"id": 1926,
												"nodeType": "InlineAssembly",
												"src": "2109:47:10"
											}
										]
									},
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:10",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1996:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1919,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:10"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "2033:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1894_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1923,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1922,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1894,
														"src": "2033:11:10"
													},
													"referencedDeclaration": 1894,
													"src": "2033:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1894_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:10"
									},
									"scope": 1995,
									"src": "1972:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "2344:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:10",
													"nodeType": "YulBlock",
													"src": "2406:38:10",
													"statements": [
														{
															"nativeSrc": "2420:14:10",
															"nodeType": "YulAssignment",
															"src": "2420:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:10",
																"nodeType": "YulIdentifier",
																"src": "2430:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1935,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1931,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:10",
														"valueSize": 1
													}
												],
												"id": 1937,
												"nodeType": "InlineAssembly",
												"src": "2397:47:10"
											}
										]
									},
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:10",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "2284:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1930,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:10"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "2321:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1897_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1934,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1933,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1897,
														"src": "2321:11:10"
													},
													"referencedDeclaration": 1897,
													"src": "2321:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1897_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:10"
									},
									"scope": 1995,
									"src": "2260:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1949,
										"nodeType": "Block",
										"src": "2632:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:10",
													"nodeType": "YulBlock",
													"src": "2694:38:10",
													"statements": [
														{
															"nativeSrc": "2708:14:10",
															"nodeType": "YulAssignment",
															"src": "2708:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:10",
																"nodeType": "YulIdentifier",
																"src": "2718:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1946,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1942,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:10",
														"valueSize": 1
													}
												],
												"id": 1948,
												"nodeType": "InlineAssembly",
												"src": "2685:47:10"
											}
										]
									},
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:10",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "2572:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1941,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:10"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "2609:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1900_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1944,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1900,
														"src": "2609:11:10"
													},
													"referencedDeclaration": 1900,
													"src": "2609:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1900_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:10"
									},
									"scope": 1995,
									"src": "2548:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1960,
										"nodeType": "Block",
										"src": "2917:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:10",
													"nodeType": "YulBlock",
													"src": "2979:38:10",
													"statements": [
														{
															"nativeSrc": "2993:14:10",
															"nodeType": "YulAssignment",
															"src": "2993:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:10",
																"nodeType": "YulIdentifier",
																"src": "3003:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1957,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1953,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:10",
														"valueSize": 1
													}
												],
												"id": 1959,
												"nodeType": "InlineAssembly",
												"src": "2970:47:10"
											}
										]
									},
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:10",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "2858:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1952,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:10"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "2895:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1903_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1956,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1955,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1903,
														"src": "2895:10:10"
													},
													"referencedDeclaration": 1903,
													"src": "2895:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1903_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:10"
									},
									"scope": 1995,
									"src": "2835:188:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1971,
										"nodeType": "Block",
										"src": "3225:112:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:10",
													"nodeType": "YulBlock",
													"src": "3287:44:10",
													"statements": [
														{
															"nativeSrc": "3301:20:10",
															"nodeType": "YulAssignment",
															"src": "3301:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:10",
																"nodeType": "YulIdentifier",
																"src": "3311:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1968,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1964,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1970,
												"nodeType": "InlineAssembly",
												"src": "3278:53:10"
											}
										]
									},
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "3158:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:10"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "3203:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1903_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1967,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1966,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1903,
														"src": "3203:10:10"
													},
													"referencedDeclaration": 1903,
													"src": "3203:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1903_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:10"
									},
									"scope": 1995,
									"src": "3135:202:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "3513:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:10",
													"nodeType": "YulBlock",
													"src": "3575:38:10",
													"statements": [
														{
															"nativeSrc": "3589:14:10",
															"nodeType": "YulAssignment",
															"src": "3589:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:10",
																"nodeType": "YulIdentifier",
																"src": "3599:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1979,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1975,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:10",
														"valueSize": 1
													}
												],
												"id": 1981,
												"nodeType": "InlineAssembly",
												"src": "3566:47:10"
											}
										]
									},
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:10",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "3455:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:10"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "3492:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1906_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1978,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1977,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1906,
														"src": "3492:9:10"
													},
													"referencedDeclaration": 1906,
													"src": "3492:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1906_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:10"
									},
									"scope": 1995,
									"src": "3433:186:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "3816:112:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:10",
													"nodeType": "YulBlock",
													"src": "3878:44:10",
													"statements": [
														{
															"nativeSrc": "3892:20:10",
															"nodeType": "YulAssignment",
															"src": "3892:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:10",
																"nodeType": "YulIdentifier",
																"src": "3902:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1990,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1986,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1992,
												"nodeType": "InlineAssembly",
												"src": "3869:53:10"
											}
										]
									},
									"documentation": {
										"id": 1984,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "3751:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1985,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:10"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "3795:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1906_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1989,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1988,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1906,
														"src": "3795:9:10"
													},
													"referencedDeclaration": 1906,
													"src": "3795:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1906_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:10"
									},
									"scope": 1995,
									"src": "3729:199:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1996,
							"src": "1245:2685:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2019
						],
						"IERC165": [
							2031
						]
					},
					"id": 2020,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1997,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1999,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2020,
							"sourceUnit": 2032,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1998,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2031,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2001,
										"name": "IERC165",
										"nameLocations": [
											"687:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2031,
										"src": "687:7:11"
									},
									"id": 2002,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2000,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2019,
							"linearizedBaseContracts": [
								2019,
								2031
							],
							"name": "ERC165",
							"nameLocation": "677:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2030
									],
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "844:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2010,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "861:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2012,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2031,
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2031_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2031_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2011,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2031",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2009,
												"id": 2016,
												"nodeType": "Return",
												"src": "854:47:11"
											}
										]
									},
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "789:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2004,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:11"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "838:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2007,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:11"
									},
									"scope": 2019,
									"src": "762:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2020,
							"src": "659:251:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2031
						]
					},
					"id": 2032,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2021,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2022,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2031,
							"linearizedBaseContracts": [
								2031
							],
							"name": "IERC165",
							"nameLocation": "431:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2030,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2024,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:12"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "860:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:12"
									},
									"scope": 2031,
									"src": "790:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2032,
							"src": "421:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3085
						]
					},
					"id": 3086,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2033,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2034,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3085,
							"linearizedBaseContracts": [
								3085
							],
							"name": "Math",
							"nameLocation": "211:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2035,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2037,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:13"
									},
									"src": "277:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2042,
									"members": [
										{
											"id": 2038,
											"name": "Floor",
											"nameLocation": "336:5:13",
											"nodeType": "EnumValue",
											"src": "336:5:13"
										},
										{
											"id": 2039,
											"name": "Ceil",
											"nameLocation": "379:4:13",
											"nodeType": "EnumValue",
											"src": "379:4:13"
										},
										{
											"id": 2040,
											"name": "Trunc",
											"nameLocation": "421:5:13",
											"nodeType": "EnumValue",
											"src": "421:5:13"
										},
										{
											"id": 2041,
											"name": "Expand",
											"nameLocation": "451:6:13",
											"nodeType": "EnumValue",
											"src": "451:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:13",
									"nodeType": "EnumDefinition",
									"src": "312:169:13"
								},
								{
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "661:140:13",
										"statements": [
											{
												"id": 2072,
												"nodeType": "UncheckedBlock",
												"src": "671:124:13",
												"statements": [
													{
														"assignments": [
															2055
														],
														"declarations": [
															{
																"constant": false,
																"id": 2055,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2072,
																"src": "695:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2054,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2059,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2056,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "707:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2057,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "711:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2060,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "730:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2061,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "734:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2067,
														"nodeType": "IfStatement",
														"src": "726:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2065,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2053,
															"id": 2066,
															"nodeType": "Return",
															"src": "737:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2069,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2055,
																	"src": "782:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2070,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2053,
														"id": 2071,
														"nodeType": "Return",
														"src": "768:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "646:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:13"
									},
									"scope": 3085,
									"src": "585:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2101,
										"nodeType": "Block",
										"src": "984:113:13",
										"statements": [
											{
												"id": 2100,
												"nodeType": "UncheckedBlock",
												"src": "994:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2086,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2079,
																"src": "1022:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2087,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "1026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2093,
														"nodeType": "IfStatement",
														"src": "1018:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2091,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2085,
															"id": 2092,
															"nodeType": "Return",
															"src": "1029:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2095,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2077,
																		"src": "1074:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2096,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2079,
																		"src": "1078:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2098,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2085,
														"id": 2099,
														"nodeType": "Return",
														"src": "1060:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2075,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "924:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "935:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:13"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "969:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2081,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "975:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:13"
									},
									"scope": 3085,
									"src": "908:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2143,
										"nodeType": "Block",
										"src": "1283:417:13",
										"statements": [
											{
												"id": 2142,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2114,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "1551:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2121,
														"nodeType": "IfStatement",
														"src": "1547:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2119,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2113,
															"id": 2120,
															"nodeType": "Return",
															"src": "1559:16:13"
														}
													},
													{
														"assignments": [
															2123
														],
														"declarations": [
															{
																"constant": false,
																"id": 2123,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2142,
																"src": "1589:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2122,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2127,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2124,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2125,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2107,
																"src": "1605:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2128,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "1624:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2129,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2105,
																	"src": "1628:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2107,
																"src": "1633:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2137,
														"nodeType": "IfStatement",
														"src": "1620:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2113,
															"id": 2136,
															"nodeType": "Return",
															"src": "1636:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2139,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "1681:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2140,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2113,
														"id": 2141,
														"nodeType": "Return",
														"src": "1667:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2103,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "1223:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "1234:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:13"
									},
									"returnParameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "1268:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:13"
									},
									"scope": 3085,
									"src": "1207:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2171,
										"nodeType": "Block",
										"src": "1887:114:13",
										"statements": [
											{
												"id": 2170,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2156,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "1925:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2163,
														"nodeType": "IfStatement",
														"src": "1921:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2161,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2155,
															"id": 2162,
															"nodeType": "Return",
															"src": "1933:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2165,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2147,
																		"src": "1978:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2166,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "1982:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2168,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2155,
														"id": 2169,
														"nodeType": "Return",
														"src": "1964:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2145,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "1827:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "1838:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:13"
									},
									"returnParameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "1872:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "1878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:13"
									},
									"scope": 3085,
									"src": "1811:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "2198:114:13",
										"statements": [
											{
												"id": 2198,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2184,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2177,
																"src": "2236:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2191,
														"nodeType": "IfStatement",
														"src": "2232:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2189,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2183,
															"id": 2190,
															"nodeType": "Return",
															"src": "2244:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2193,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2175,
																		"src": "2289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2194,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2177,
																		"src": "2293:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2196,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2183,
														"id": 2197,
														"nodeType": "Return",
														"src": "2275:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2173,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "2138:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "2149:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:13"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "2183:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "2189:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:13"
									},
									"scope": 3085,
									"src": "2122:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "2449:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2210,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2203,
															"src": "2466:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2211,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "2470:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2214,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2205,
														"src": "2478:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:13",
													"trueExpression": {
														"id": 2213,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "2474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2209,
												"id": 2216,
												"nodeType": "Return",
												"src": "2459:20:13"
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "2395:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "2406:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:13"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "2440:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:13"
									},
									"scope": 3085,
									"src": "2382:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2235,
										"nodeType": "Block",
										"src": "2624:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2228,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "2641:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2229,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2223,
															"src": "2645:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2232,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "2653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:13",
													"trueExpression": {
														"id": 2231,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "2649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2227,
												"id": 2234,
												"nodeType": "Return",
												"src": "2634:20:13"
											}
										]
									},
									"documentation": {
										"id": 2219,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "2570:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "2581:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:13"
									},
									"returnParameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "2615:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:13"
									},
									"scope": 3085,
									"src": "2557:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2258,
										"nodeType": "Block",
										"src": "2845:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2246,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "2900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2247,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "2904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2249,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2250,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2239,
																		"src": "2910:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2251,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2241,
																		"src": "2914:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2253,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2245,
												"id": 2257,
												"nodeType": "Return",
												"src": "2892:28:13"
											}
										]
									},
									"documentation": {
										"id": 2237,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "2791:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "2802:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:13"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "2836:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:13"
									},
									"scope": 3085,
									"src": "2774:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2292,
										"nodeType": "Block",
										"src": "3219:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2269,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2264,
														"src": "3233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2277,
												"nodeType": "IfStatement",
												"src": "3229:127:13",
												"trueBody": {
													"id": 2276,
													"nodeType": "Block",
													"src": "3241:115:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2272,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2262,
																	"src": "3340:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2273,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2264,
																	"src": "3344:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2268,
															"id": 2275,
															"nodeType": "Return",
															"src": "3333:12:13"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2278,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "3444:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2282,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2262,
																			"src": "3458:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2285,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2264,
																"src": "3467:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2268,
												"id": 2291,
												"nodeType": "Return",
												"src": "3437:35:13"
											}
										]
									},
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "3165:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "3176:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:13"
									},
									"returnParameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "3210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:13"
									},
									"scope": 3085,
									"src": "3148:331:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2418,
										"nodeType": "Block",
										"src": "3901:4018:13",
										"statements": [
											{
												"id": 2417,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:13",
												"statements": [
													{
														"assignments": [
															2306
														],
														"declarations": [
															{
																"constant": false,
																"id": 2306,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2417,
																"src": "4232:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2305,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2310,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2307,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2296,
																"src": "4248:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2308,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "4252:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:13"
													},
													{
														"assignments": [
															2312
														],
														"declarations": [
															{
																"constant": false,
																"id": 2312,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2417,
																"src": "4312:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2311,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2313,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:13"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:13",
															"nodeType": "YulBlock",
															"src": "4392:122:13",
															"statements": [
																{
																	"nativeSrc": "4410:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:13"
																				},
																				"nativeSrc": "4433:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:13"
																		},
																		"nativeSrc": "4420:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:13",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:13",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:13"
																				},
																				"nativeSrc": "4470:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:13"
																				},
																				"nativeSrc": "4486:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:13"
																		},
																		"nativeSrc": "4466:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2306,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2306,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2312,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2296,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2298,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:13",
																"valueSize": 1
															}
														],
														"id": 2314,
														"nodeType": "InlineAssembly",
														"src": "4383:131:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2315,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "4595:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2323,
														"nodeType": "IfStatement",
														"src": "4591:368:13",
														"trueBody": {
															"id": 2322,
															"nodeType": "Block",
															"src": "4607:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2318,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2306,
																			"src": "4925:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2319,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "4933:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2304,
																	"id": 2321,
																	"nodeType": "Return",
																	"src": "4918:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2324,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "5065:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2325,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "5080:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2331,
														"nodeType": "IfStatement",
														"src": "5061:88:13",
														"trueBody": {
															"id": 2330,
															"nodeType": "Block",
															"src": "5087:62:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2327,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2037,
																			"src": "5112:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2329,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2333
														],
														"declarations": [
															{
																"constant": false,
																"id": 2333,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2417,
																"src": "5404:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2332,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2334,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:13"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:13",
															"nodeType": "YulBlock",
															"src": "5444:291:13",
															"statements": [
																{
																	"nativeSrc": "5513:38:13",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:13"
																		},
																		"nativeSrc": "5526:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:13",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:13"
																				},
																				"nativeSrc": "5653:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:13"
																		},
																		"nativeSrc": "5642:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:13",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:13"
																		},
																		"nativeSrc": "5700:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2300,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2306,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2306,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2306,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2312,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2312,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2333,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2333,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2333,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2296,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2298,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:13",
																"valueSize": 1
															}
														],
														"id": 2335,
														"nodeType": "InlineAssembly",
														"src": "5435:300:13"
													},
													{
														"assignments": [
															2337
														],
														"declarations": [
															{
																"constant": false,
																"id": 2337,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2417,
																"src": "5939:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2336,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2344,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2338,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "5954:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2340,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "5973:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2342,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:13"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:13",
															"nodeType": "YulBlock",
															"src": "6008:362:13",
															"statements": [
																{
																	"nativeSrc": "6073:37:13",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:13"
																		},
																		"nativeSrc": "6088:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:13",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:13"
																		},
																		"nativeSrc": "6186:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:13",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:13"
																						},
																						"nativeSrc": "6333:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:13"
																				},
																				"nativeSrc": "6329:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:13"
																		},
																		"nativeSrc": "6325:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2300,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2300,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2306,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2306,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2337,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2337,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2337,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2337,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2337,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:13",
																"valueSize": 1
															}
														],
														"id": 2345,
														"nodeType": "InlineAssembly",
														"src": "5999:371:13"
													},
													{
														"expression": {
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2346,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "6436:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2347,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2312,
																	"src": "6445:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2348,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2337,
																	"src": "6453:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2351,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:13"
													},
													{
														"assignments": [
															2353
														],
														"declarations": [
															{
																"constant": false,
																"id": 2353,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2417,
																"src": "6775:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2352,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2360,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2355,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "6798:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2357,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:13"
													},
													{
														"expression": {
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2361,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "7031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2363,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2300,
																		"src": "7046:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2364,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "7060:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2368,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:13"
													},
													{
														"expression": {
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2369,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "7100:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2371,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2300,
																		"src": "7115:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2372,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "7129:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2376,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:13"
													},
													{
														"expression": {
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2377,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "7170:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2379,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2300,
																		"src": "7185:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2380,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "7199:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2384,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:13"
													},
													{
														"expression": {
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2385,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "7240:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2387,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2300,
																		"src": "7255:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2388,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "7269:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2392,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:13"
													},
													{
														"expression": {
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2393,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "7310:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2395,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2300,
																		"src": "7325:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2396,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "7339:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2400,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:13"
													},
													{
														"expression": {
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2401,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "7381:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2403,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2300,
																		"src": "7396:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2404,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "7410:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2408,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:13"
													},
													{
														"expression": {
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2409,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2303,
																"src": "7851:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2410,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2306,
																	"src": "7860:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2411,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2353,
																	"src": "7868:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2414,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:13"
													},
													{
														"expression": {
															"id": 2415,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2303,
															"src": "7896:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2304,
														"id": 2416,
														"nodeType": "Return",
														"src": "7889:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2294,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "3819:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "3830:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "3841:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:13"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "3885:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:13"
									},
									"scope": 3085,
									"src": "3803:4116:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2461,
										"nodeType": "Block",
										"src": "8161:192:13",
										"statements": [
											{
												"assignments": [
													2435
												],
												"declarations": [
													{
														"constant": false,
														"id": 2435,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2461,
														"src": "8171:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2441,
												"initialValue": {
													"arguments": [
														{
															"id": 2437,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2422,
															"src": "8195:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2438,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "8198:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2439,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2426,
															"src": "8201:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2436,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2419,
															2462
														],
														"referencedDeclaration": 2419,
														"src": "8188:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2443,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2429,
																"src": "8244:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2042",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2042",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2442,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3084,
															"src": "8227:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2042_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2446,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2422,
																	"src": "8264:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2447,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2424,
																	"src": "8267:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2448,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "8270:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2445,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2458,
												"nodeType": "IfStatement",
												"src": "8223:101:13",
												"trueBody": {
													"id": 2457,
													"nodeType": "Block",
													"src": "8288:36:13",
													"statements": [
														{
															"expression": {
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2453,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "8302:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2456,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2459,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2435,
													"src": "8340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2433,
												"id": 2460,
												"nodeType": "Return",
												"src": "8333:13:13"
											}
										]
									},
									"documentation": {
										"id": 2420,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "8067:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "8078:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "8089:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "8110:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2042",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2427,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "8110:8:13"
													},
													"referencedDeclaration": 2042,
													"src": "8110:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2042",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:13"
									},
									"returnParameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "8152:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:13"
									},
									"scope": 3085,
									"src": "8051:302:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2573,
										"nodeType": "Block",
										"src": "8644:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2470,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2465,
														"src": "8658:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2476,
												"nodeType": "IfStatement",
												"src": "8654:45:13",
												"trueBody": {
													"id": 2475,
													"nodeType": "Block",
													"src": "8666:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2469,
															"id": 2474,
															"nodeType": "Return",
															"src": "8680:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2478
												],
												"declarations": [
													{
														"constant": false,
														"id": 2478,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2573,
														"src": "9378:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2487,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2481,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2465,
																			"src": "9406:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2480,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2741,
																			2776
																		],
																		"referencedDeclaration": 2741,
																		"src": "9401:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2485,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:13"
											},
											{
												"id": 2572,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:13",
												"statements": [
													{
														"expression": {
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2478,
																"src": "9839:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2489,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2478,
																				"src": "9849:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2490,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2465,
																					"src": "9858:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2491,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2478,
																					"src": "9862:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2494,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2498,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:13"
													},
													{
														"expression": {
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2499,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2478,
																"src": "9888:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2500,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2478,
																				"src": "9898:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2501,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2465,
																					"src": "9907:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2502,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2478,
																					"src": "9911:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2505,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2509,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:13"
													},
													{
														"expression": {
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2510,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2478,
																"src": "9937:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2511,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2478,
																				"src": "9947:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2512,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2465,
																					"src": "9956:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2513,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2478,
																					"src": "9960:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2516,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2520,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:13"
													},
													{
														"expression": {
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2521,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2478,
																"src": "9986:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2522,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2478,
																				"src": "9996:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2523,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2465,
																					"src": "10005:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2524,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2478,
																					"src": "10009:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2527,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2531,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:13"
													},
													{
														"expression": {
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2532,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2478,
																"src": "10035:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2533,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2478,
																				"src": "10045:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2534,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2465,
																					"src": "10054:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2535,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2478,
																					"src": "10058:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2538,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2542,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:13"
													},
													{
														"expression": {
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2543,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2478,
																"src": "10084:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2544,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2478,
																				"src": "10094:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2545,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2465,
																					"src": "10103:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2546,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2478,
																					"src": "10107:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2549,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2553,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:13"
													},
													{
														"expression": {
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2554,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2478,
																"src": "10133:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2555,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2478,
																				"src": "10143:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2556,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2465,
																					"src": "10152:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2557,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2478,
																					"src": "10156:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2560,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2564,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2566,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2478,
																	"src": "10193:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2567,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2465,
																		"src": "10201:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2568,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2478,
																		"src": "10205:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2565,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2236,
																"src": "10189:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2469,
														"id": 2571,
														"nodeType": "Return",
														"src": "10182:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2463,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "8601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:13"
									},
									"returnParameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "8635:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:13"
									},
									"scope": 3085,
									"src": "8587:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2608,
										"nodeType": "Block",
										"src": "10405:164:13",
										"statements": [
											{
												"id": 2607,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:13",
												"statements": [
													{
														"assignments": [
															2586
														],
														"declarations": [
															{
																"constant": false,
																"id": 2586,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2607,
																"src": "10439:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2585,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2590,
														"initialValue": {
															"arguments": [
																{
																	"id": 2588,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2577,
																	"src": "10461:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2587,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2574,
																	2609
																],
																"referencedDeclaration": 2574,
																"src": "10456:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2591,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2586,
																"src": "10484:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2593,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2580,
																						"src": "10511:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2042",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2042",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2592,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3084,
																					"src": "10494:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2042_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2599,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2597,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2595,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2586,
																						"src": "10524:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2596,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2586,
																						"src": "10533:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2598,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2577,
																					"src": "10542:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2604,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2584,
														"id": 2606,
														"nodeType": "Return",
														"src": "10477:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2575,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "10343:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "10354:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2042",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2579,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2578,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "10354:8:13"
													},
													"referencedDeclaration": 2042,
													"src": "10354:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2042",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:13"
									},
									"returnParameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "10396:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:13"
									},
									"scope": 3085,
									"src": "10329:240:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2740,
										"nodeType": "Block",
										"src": "10760:922:13",
										"statements": [
											{
												"assignments": [
													2618
												],
												"declarations": [
													{
														"constant": false,
														"id": 2618,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2740,
														"src": "10770:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2620,
												"initialValue": {
													"hexValue": "30",
													"id": 2619,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:13"
											},
											{
												"id": 2737,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2621,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "10826:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2635,
														"nodeType": "IfStatement",
														"src": "10822:99:13",
														"trueBody": {
															"id": 2634,
															"nodeType": "Block",
															"src": "10844:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2626,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2612,
																			"src": "10862:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2629,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:13"
																},
																{
																	"expression": {
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2630,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2618,
																			"src": "10893:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2633,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2636,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "10938:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2650,
														"nodeType": "IfStatement",
														"src": "10934:96:13",
														"trueBody": {
															"id": 2649,
															"nodeType": "Block",
															"src": "10955:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2641,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2612,
																			"src": "10973:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2644,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:13"
																},
																{
																	"expression": {
																		"id": 2647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2645,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2618,
																			"src": "11003:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2648,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2651,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "11047:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2665,
														"nodeType": "IfStatement",
														"src": "11043:96:13",
														"trueBody": {
															"id": 2664,
															"nodeType": "Block",
															"src": "11064:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2656,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2612,
																			"src": "11082:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2659,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:13"
																},
																{
																	"expression": {
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2660,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2618,
																			"src": "11112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2663,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2666,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "11156:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2680,
														"nodeType": "IfStatement",
														"src": "11152:96:13",
														"trueBody": {
															"id": 2679,
															"nodeType": "Block",
															"src": "11173:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2671,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2612,
																			"src": "11191:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2674,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:13"
																},
																{
																	"expression": {
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2675,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2618,
																			"src": "11221:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2678,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "11265:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2695,
														"nodeType": "IfStatement",
														"src": "11261:93:13",
														"trueBody": {
															"id": 2694,
															"nodeType": "Block",
															"src": "11281:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2686,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2612,
																			"src": "11299:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2689,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:13"
																},
																{
																	"expression": {
																		"id": 2692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2690,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2618,
																			"src": "11328:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2693,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2696,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "11371:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2710,
														"nodeType": "IfStatement",
														"src": "11367:93:13",
														"trueBody": {
															"id": 2709,
															"nodeType": "Block",
															"src": "11387:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2612,
																			"src": "11405:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2704,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:13"
																},
																{
																	"expression": {
																		"id": 2707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2705,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2618,
																			"src": "11434:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2708,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2711,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "11477:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2725,
														"nodeType": "IfStatement",
														"src": "11473:93:13",
														"trueBody": {
															"id": 2724,
															"nodeType": "Block",
															"src": "11493:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2716,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2612,
																			"src": "11511:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2719,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:13"
																},
																{
																	"expression": {
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2720,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2618,
																			"src": "11540:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2723,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2726,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "11583:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2736,
														"nodeType": "IfStatement",
														"src": "11579:64:13",
														"trueBody": {
															"id": 2735,
															"nodeType": "Block",
															"src": "11599:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2731,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2618,
																			"src": "11617:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2734,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2738,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2618,
													"src": "11669:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2616,
												"id": 2739,
												"nodeType": "Return",
												"src": "11662:13:13"
											}
										]
									},
									"documentation": {
										"id": 2610,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "10713:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:13"
									},
									"returnParameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "10751:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:13"
									},
									"scope": 3085,
									"src": "10699:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2775,
										"nodeType": "Block",
										"src": "11915:168:13",
										"statements": [
											{
												"id": 2774,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:13",
												"statements": [
													{
														"assignments": [
															2753
														],
														"declarations": [
															{
																"constant": false,
																"id": 2753,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2774,
																"src": "11949:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2752,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2757,
														"initialValue": {
															"arguments": [
																{
																	"id": 2755,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "11971:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2754,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2741,
																	2776
																],
																"referencedDeclaration": 2741,
																"src": "11966:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2758,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2753,
																"src": "11998:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2760,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2747,
																						"src": "12025:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2042",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2042",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2759,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3084,
																					"src": "12008:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2042_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2764,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2762,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2763,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2753,
																						"src": "12043:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2765,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2744,
																					"src": "12052:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2771,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2751,
														"id": 2773,
														"nodeType": "Return",
														"src": "11991:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2742,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "11849:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "11864:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2042",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2746,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2745,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "11864:8:13"
													},
													"referencedDeclaration": 2042,
													"src": "11864:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2042",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:13"
									},
									"returnParameters": {
										"id": 2751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "11906:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:13"
									},
									"scope": 3085,
									"src": "11835:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2904,
										"nodeType": "Block",
										"src": "12276:854:13",
										"statements": [
											{
												"assignments": [
													2785
												],
												"declarations": [
													{
														"constant": false,
														"id": 2785,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2904,
														"src": "12286:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2784,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2787,
												"initialValue": {
													"hexValue": "30",
													"id": 2786,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:13"
											},
											{
												"id": 2901,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2788,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2779,
																"src": "12342:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2804,
														"nodeType": "IfStatement",
														"src": "12338:103:13",
														"trueBody": {
															"id": 2803,
															"nodeType": "Block",
															"src": "12361:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2793,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "12379:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2798,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:13"
																},
																{
																	"expression": {
																		"id": 2801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2799,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "12414:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2802,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2805,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2779,
																"src": "12458:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2821,
														"nodeType": "IfStatement",
														"src": "12454:103:13",
														"trueBody": {
															"id": 2820,
															"nodeType": "Block",
															"src": "12477:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2810,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "12495:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2815,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:13"
																},
																{
																	"expression": {
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2816,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "12530:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2819,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2822,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2779,
																"src": "12574:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2838,
														"nodeType": "IfStatement",
														"src": "12570:103:13",
														"trueBody": {
															"id": 2837,
															"nodeType": "Block",
															"src": "12593:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2827,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "12611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2832,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:13"
																},
																{
																	"expression": {
																		"id": 2835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2833,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "12646:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2836,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2839,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2779,
																"src": "12690:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2855,
														"nodeType": "IfStatement",
														"src": "12686:100:13",
														"trueBody": {
															"id": 2854,
															"nodeType": "Block",
															"src": "12708:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2844,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "12726:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2846,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2849,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:13"
																},
																{
																	"expression": {
																		"id": 2852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2850,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "12760:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2853,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2856,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2779,
																"src": "12803:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2872,
														"nodeType": "IfStatement",
														"src": "12799:100:13",
														"trueBody": {
															"id": 2871,
															"nodeType": "Block",
															"src": "12821:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2861,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "12839:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2866,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:13"
																},
																{
																	"expression": {
																		"id": 2869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2867,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "12873:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2870,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2873,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2779,
																"src": "12916:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2889,
														"nodeType": "IfStatement",
														"src": "12912:100:13",
														"trueBody": {
															"id": 2888,
															"nodeType": "Block",
															"src": "12934:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2878,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2779,
																			"src": "12952:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2879,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2883,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:13"
																},
																{
																	"expression": {
																		"id": 2886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2884,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "12986:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2887,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2890,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2779,
																"src": "13029:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2900,
														"nodeType": "IfStatement",
														"src": "13025:66:13",
														"trueBody": {
															"id": 2899,
															"nodeType": "Block",
															"src": "13047:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2895,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "13065:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2898,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2902,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2785,
													"src": "13117:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2783,
												"id": 2903,
												"nodeType": "Return",
												"src": "13110:13:13"
											}
										]
									},
									"documentation": {
										"id": 2777,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "12229:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:13"
									},
									"returnParameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "12267:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:13"
									},
									"scope": 3085,
									"src": "12214:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2939,
										"nodeType": "Block",
										"src": "13365:170:13",
										"statements": [
											{
												"id": 2938,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:13",
												"statements": [
													{
														"assignments": [
															2917
														],
														"declarations": [
															{
																"constant": false,
																"id": 2917,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2938,
																"src": "13399:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2916,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2921,
														"initialValue": {
															"arguments": [
																{
																	"id": 2919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2908,
																	"src": "13422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2918,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2905,
																	2940
																],
																"referencedDeclaration": 2905,
																"src": "13416:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2922,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2917,
																"src": "13449:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2924,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2911,
																						"src": "13476:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2042",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2042",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2923,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3084,
																					"src": "13459:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2042_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2930,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2928,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2926,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2927,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2917,
																						"src": "13495:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2929,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2908,
																					"src": "13504:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2915,
														"id": 2937,
														"nodeType": "Return",
														"src": "13442:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2906,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "13299:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "13314:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2042",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2910,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2909,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "13314:8:13"
													},
													"referencedDeclaration": 2042,
													"src": "13314:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2042",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:13"
									},
									"returnParameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "13356:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:13"
									},
									"scope": 3085,
									"src": "13284:251:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3026,
										"nodeType": "Block",
										"src": "13855:600:13",
										"statements": [
											{
												"assignments": [
													2949
												],
												"declarations": [
													{
														"constant": false,
														"id": 2949,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3026,
														"src": "13865:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2948,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2951,
												"initialValue": {
													"hexValue": "30",
													"id": 2950,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:13"
											},
											{
												"id": 3023,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2952,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2943,
																	"src": "13921:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2966,
														"nodeType": "IfStatement",
														"src": "13917:98:13",
														"trueBody": {
															"id": 2965,
															"nodeType": "Block",
															"src": "13939:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2957,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2943,
																			"src": "13957:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2960,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:13"
																},
																{
																	"expression": {
																		"id": 2963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2961,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2949,
																			"src": "13988:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2964,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2943,
																	"src": "14032:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2981,
														"nodeType": "IfStatement",
														"src": "14028:95:13",
														"trueBody": {
															"id": 2980,
															"nodeType": "Block",
															"src": "14049:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2972,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2943,
																			"src": "14067:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2975,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:13"
																},
																{
																	"expression": {
																		"id": 2978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2976,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2949,
																			"src": "14097:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2979,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2982,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2943,
																	"src": "14140:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2996,
														"nodeType": "IfStatement",
														"src": "14136:95:13",
														"trueBody": {
															"id": 2995,
															"nodeType": "Block",
															"src": "14157:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2987,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2943,
																			"src": "14175:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2990,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:13"
																},
																{
																	"expression": {
																		"id": 2993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2991,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2949,
																			"src": "14205:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2994,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2997,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2943,
																	"src": "14248:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3011,
														"nodeType": "IfStatement",
														"src": "14244:95:13",
														"trueBody": {
															"id": 3010,
															"nodeType": "Block",
															"src": "14265:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3002,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2943,
																			"src": "14283:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3005,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:13"
																},
																{
																	"expression": {
																		"id": 3008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3006,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2949,
																			"src": "14313:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3009,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3012,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2943,
																	"src": "14356:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3022,
														"nodeType": "IfStatement",
														"src": "14352:64:13",
														"trueBody": {
															"id": 3021,
															"nodeType": "Block",
															"src": "14372:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3017,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2949,
																			"src": "14390:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3020,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3024,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2949,
													"src": "14442:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2947,
												"id": 3025,
												"nodeType": "Return",
												"src": "14435:13:13"
											}
										]
									},
									"documentation": {
										"id": 2941,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "13808:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:13"
									},
									"returnParameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "13846:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:13"
									},
									"scope": 3085,
									"src": "13792:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3064,
										"nodeType": "Block",
										"src": "14692:177:13",
										"statements": [
											{
												"id": 3063,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:13",
												"statements": [
													{
														"assignments": [
															3039
														],
														"declarations": [
															{
																"constant": false,
																"id": 3039,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3063,
																"src": "14726:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3038,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3043,
														"initialValue": {
															"arguments": [
																{
																	"id": 3041,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3030,
																	"src": "14750:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3040,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3027,
																	3065
																],
																"referencedDeclaration": 3027,
																"src": "14743:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3044,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3039,
																"src": "14777:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3046,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3033,
																						"src": "14804:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2042",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2042",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3045,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3084,
																					"src": "14787:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2042_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3053,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3048,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3051,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3049,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3039,
																									"src": "14823:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3050,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3052,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3054,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3030,
																					"src": "14838:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3060,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3037,
														"id": 3062,
														"nodeType": "Return",
														"src": "14770:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3028,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3065,
												"src": "14626:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3065,
												"src": "14641:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2042",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3032,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3031,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "14641:8:13"
													},
													"referencedDeclaration": 2042,
													"src": "14641:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2042",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:13"
									},
									"returnParameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3065,
												"src": "14683:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:13"
									},
									"scope": 3085,
									"src": "14610:259:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3083,
										"nodeType": "Block",
										"src": "15067:48:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3076,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3069,
																	"src": "15090:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2042",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2042",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3074,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3073,
												"id": 3082,
												"nodeType": "Return",
												"src": "15077:31:13"
											}
										]
									},
									"documentation": {
										"id": 3066,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "15019:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2042",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3068,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3067,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "15019:8:13"
													},
													"referencedDeclaration": 2042,
													"src": "15019:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2042",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:13"
									},
									"returnParameters": {
										"id": 3073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "15061:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3071,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:13"
									},
									"scope": 3085,
									"src": "14993:122:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3086,
							"src": "203:14914:13",
							"usedErrors": [
								2037
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:13"
				},
				"id": 13
			},
			"github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol": {
				"ast": {
					"absolutePath": "github/hugocis/VoluntariadoUFV/contracts/TokenUFV.sol",
					"exportedSymbols": {
						"Arrays": [
							1738
						],
						"Context": [
							1768
						],
						"ERC1155": [
							1335
						],
						"ERC1155Pausable": [
							1539
						],
						"ERC165": [
							2019
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1555
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							2031
						],
						"Ownable": [
							147
						],
						"Pausable": [
							1885
						],
						"VoluntariadoUFV": [
							3218
						]
					},
					"id": 3219,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3087,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 3088,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3219,
							"sourceUnit": 1336,
							"src": "107:59:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3089,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3219,
							"sourceUnit": 148,
							"src": "167:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol",
							"id": 3090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3219,
							"sourceUnit": 1540,
							"src": "220:78:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3091,
										"name": "ERC1155",
										"nameLocations": [
											"328:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "328:7:14"
									},
									"id": 3092,
									"nodeType": "InheritanceSpecifier",
									"src": "328:7:14"
								},
								{
									"baseName": {
										"id": 3093,
										"name": "Ownable",
										"nameLocations": [
											"337:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "337:7:14"
									},
									"id": 3094,
									"nodeType": "InheritanceSpecifier",
									"src": "337:7:14"
								},
								{
									"baseName": {
										"id": 3095,
										"name": "ERC1155Pausable",
										"nameLocations": [
											"346:15:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1539,
										"src": "346:15:14"
									},
									"id": 3096,
									"nodeType": "InheritanceSpecifier",
									"src": "346:15:14"
								}
							],
							"canonicalName": "VoluntariadoUFV",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3218,
							"linearizedBaseContracts": [
								3218,
								1539,
								1885,
								147,
								1335,
								284,
								1555,
								1458,
								2019,
								2031,
								1768
							],
							"name": "VoluntariadoUFV",
							"nameLocation": "309:15:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3099,
									"mutability": "constant",
									"name": "OLD",
									"nameLocation": "394:3:14",
									"nodeType": "VariableDeclaration",
									"scope": 3218,
									"src": "369:32:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3097,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 3098,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "400:1:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 3102,
									"mutability": "constant",
									"name": "YOUNG",
									"nameLocation": "467:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 3218,
									"src": "442:34:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3100,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "442:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 3101,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "475:1:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 3105,
									"mutability": "constant",
									"name": "FOOD",
									"nameLocation": "580:4:14",
									"nodeType": "VariableDeclaration",
									"scope": 3218,
									"src": "555:33:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3103,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "555:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 3104,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "587:1:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3116,
										"nodeType": "Block",
										"src": "819:2:14",
										"statements": []
									},
									"id": 3117,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4a4c44536a722f6d657461646174615f626c6f636b636861696e2f6d61696e2f7b69647d2e6a736f6e",
													"id": 3110,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "706:77:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_eae80a2c7bf2c9d096e554e5e4405cf6aefa68f606389f34d4cda8a311083ded",
														"typeString": "literal_string \"https://raw.githubusercontent.com/JLDSjr/metadata_blockchain/main/{id}.json\""
													},
													"value": "https://raw.githubusercontent.com/JLDSjr/metadata_blockchain/main/{id}.json"
												}
											],
											"id": 3111,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3109,
												"name": "ERC1155",
												"nameLocations": [
													"698:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1335,
												"src": "698:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "698:86:14"
										},
										{
											"arguments": [
												{
													"id": 3113,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3107,
													"src": "801:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3114,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3112,
												"name": "Ownable",
												"nameLocations": [
													"793:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "793:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "793:21:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "676:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "668:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:22:14"
									},
									"returnParameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "819:0:14"
									},
									"scope": 3218,
									"src": "656:165:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3128,
										"nodeType": "Block",
										"src": "882:32:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3125,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3119,
															"src": "900:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3124,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "892:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 3126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "892:15:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3127,
												"nodeType": "ExpressionStatement",
												"src": "892:15:14"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 3129,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3122,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3121,
												"name": "onlyOwner",
												"nameLocations": [
													"872:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "872:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "872:9:14"
										}
									],
									"name": "setURI",
									"nameLocation": "836:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3119,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "857:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3129,
												"src": "843:20:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "843:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "842:22:14"
									},
									"returnParameters": {
										"id": 3123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "882:0:14"
									},
									"scope": 3218,
									"src": "827:87:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3137,
										"nodeType": "Block",
										"src": "954:25:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3134,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "964:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "964:8:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3136,
												"nodeType": "ExpressionStatement",
												"src": "964:8:14"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 3138,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3132,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3131,
												"name": "onlyOwner",
												"nameLocations": [
													"944:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "944:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "944:9:14"
										}
									],
									"name": "pause",
									"nameLocation": "929:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "934:2:14"
									},
									"returnParameters": {
										"id": 3133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "954:0:14"
									},
									"scope": 3218,
									"src": "920:59:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3146,
										"nodeType": "Block",
										"src": "1021:27:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3143,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "1031:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:10:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3145,
												"nodeType": "ExpressionStatement",
												"src": "1031:10:14"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 3147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3141,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3140,
												"name": "onlyOwner",
												"nameLocations": [
													"1011:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1011:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1011:9:14"
										}
									],
									"name": "unpause",
									"nameLocation": "994:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1001:2:14"
									},
									"returnParameters": {
										"id": 3142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1021:0:14"
									},
									"scope": 3218,
									"src": "985:63:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3167,
										"nodeType": "Block",
										"src": "1169:49:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3161,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3149,
															"src": "1185:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3162,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3151,
															"src": "1194:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3163,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3153,
															"src": "1198:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3164,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3155,
															"src": "1206:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3160,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "1179:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1179:32:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3166,
												"nodeType": "ExpressionStatement",
												"src": "1179:32:14"
											}
										]
									},
									"functionSelector": "731133e9",
									"id": 3168,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3157,
												"name": "onlyOwner",
												"nameLocations": [
													"1155:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1155:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1155:9:14"
										}
									],
									"name": "mint",
									"nameLocation": "1063:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1076:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "1068:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1093:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "1085:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1105:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "1097:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3155,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1126:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "1113:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1113:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1067:64:14"
									},
									"returnParameters": {
										"id": 3159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1169:0:14"
									},
									"scope": 3218,
									"src": "1054:164:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3190,
										"nodeType": "Block",
										"src": "1359:51:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3184,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3170,
															"src": "1380:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3185,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3173,
															"src": "1384:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3186,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3176,
															"src": "1389:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3187,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3178,
															"src": "1398:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3183,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "1369:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 3188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1369:34:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3189,
												"nodeType": "ExpressionStatement",
												"src": "1369:34:14"
											}
										]
									},
									"functionSelector": "1f7fdffa",
									"id": 3191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3180,
												"name": "onlyOwner",
												"nameLocations": [
													"1345:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1345:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1345:9:14"
										}
									],
									"name": "mintBatch",
									"nameLocation": "1233:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1251:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3191,
												"src": "1243:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1272:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 3191,
												"src": "1255:20:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3171,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1255:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3172,
													"nodeType": "ArrayTypeName",
													"src": "1255:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1294:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3191,
												"src": "1277:24:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3174,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1277:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3175,
													"nodeType": "ArrayTypeName",
													"src": "1277:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3178,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1316:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3191,
												"src": "1303:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1303:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:79:14"
									},
									"returnParameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1359:0:14"
									},
									"scope": 3218,
									"src": "1224:186:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										750,
										1538
									],
									"body": {
										"id": 3216,
										"nodeType": "Block",
										"src": "1638:53:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3210,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3193,
															"src": "1662:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3211,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3195,
															"src": "1668:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3212,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3198,
															"src": "1672:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3213,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3201,
															"src": "1677:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 3207,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1648:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_VoluntariadoUFV_$3218_$",
																"typeString": "type(contract super VoluntariadoUFV)"
															}
														},
														"id": 3209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1654:7:14",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1538,
														"src": "1648:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 3214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1648:36:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3215,
												"nodeType": "ExpressionStatement",
												"src": "1648:36:14"
											}
										]
									},
									"id": 3217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1493:7:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3205,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3203,
												"name": "ERC1155",
												"nameLocations": [
													"1608:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1335,
												"src": "1608:7:14"
											},
											{
												"id": 3204,
												"name": "ERC1155Pausable",
												"nameLocations": [
													"1617:15:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1539,
												"src": "1617:15:14"
											}
										],
										"src": "1599:34:14"
									},
									"parameters": {
										"id": 3202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3193,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1509:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3217,
												"src": "1501:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3195,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1523:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3217,
												"src": "1515:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3198,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1544:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 3217,
												"src": "1527:20:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3196,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1527:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3197,
													"nodeType": "ArrayTypeName",
													"src": "1527:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3201,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1566:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3217,
												"src": "1549:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3199,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1549:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3200,
													"nodeType": "ArrayTypeName",
													"src": "1549:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1500:73:14"
									},
									"returnParameters": {
										"id": 3206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:14"
									},
									"scope": 3218,
									"src": "1484:207:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3219,
							"src": "300:1393:14",
							"usedErrors": [
								13,
								18,
								249,
								254,
								259,
								266,
								271,
								276,
								283,
								1790,
								1793
							],
							"usedEvents": [
								24,
								1355,
								1370,
								1379,
								1386,
								1782,
								1787
							]
						}
					],
					"src": "81:1613:14"
				},
				"id": 14
			}
		}
	}
}