{
	"id": "d1c5bc057fb8018bf871eee7ca84472a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\ncontract MyCollectibles is ERC1155 {\n    constructor() ERC1155(\"https://raw.githubusercontent.com/JLDSjr/metadata_blockchain/main/{id}.json\") {\n        _mint(msg.sender, 1 /* Id mayores */, 10 /* Cantidad */, \"\");\n        _mint(msg.sender, 2 /* Id adolescentes    */, 20 /* Cantidad */, \"\");\n        _mint(msg.sender, 3 /* Id comida      */, 20 /* Cantidad */, \"\");\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f9cfcdfd73b4ba8363273c8dd601b1a4feadc1cbfde410777c91fdfb5971b81164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f9cfcdfd73b4ba8363273c8dd601b1a4feadc1cbfde410777c91fdfb5971b81164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xCF 0xCD REVERT PUSH20 0xB4BA8363273C8DD601B1A4FEADC1CBFDE410777C SWAP2 REVERT 0xFB MSIZE PUSH18 0xB81164736F6C634300081900330000000000 ",
							"sourceMap": "276:4526:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f9cfcdfd73b4ba8363273c8dd601b1a4feadc1cbfde410777c91fdfb5971b81164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xCF 0xCD REVERT PUSH20 0xB4BA8363273C8DD601B1A4FEADC1CBFDE410777C SWAP2 REVERT 0xFB MSIZE PUSH18 0xB81164736F6C634300081900330000000000 ",
							"sourceMap": "276:4526:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9cfcdfd73b4ba8363273c8dd601b1a4feadc1cbfde410777c91fdfb5971b81164736f6c63430008190033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1F PUSH31 0x6FFA154B5AB493A9AFE982EA25312076F3D20EFA211B038F476023B0EB6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1245:2685:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1F PUSH31 0x6FFA154B5AB493A9AFE982EA25312076F3D20EFA211B038F476023B0EB6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1245:2685:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"MyCollectibles": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":119:492  contract MyCollectibles is ERC1155 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":160:490  constructor() ERC1155(\"https://raw.githubusercontent.com/JLDSjr/metadata_blockchain/main/{id}.json\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n  0x4b\n  dup2\n  mstore\n  0x20\n  add\n  data_eae80a2c7bf2c9d096e554e5e4405cf6aefa68f606389f34d4cda8a311083ded\n  0x4b\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/MyToken.sol\":271:331  _mint(msg.sender, 1 /* Id mayores */, 10 /* Cantidad */, \"\") */\n  tag_8\n    /* \"contracts/MyToken.sol\":277:287  msg.sender */\n  caller\n    /* \"contracts/MyToken.sol\":289:290  1 */\n  0x01\n    /* \"contracts/MyToken.sol\":309:311  10 */\n  0x0a\n    /* \"contracts/MyToken.sol\":271:331  _mint(msg.sender, 1 /* Id mayores */, 10 /* Cantidad */, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"contracts/MyToken.sol\":271:276  _mint */\n  shl(0x20, tag_9)\n    /* \"contracts/MyToken.sol\":271:331  _mint(msg.sender, 1 /* Id mayores */, 10 /* Cantidad */, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/MyToken.sol\":341:409  _mint(msg.sender, 2 /* Id adolescentes    */, 20 /* Cantidad */, \"\") */\n  tag_10\n    /* \"contracts/MyToken.sol\":347:357  msg.sender */\n  caller\n    /* \"contracts/MyToken.sol\":359:360  2 */\n  0x02\n    /* \"contracts/MyToken.sol\":387:389  20 */\n  0x14\n    /* \"contracts/MyToken.sol\":341:409  _mint(msg.sender, 2 /* Id adolescentes    */, 20 /* Cantidad */, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"contracts/MyToken.sol\":341:346  _mint */\n  shl(0x20, tag_9)\n    /* \"contracts/MyToken.sol\":341:409  _mint(msg.sender, 2 /* Id adolescentes    */, 20 /* Cantidad */, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/MyToken.sol\":419:483  _mint(msg.sender, 3 /* Id comida      */, 20 /* Cantidad */, \"\") */\n  tag_11\n    /* \"contracts/MyToken.sol\":425:435  msg.sender */\n  caller\n    /* \"contracts/MyToken.sol\":437:438  3 */\n  0x03\n    /* \"contracts/MyToken.sol\":461:463  20 */\n  0x14\n    /* \"contracts/MyToken.sol\":419:483  _mint(msg.sender, 3 /* Id comida      */, 20 /* Cantidad */, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"contracts/MyToken.sol\":419:424  _mint */\n  shl(0x20, tag_9)\n    /* \"contracts/MyToken.sol\":419:483  _mint(msg.sender, 3 /* Id comida      */, 20 /* Cantidad */, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/MyToken.sol\":119:492  contract MyCollectibles is ERC1155 {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\ntag_9:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10844  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n  tag_17\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n  tag_20\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n  shl(0x20, tag_21)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n  tag_22\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n  shl(0x20, tag_23)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n  0x60\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n  0x40\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n  0x40\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n  0x40\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n  0x40\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n  tag_26\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n  shl(0x20, tag_27)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n  tag_29\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n  shl(0x20, tag_30)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n  shl(0x20, tag_33)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n  tag_34\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n  shl(0x20, tag_33)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n  tag_35\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n  dup10\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n  dup10\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n  dup10\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n  shl(0x20, tag_36)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n  0x20\n  shr\n  jump\t// in\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n  jump(tag_37)\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n  tag_38\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n  shl(0x20, tag_39)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n  eq\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n  mload(0x40)\n  0x5b05999100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap3\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n  tag_44\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n  shl(0x20, tag_30)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n  iszero\n  tag_46\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n  tag_48\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n  shl(0x20, tag_33)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n  tag_49\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n  shl(0x20, tag_33)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n  dup9\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n  dup11\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n  iszero\n  tag_51\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n  dup9\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n  mload(0x40)\n  0x03dee4c500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_52\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_53\n  jump\t// in\ntag_52:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n  dup12\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\ntag_50:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n  tag_54\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n  dup10\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n  dup3\n  dup3\n  sload\n  tag_55\n  swap2\n  swap1\n  tag_56\n  jump\t// in\ntag_55:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\ntag_54:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n  dup1\n  0x01\n  add\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n  jump(tag_45)\ntag_46:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n  tag_58\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n  shl(0x20, tag_33)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_58:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n  tag_59\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n  shl(0x20, tag_33)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_59:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n  mload(0x40)\n  tag_60\n  swap3\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_60:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n  jump(tag_61)\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n  mload(0x40)\n  tag_62\n  swap3\n  swap2\n  swap1\n  tag_63\n  jump\t// in\ntag_62:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\ntag_61:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4373:4376  pos */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n  mul\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4357:4360  arr */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n  add\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n  add\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  mload\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n  iszero\n  tag_67\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xf23a6e61\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n  mload(0x40)\n  dup7\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_68\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_69\n  jump\t// in\ntag_68:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_70\n  jumpi\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_71\n  swap2\n  swap1\n  tag_72\n  jump\t// in\ntag_71:\n  0x01\ntag_70:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n  tag_73\n  jumpi\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_78\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_77)\ntag_78:\n  0x60\n  swap2\n  pop\ntag_77:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n  tag_79\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_80\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_80:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\ntag_79:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\ntag_73:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n  shl(0xe0, 0xf23a6e61)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  eq\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n  tag_83\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_84\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_84:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\ntag_83:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\ntag_67:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15156  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n  iszero\n  tag_86\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15209:15211  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xbc197c81\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n  mload(0x40)\n  dup7\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_87\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_88\n  jump\t// in\ntag_87:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_89\n  jumpi\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_90\n  swap2\n  swap1\n  tag_72\n  jump\t// in\ntag_90:\n  0x01\ntag_89:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n  tag_91\n  jumpi\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_96\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_95)\ntag_96:\n  0x60\n  swap2\n  pop\ntag_95:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n  tag_97\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15716:15718  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_98\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_98:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\ntag_97:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\ntag_91:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n  shl(0xe0, 0xbc197c81)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15357  response */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  eq\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n  tag_101\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n  mload(0x40)\n  0x57f447ce00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_102\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_102:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\ntag_101:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\ntag_86:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_103:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_104:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_105:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_106:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_151\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_151:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_152\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_153\n  tag_105\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":714:798   */\ntag_152:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_107:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_108:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_109:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_110:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_158\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_109\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":1429:1468   */\n  tag_159\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_109\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_111:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_112:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_113:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_163\n    /* \"#utility.yul\":1818:1852   */\n  tag_164\n    /* \"#utility.yul\":1827:1851   */\n  tag_165\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_111\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":1818:1852   */\n  tag_112\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":1800:1853   */\n  tag_111\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_114:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_115:\n    /* \"#utility.yul\":2056:2095   */\n  tag_168\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_113\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":2117:2208   */\n  tag_169\n    /* \"#utility.yul\":2166:2207   */\n  tag_170\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_114\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_110\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_116:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_117:\n    /* \"#utility.yul\":2377:2409   */\n  tag_173\n  tag_116\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":2418:2483   */\n  tag_174\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_115\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_118:\n    /* \"#utility.yul\":2555:2675   */\ntag_176:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_179\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_117\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_176)\ntag_178:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_119:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_182\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_107\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":2906:2935   */\n  tag_183\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_108\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_184:\n    /* \"#utility.yul\":3133:3213   */\n  tag_185\n    /* \"#utility.yul\":3189:3211   */\n  tag_186\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_108\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_118\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_181:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_120:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_121:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_189\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_120\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_122:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_191\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_121\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_15:\n    /* \"#utility.yul\":3950:3987   */\n  tag_193\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_103\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_195\n  tag_104\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":4038:4094   */\ntag_194:\n    /* \"#utility.yul\":4118:4156   */\n  tag_196\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_106\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":4203:4270   */\n  tag_197\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_119\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_199\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_200\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_200:\n    /* \"#utility.yul\":5144:5211   */\n  tag_201\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_122\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_198)\n    /* \"#utility.yul\":4365:4983   */\ntag_199:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_202\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_107\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_203:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_203)\ntag_205:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_206\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_207\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_121\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_206:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_198:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_123:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_124:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_210\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_123\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_125:\n    /* \"#utility.yul\":5555:5579   */\n  tag_212\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_124\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_19:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_214\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_125\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:5938   */\ntag_126:\n    /* \"#utility.yul\":5907:5931   */\n  tag_216\n    /* \"#utility.yul\":5925:5930   */\n  dup2\n    /* \"#utility.yul\":5907:5931   */\n  tag_111\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":5902:5905   */\n  dup3\n    /* \"#utility.yul\":5895:5932   */\n  mstore\n    /* \"#utility.yul\":5820:5938   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5944:6276   */\ntag_43:\n    /* \"#utility.yul\":6065:6069   */\n  0x00\n    /* \"#utility.yul\":6103:6105   */\n  0x40\n    /* \"#utility.yul\":6092:6101   */\n  dup3\n    /* \"#utility.yul\":6088:6106   */\n  add\n    /* \"#utility.yul\":6080:6106   */\n  swap1\n  pop\n    /* \"#utility.yul\":6116:6187   */\n  tag_218\n    /* \"#utility.yul\":6184:6185   */\n  0x00\n    /* \"#utility.yul\":6173:6182   */\n  dup4\n    /* \"#utility.yul\":6169:6186   */\n  add\n    /* \"#utility.yul\":6160:6166   */\n  dup6\n    /* \"#utility.yul\":6116:6187   */\n  tag_126\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":6197:6269   */\n  tag_219\n    /* \"#utility.yul\":6265:6267   */\n  0x20\n    /* \"#utility.yul\":6254:6263   */\n  dup4\n    /* \"#utility.yul\":6250:6268   */\n  add\n    /* \"#utility.yul\":6241:6247   */\n  dup5\n    /* \"#utility.yul\":6197:6269   */\n  tag_126\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":5944:6276   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6282:6835   */\ntag_53:\n    /* \"#utility.yul\":6459:6463   */\n  0x00\n    /* \"#utility.yul\":6497:6500   */\n  0x80\n    /* \"#utility.yul\":6486:6495   */\n  dup3\n    /* \"#utility.yul\":6482:6501   */\n  add\n    /* \"#utility.yul\":6474:6501   */\n  swap1\n  pop\n    /* \"#utility.yul\":6511:6582   */\n  tag_221\n    /* \"#utility.yul\":6579:6580   */\n  0x00\n    /* \"#utility.yul\":6568:6577   */\n  dup4\n    /* \"#utility.yul\":6564:6581   */\n  add\n    /* \"#utility.yul\":6555:6561   */\n  dup8\n    /* \"#utility.yul\":6511:6582   */\n  tag_125\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":6592:6664   */\n  tag_222\n    /* \"#utility.yul\":6660:6662   */\n  0x20\n    /* \"#utility.yul\":6649:6658   */\n  dup4\n    /* \"#utility.yul\":6645:6663   */\n  add\n    /* \"#utility.yul\":6636:6642   */\n  dup7\n    /* \"#utility.yul\":6592:6664   */\n  tag_126\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":6674:6746   */\n  tag_223\n    /* \"#utility.yul\":6742:6744   */\n  0x40\n    /* \"#utility.yul\":6731:6740   */\n  dup4\n    /* \"#utility.yul\":6727:6745   */\n  add\n    /* \"#utility.yul\":6718:6724   */\n  dup6\n    /* \"#utility.yul\":6674:6746   */\n  tag_126\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":6756:6828   */\n  tag_224\n    /* \"#utility.yul\":6824:6826   */\n  0x60\n    /* \"#utility.yul\":6813:6822   */\n  dup4\n    /* \"#utility.yul\":6809:6827   */\n  add\n    /* \"#utility.yul\":6800:6806   */\n  dup5\n    /* \"#utility.yul\":6756:6828   */\n  tag_126\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":6282:6835   */\n  swap6\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6841:7021   */\ntag_127:\n    /* \"#utility.yul\":6889:6966   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6886:6887   */\n  0x00\n    /* \"#utility.yul\":6879:6967   */\n  mstore\n    /* \"#utility.yul\":6986:6990   */\n  0x11\n    /* \"#utility.yul\":6983:6984   */\n  0x04\n    /* \"#utility.yul\":6976:6991   */\n  mstore\n    /* \"#utility.yul\":7010:7014   */\n  0x24\n    /* \"#utility.yul\":7007:7008   */\n  0x00\n    /* \"#utility.yul\":7000:7015   */\n  revert\n    /* \"#utility.yul\":7027:7218   */\ntag_56:\n    /* \"#utility.yul\":7067:7070   */\n  0x00\n    /* \"#utility.yul\":7086:7106   */\n  tag_227\n    /* \"#utility.yul\":7104:7105   */\n  dup3\n    /* \"#utility.yul\":7086:7106   */\n  tag_111\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":7081:7106   */\n  swap2\n  pop\n    /* \"#utility.yul\":7120:7140   */\n  tag_228\n    /* \"#utility.yul\":7138:7139   */\n  dup4\n    /* \"#utility.yul\":7120:7140   */\n  tag_111\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":7115:7140   */\n  swap3\n  pop\n    /* \"#utility.yul\":7163:7164   */\n  dup3\n    /* \"#utility.yul\":7160:7161   */\n  dup3\n    /* \"#utility.yul\":7156:7165   */\n  add\n    /* \"#utility.yul\":7149:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":7184:7187   */\n  dup1\n    /* \"#utility.yul\":7181:7182   */\n  dup3\n    /* \"#utility.yul\":7178:7188   */\n  gt\n    /* \"#utility.yul\":7175:7211   */\n  iszero\n  tag_229\n  jumpi\n    /* \"#utility.yul\":7191:7209   */\n  tag_230\n  tag_127\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":7175:7211   */\ntag_229:\n    /* \"#utility.yul\":7027:7218   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7224:7338   */\ntag_128:\n    /* \"#utility.yul\":7291:7297   */\n  0x00\n    /* \"#utility.yul\":7325:7330   */\n  dup2\n    /* \"#utility.yul\":7319:7331   */\n  mload\n    /* \"#utility.yul\":7309:7331   */\n  swap1\n  pop\n    /* \"#utility.yul\":7224:7338   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7344:7528   */\ntag_129:\n    /* \"#utility.yul\":7443:7454   */\n  0x00\n    /* \"#utility.yul\":7477:7483   */\n  dup3\n    /* \"#utility.yul\":7472:7475   */\n  dup3\n    /* \"#utility.yul\":7465:7484   */\n  mstore\n    /* \"#utility.yul\":7517:7521   */\n  0x20\n    /* \"#utility.yul\":7512:7515   */\n  dup3\n    /* \"#utility.yul\":7508:7522   */\n  add\n    /* \"#utility.yul\":7493:7522   */\n  swap1\n  pop\n    /* \"#utility.yul\":7344:7528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7534:7666   */\ntag_130:\n    /* \"#utility.yul\":7601:7605   */\n  0x00\n    /* \"#utility.yul\":7624:7627   */\n  dup2\n    /* \"#utility.yul\":7616:7627   */\n  swap1\n  pop\n    /* \"#utility.yul\":7654:7658   */\n  0x20\n    /* \"#utility.yul\":7649:7652   */\n  dup3\n    /* \"#utility.yul\":7645:7659   */\n  add\n    /* \"#utility.yul\":7637:7659   */\n  swap1\n  pop\n    /* \"#utility.yul\":7534:7666   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7672:7780   */\ntag_131:\n    /* \"#utility.yul\":7749:7773   */\n  tag_235\n    /* \"#utility.yul\":7767:7772   */\n  dup2\n    /* \"#utility.yul\":7749:7773   */\n  tag_111\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":7744:7747   */\n  dup3\n    /* \"#utility.yul\":7737:7774   */\n  mstore\n    /* \"#utility.yul\":7672:7780   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7786:7965   */\ntag_132:\n    /* \"#utility.yul\":7855:7865   */\n  0x00\n    /* \"#utility.yul\":7876:7922   */\n  tag_237\n    /* \"#utility.yul\":7918:7921   */\n  dup4\n    /* \"#utility.yul\":7910:7916   */\n  dup4\n    /* \"#utility.yul\":7876:7922   */\n  tag_131\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":7954:7958   */\n  0x20\n    /* \"#utility.yul\":7949:7952   */\n  dup4\n    /* \"#utility.yul\":7945:7959   */\n  add\n    /* \"#utility.yul\":7931:7959   */\n  swap1\n  pop\n    /* \"#utility.yul\":7786:7965   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7971:8084   */\ntag_133:\n    /* \"#utility.yul\":8041:8045   */\n  0x00\n    /* \"#utility.yul\":8073:8077   */\n  0x20\n    /* \"#utility.yul\":8068:8071   */\n  dup3\n    /* \"#utility.yul\":8064:8078   */\n  add\n    /* \"#utility.yul\":8056:8078   */\n  swap1\n  pop\n    /* \"#utility.yul\":7971:8084   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8120:8852   */\ntag_134:\n    /* \"#utility.yul\":8239:8242   */\n  0x00\n    /* \"#utility.yul\":8268:8322   */\n  tag_240\n    /* \"#utility.yul\":8316:8321   */\n  dup3\n    /* \"#utility.yul\":8268:8322   */\n  tag_128\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":8338:8424   */\n  tag_241\n    /* \"#utility.yul\":8417:8423   */\n  dup2\n    /* \"#utility.yul\":8412:8415   */\n  dup6\n    /* \"#utility.yul\":8338:8424   */\n  tag_129\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":8331:8424   */\n  swap4\n  pop\n    /* \"#utility.yul\":8448:8504   */\n  tag_242\n    /* \"#utility.yul\":8498:8503   */\n  dup4\n    /* \"#utility.yul\":8448:8504   */\n  tag_130\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":8527:8534   */\n  dup1\n    /* \"#utility.yul\":8558:8559   */\n  0x00\n    /* \"#utility.yul\":8543:8827   */\ntag_243:\n    /* \"#utility.yul\":8568:8574   */\n  dup4\n    /* \"#utility.yul\":8565:8566   */\n  dup2\n    /* \"#utility.yul\":8562:8575   */\n  lt\n    /* \"#utility.yul\":8543:8827   */\n  iszero\n  tag_245\n  jumpi\n    /* \"#utility.yul\":8644:8650   */\n  dup2\n    /* \"#utility.yul\":8638:8651   */\n  mload\n    /* \"#utility.yul\":8671:8734   */\n  tag_246\n    /* \"#utility.yul\":8730:8733   */\n  dup9\n    /* \"#utility.yul\":8715:8728   */\n  dup3\n    /* \"#utility.yul\":8671:8734   */\n  tag_132\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":8664:8734   */\n  swap8\n  pop\n    /* \"#utility.yul\":8757:8817   */\n  tag_247\n    /* \"#utility.yul\":8810:8816   */\n  dup4\n    /* \"#utility.yul\":8757:8817   */\n  tag_133\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":8747:8817   */\n  swap3\n  pop\n    /* \"#utility.yul\":8603:8827   */\n  pop\n    /* \"#utility.yul\":8590:8591   */\n  0x01\n    /* \"#utility.yul\":8587:8588   */\n  dup2\n    /* \"#utility.yul\":8583:8592   */\n  add\n    /* \"#utility.yul\":8578:8592   */\n  swap1\n  pop\n    /* \"#utility.yul\":8543:8827   */\n  jump(tag_243)\ntag_245:\n    /* \"#utility.yul\":8547:8561   */\n  pop\n    /* \"#utility.yul\":8843:8846   */\n  dup6\n    /* \"#utility.yul\":8836:8846   */\n  swap4\n  pop\n    /* \"#utility.yul\":8244:8852   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8120:8852   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8858:9492   */\ntag_63:\n    /* \"#utility.yul\":9079:9083   */\n  0x00\n    /* \"#utility.yul\":9117:9119   */\n  0x40\n    /* \"#utility.yul\":9106:9115   */\n  dup3\n    /* \"#utility.yul\":9102:9120   */\n  add\n    /* \"#utility.yul\":9094:9120   */\n  swap1\n  pop\n    /* \"#utility.yul\":9166:9175   */\n  dup2\n    /* \"#utility.yul\":9160:9164   */\n  dup2\n    /* \"#utility.yul\":9156:9176   */\n  sub\n    /* \"#utility.yul\":9152:9153   */\n  0x00\n    /* \"#utility.yul\":9141:9150   */\n  dup4\n    /* \"#utility.yul\":9137:9154   */\n  add\n    /* \"#utility.yul\":9130:9177   */\n  mstore\n    /* \"#utility.yul\":9194:9302   */\n  tag_249\n    /* \"#utility.yul\":9297:9301   */\n  dup2\n    /* \"#utility.yul\":9288:9294   */\n  dup6\n    /* \"#utility.yul\":9194:9302   */\n  tag_134\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":9186:9302   */\n  swap1\n  pop\n    /* \"#utility.yul\":9349:9358   */\n  dup2\n    /* \"#utility.yul\":9343:9347   */\n  dup2\n    /* \"#utility.yul\":9339:9359   */\n  sub\n    /* \"#utility.yul\":9334:9336   */\n  0x20\n    /* \"#utility.yul\":9323:9332   */\n  dup4\n    /* \"#utility.yul\":9319:9337   */\n  add\n    /* \"#utility.yul\":9312:9360   */\n  mstore\n    /* \"#utility.yul\":9377:9485   */\n  tag_250\n    /* \"#utility.yul\":9480:9484   */\n  dup2\n    /* \"#utility.yul\":9471:9477   */\n  dup5\n    /* \"#utility.yul\":9377:9485   */\n  tag_134\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":9369:9485   */\n  swap1\n  pop\n    /* \"#utility.yul\":8858:9492   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9498:9596   */\ntag_135:\n    /* \"#utility.yul\":9549:9555   */\n  0x00\n    /* \"#utility.yul\":9583:9588   */\n  dup2\n    /* \"#utility.yul\":9577:9589   */\n  mload\n    /* \"#utility.yul\":9567:9589   */\n  swap1\n  pop\n    /* \"#utility.yul\":9498:9596   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9602:9770   */\ntag_136:\n    /* \"#utility.yul\":9685:9696   */\n  0x00\n    /* \"#utility.yul\":9719:9725   */\n  dup3\n    /* \"#utility.yul\":9714:9717   */\n  dup3\n    /* \"#utility.yul\":9707:9726   */\n  mstore\n    /* \"#utility.yul\":9759:9763   */\n  0x20\n    /* \"#utility.yul\":9754:9757   */\n  dup3\n    /* \"#utility.yul\":9750:9764   */\n  add\n    /* \"#utility.yul\":9735:9764   */\n  swap1\n  pop\n    /* \"#utility.yul\":9602:9770   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9776:9915   */\ntag_137:\n    /* \"#utility.yul\":9865:9871   */\n  dup3\n    /* \"#utility.yul\":9860:9863   */\n  dup2\n    /* \"#utility.yul\":9855:9858   */\n  dup4\n    /* \"#utility.yul\":9849:9872   */\n  mcopy\n    /* \"#utility.yul\":9906:9907   */\n  0x00\n    /* \"#utility.yul\":9897:9903   */\n  dup4\n    /* \"#utility.yul\":9892:9895   */\n  dup4\n    /* \"#utility.yul\":9888:9904   */\n  add\n    /* \"#utility.yul\":9881:9908   */\n  mstore\n    /* \"#utility.yul\":9776:9915   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9921:10023   */\ntag_138:\n    /* \"#utility.yul\":9962:9968   */\n  0x00\n    /* \"#utility.yul\":10013:10015   */\n  0x1f\n    /* \"#utility.yul\":10009:10016   */\n  not\n    /* \"#utility.yul\":10004:10006   */\n  0x1f\n    /* \"#utility.yul\":9997:10002   */\n  dup4\n    /* \"#utility.yul\":9993:10007   */\n  add\n    /* \"#utility.yul\":9989:10017   */\n  and\n    /* \"#utility.yul\":9979:10017   */\n  swap1\n  pop\n    /* \"#utility.yul\":9921:10023   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10029:10402   */\ntag_139:\n    /* \"#utility.yul\":10115:10118   */\n  0x00\n    /* \"#utility.yul\":10143:10181   */\n  tag_256\n    /* \"#utility.yul\":10175:10180   */\n  dup3\n    /* \"#utility.yul\":10143:10181   */\n  tag_135\n  jump\t// in\ntag_256:\n    /* \"#utility.yul\":10197:10267   */\n  tag_257\n    /* \"#utility.yul\":10260:10266   */\n  dup2\n    /* \"#utility.yul\":10255:10258   */\n  dup6\n    /* \"#utility.yul\":10197:10267   */\n  tag_136\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":10190:10267   */\n  swap4\n  pop\n    /* \"#utility.yul\":10276:10341   */\n  tag_258\n    /* \"#utility.yul\":10334:10340   */\n  dup2\n    /* \"#utility.yul\":10329:10332   */\n  dup6\n    /* \"#utility.yul\":10322:10326   */\n  0x20\n    /* \"#utility.yul\":10315:10320   */\n  dup7\n    /* \"#utility.yul\":10311:10327   */\n  add\n    /* \"#utility.yul\":10276:10341   */\n  tag_137\n  jump\t// in\ntag_258:\n    /* \"#utility.yul\":10366:10395   */\n  tag_259\n    /* \"#utility.yul\":10388:10394   */\n  dup2\n    /* \"#utility.yul\":10366:10395   */\n  tag_138\n  jump\t// in\ntag_259:\n    /* \"#utility.yul\":10361:10364   */\n  dup5\n    /* \"#utility.yul\":10357:10396   */\n  add\n    /* \"#utility.yul\":10350:10396   */\n  swap2\n  pop\n    /* \"#utility.yul\":10119:10402   */\n  pop\n    /* \"#utility.yul\":10029:10402   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10408:11159   */\ntag_69:\n    /* \"#utility.yul\":10631:10635   */\n  0x00\n    /* \"#utility.yul\":10669:10672   */\n  0xa0\n    /* \"#utility.yul\":10658:10667   */\n  dup3\n    /* \"#utility.yul\":10654:10673   */\n  add\n    /* \"#utility.yul\":10646:10673   */\n  swap1\n  pop\n    /* \"#utility.yul\":10683:10754   */\n  tag_261\n    /* \"#utility.yul\":10751:10752   */\n  0x00\n    /* \"#utility.yul\":10740:10749   */\n  dup4\n    /* \"#utility.yul\":10736:10753   */\n  add\n    /* \"#utility.yul\":10727:10733   */\n  dup9\n    /* \"#utility.yul\":10683:10754   */\n  tag_125\n  jump\t// in\ntag_261:\n    /* \"#utility.yul\":10764:10836   */\n  tag_262\n    /* \"#utility.yul\":10832:10834   */\n  0x20\n    /* \"#utility.yul\":10821:10830   */\n  dup4\n    /* \"#utility.yul\":10817:10835   */\n  add\n    /* \"#utility.yul\":10808:10814   */\n  dup8\n    /* \"#utility.yul\":10764:10836   */\n  tag_125\n  jump\t// in\ntag_262:\n    /* \"#utility.yul\":10846:10918   */\n  tag_263\n    /* \"#utility.yul\":10914:10916   */\n  0x40\n    /* \"#utility.yul\":10903:10912   */\n  dup4\n    /* \"#utility.yul\":10899:10917   */\n  add\n    /* \"#utility.yul\":10890:10896   */\n  dup7\n    /* \"#utility.yul\":10846:10918   */\n  tag_126\n  jump\t// in\ntag_263:\n    /* \"#utility.yul\":10928:11000   */\n  tag_264\n    /* \"#utility.yul\":10996:10998   */\n  0x60\n    /* \"#utility.yul\":10985:10994   */\n  dup4\n    /* \"#utility.yul\":10981:10999   */\n  add\n    /* \"#utility.yul\":10972:10978   */\n  dup6\n    /* \"#utility.yul\":10928:11000   */\n  tag_126\n  jump\t// in\ntag_264:\n    /* \"#utility.yul\":11048:11057   */\n  dup2\n    /* \"#utility.yul\":11042:11046   */\n  dup2\n    /* \"#utility.yul\":11038:11058   */\n  sub\n    /* \"#utility.yul\":11032:11035   */\n  0x80\n    /* \"#utility.yul\":11021:11030   */\n  dup4\n    /* \"#utility.yul\":11017:11036   */\n  add\n    /* \"#utility.yul\":11010:11059   */\n  mstore\n    /* \"#utility.yul\":11076:11152   */\n  tag_265\n    /* \"#utility.yul\":11147:11151   */\n  dup2\n    /* \"#utility.yul\":11138:11144   */\n  dup5\n    /* \"#utility.yul\":11076:11152   */\n  tag_139\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":11068:11152   */\n  swap1\n  pop\n    /* \"#utility.yul\":10408:11159   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11246:11363   */\ntag_141:\n    /* \"#utility.yul\":11355:11356   */\n  0x00\n    /* \"#utility.yul\":11352:11353   */\n  dup1\n    /* \"#utility.yul\":11345:11357   */\n  revert\n    /* \"#utility.yul\":11492:11641   */\ntag_143:\n    /* \"#utility.yul\":11528:11535   */\n  0x00\n    /* \"#utility.yul\":11568:11634   */\n  0xffffffff00000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11561:11566   */\n  dup3\n    /* \"#utility.yul\":11557:11635   */\n  and\n    /* \"#utility.yul\":11546:11635   */\n  swap1\n  pop\n    /* \"#utility.yul\":11492:11641   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11647:11767   */\ntag_144:\n    /* \"#utility.yul\":11719:11742   */\n  tag_271\n    /* \"#utility.yul\":11736:11741   */\n  dup2\n    /* \"#utility.yul\":11719:11742   */\n  tag_143\n  jump\t// in\ntag_271:\n    /* \"#utility.yul\":11712:11717   */\n  dup2\n    /* \"#utility.yul\":11709:11743   */\n  eq\n    /* \"#utility.yul\":11699:11761   */\n  tag_272\n  jumpi\n    /* \"#utility.yul\":11757:11758   */\n  0x00\n    /* \"#utility.yul\":11754:11755   */\n  dup1\n    /* \"#utility.yul\":11747:11759   */\n  revert\n    /* \"#utility.yul\":11699:11761   */\ntag_272:\n    /* \"#utility.yul\":11647:11767   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11773:11914   */\ntag_145:\n    /* \"#utility.yul\":11829:11834   */\n  0x00\n    /* \"#utility.yul\":11860:11866   */\n  dup2\n    /* \"#utility.yul\":11854:11867   */\n  mload\n    /* \"#utility.yul\":11845:11867   */\n  swap1\n  pop\n    /* \"#utility.yul\":11876:11908   */\n  tag_274\n    /* \"#utility.yul\":11902:11907   */\n  dup2\n    /* \"#utility.yul\":11876:11908   */\n  tag_144\n  jump\t// in\ntag_274:\n    /* \"#utility.yul\":11773:11914   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11920:12269   */\ntag_72:\n    /* \"#utility.yul\":11989:11995   */\n  0x00\n    /* \"#utility.yul\":12038:12040   */\n  0x20\n    /* \"#utility.yul\":12026:12035   */\n  dup3\n    /* \"#utility.yul\":12017:12024   */\n  dup5\n    /* \"#utility.yul\":12013:12036   */\n  sub\n    /* \"#utility.yul\":12009:12041   */\n  slt\n    /* \"#utility.yul\":12006:12125   */\n  iszero\n  tag_276\n  jumpi\n    /* \"#utility.yul\":12044:12123   */\n  tag_277\n  tag_141\n  jump\t// in\ntag_277:\n    /* \"#utility.yul\":12006:12125   */\ntag_276:\n    /* \"#utility.yul\":12164:12165   */\n  0x00\n    /* \"#utility.yul\":12189:12252   */\n  tag_278\n    /* \"#utility.yul\":12244:12251   */\n  dup5\n    /* \"#utility.yul\":12235:12241   */\n  dup3\n    /* \"#utility.yul\":12224:12233   */\n  dup6\n    /* \"#utility.yul\":12220:12242   */\n  add\n    /* \"#utility.yul\":12189:12252   */\n  tag_145\n  jump\t// in\ntag_278:\n    /* \"#utility.yul\":12179:12252   */\n  swap2\n  pop\n    /* \"#utility.yul\":12135:12262   */\n  pop\n    /* \"#utility.yul\":11920:12269   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12275:13328   */\ntag_88:\n    /* \"#utility.yul\":12598:12602   */\n  0x00\n    /* \"#utility.yul\":12636:12639   */\n  0xa0\n    /* \"#utility.yul\":12625:12634   */\n  dup3\n    /* \"#utility.yul\":12621:12640   */\n  add\n    /* \"#utility.yul\":12613:12640   */\n  swap1\n  pop\n    /* \"#utility.yul\":12650:12721   */\n  tag_280\n    /* \"#utility.yul\":12718:12719   */\n  0x00\n    /* \"#utility.yul\":12707:12716   */\n  dup4\n    /* \"#utility.yul\":12703:12720   */\n  add\n    /* \"#utility.yul\":12694:12700   */\n  dup9\n    /* \"#utility.yul\":12650:12721   */\n  tag_125\n  jump\t// in\ntag_280:\n    /* \"#utility.yul\":12731:12803   */\n  tag_281\n    /* \"#utility.yul\":12799:12801   */\n  0x20\n    /* \"#utility.yul\":12788:12797   */\n  dup4\n    /* \"#utility.yul\":12784:12802   */\n  add\n    /* \"#utility.yul\":12775:12781   */\n  dup8\n    /* \"#utility.yul\":12731:12803   */\n  tag_125\n  jump\t// in\ntag_281:\n    /* \"#utility.yul\":12850:12859   */\n  dup2\n    /* \"#utility.yul\":12844:12848   */\n  dup2\n    /* \"#utility.yul\":12840:12860   */\n  sub\n    /* \"#utility.yul\":12835:12837   */\n  0x40\n    /* \"#utility.yul\":12824:12833   */\n  dup4\n    /* \"#utility.yul\":12820:12838   */\n  add\n    /* \"#utility.yul\":12813:12861   */\n  mstore\n    /* \"#utility.yul\":12878:12986   */\n  tag_282\n    /* \"#utility.yul\":12981:12985   */\n  dup2\n    /* \"#utility.yul\":12972:12978   */\n  dup7\n    /* \"#utility.yul\":12878:12986   */\n  tag_134\n  jump\t// in\ntag_282:\n    /* \"#utility.yul\":12870:12986   */\n  swap1\n  pop\n    /* \"#utility.yul\":13033:13042   */\n  dup2\n    /* \"#utility.yul\":13027:13031   */\n  dup2\n    /* \"#utility.yul\":13023:13043   */\n  sub\n    /* \"#utility.yul\":13018:13020   */\n  0x60\n    /* \"#utility.yul\":13007:13016   */\n  dup4\n    /* \"#utility.yul\":13003:13021   */\n  add\n    /* \"#utility.yul\":12996:13044   */\n  mstore\n    /* \"#utility.yul\":13061:13169   */\n  tag_283\n    /* \"#utility.yul\":13164:13168   */\n  dup2\n    /* \"#utility.yul\":13155:13161   */\n  dup6\n    /* \"#utility.yul\":13061:13169   */\n  tag_134\n  jump\t// in\ntag_283:\n    /* \"#utility.yul\":13053:13169   */\n  swap1\n  pop\n    /* \"#utility.yul\":13217:13226   */\n  dup2\n    /* \"#utility.yul\":13211:13215   */\n  dup2\n    /* \"#utility.yul\":13207:13227   */\n  sub\n    /* \"#utility.yul\":13201:13204   */\n  0x80\n    /* \"#utility.yul\":13190:13199   */\n  dup4\n    /* \"#utility.yul\":13186:13205   */\n  add\n    /* \"#utility.yul\":13179:13228   */\n  mstore\n    /* \"#utility.yul\":13245:13321   */\n  tag_284\n    /* \"#utility.yul\":13316:13320   */\n  dup2\n    /* \"#utility.yul\":13307:13313   */\n  dup5\n    /* \"#utility.yul\":13245:13321   */\n  tag_139\n  jump\t// in\ntag_284:\n    /* \"#utility.yul\":13237:13321   */\n  swap1\n  pop\n    /* \"#utility.yul\":12275:13328   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyToken.sol\":119:492  contract MyCollectibles is ERC1155 {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_eae80a2c7bf2c9d096e554e5e4405cf6aefa68f606389f34d4cda8a311083ded 68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4a4c44536a722f6d657461646174615f626c6f636b636861696e2f6d61696e2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":119:492  contract MyCollectibles is ERC1155 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_55\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_56\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_58\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_62\n      swap1\n      tag_61\n      jump\t// in\n    tag_62:\n      dup1\n      iszero\n      tag_63\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_64\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_63)\n    tag_64:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_65:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_65\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_69\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_71\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_77\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_80\n      jumpi\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n    tag_80:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_83\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_83:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_89\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_15\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_84)\n    tag_85:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_102\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_142)\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_150)\n    tag_151:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_91\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_165\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_166)\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_167\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_173\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      0x01\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_176\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_181\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_180)\n    tag_181:\n      0x60\n      swap2\n      pop\n    tag_180:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15156  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15209:15211  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_193:\n      0x01\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_194\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_199\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_198)\n    tag_199:\n      0x60\n      swap2\n      pop\n    tag_198:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15716:15718  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15357  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_206:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_207:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_208:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_209:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_210:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_264\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_209\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_211:\n        /* \"#utility.yul\":641:665   */\n      tag_266\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_210\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_267:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_212:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_269\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_211\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_213:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_214:\n        /* \"#utility.yul\":997:1021   */\n      tag_272\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_213\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_273:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_215:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_275\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_214\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_14:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_278\n      tag_207\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1290:1409   */\n    tag_277:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_279\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_212\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_280\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_215\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_216:\n        /* \"#utility.yul\":1764:1788   */\n      tag_282\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_213\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_17:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_284\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_216\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_217:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_218:\n        /* \"#utility.yul\":2256:2279   */\n      tag_287\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_217\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_288:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_219:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_290\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_218\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_20:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_293\n      tag_207\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2528:2647   */\n    tag_292:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_294\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_219\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_220:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_221:\n        /* \"#utility.yul\":2963:2984   */\n      tag_297\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_220\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_23:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_299\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_221\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_26:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_302\n      tag_207\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3289:3408   */\n    tag_301:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_303\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_215\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_222:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_223:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:3967   */\n    tag_224:\n        /* \"#utility.yul\":3917:3923   */\n      dup3\n        /* \"#utility.yul\":3912:3915   */\n      dup2\n        /* \"#utility.yul\":3907:3910   */\n      dup4\n        /* \"#utility.yul\":3901:3924   */\n      mcopy\n        /* \"#utility.yul\":3958:3959   */\n      0x00\n        /* \"#utility.yul\":3949:3955   */\n      dup4\n        /* \"#utility.yul\":3944:3947   */\n      dup4\n        /* \"#utility.yul\":3940:3956   */\n      add\n        /* \"#utility.yul\":3933:3960   */\n      mstore\n        /* \"#utility.yul\":3828:3967   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3973:4075   */\n    tag_225:\n        /* \"#utility.yul\":4014:4020   */\n      0x00\n        /* \"#utility.yul\":4065:4067   */\n      0x1f\n        /* \"#utility.yul\":4061:4068   */\n      not\n        /* \"#utility.yul\":4056:4058   */\n      0x1f\n        /* \"#utility.yul\":4049:4054   */\n      dup4\n        /* \"#utility.yul\":4045:4059   */\n      add\n        /* \"#utility.yul\":4041:4069   */\n      and\n        /* \"#utility.yul\":4031:4069   */\n      swap1\n      pop\n        /* \"#utility.yul\":3973:4075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4081:4458   */\n    tag_226:\n        /* \"#utility.yul\":4169:4172   */\n      0x00\n        /* \"#utility.yul\":4197:4236   */\n      tag_309\n        /* \"#utility.yul\":4230:4235   */\n      dup3\n        /* \"#utility.yul\":4197:4236   */\n      tag_222\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4252:4323   */\n      tag_310\n        /* \"#utility.yul\":4316:4322   */\n      dup2\n        /* \"#utility.yul\":4311:4314   */\n      dup6\n        /* \"#utility.yul\":4252:4323   */\n      tag_223\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4245:4323   */\n      swap4\n      pop\n        /* \"#utility.yul\":4332:4397   */\n      tag_311\n        /* \"#utility.yul\":4390:4396   */\n      dup2\n        /* \"#utility.yul\":4385:4388   */\n      dup6\n        /* \"#utility.yul\":4378:4382   */\n      0x20\n        /* \"#utility.yul\":4371:4376   */\n      dup7\n        /* \"#utility.yul\":4367:4383   */\n      add\n        /* \"#utility.yul\":4332:4397   */\n      tag_224\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4422:4451   */\n      tag_312\n        /* \"#utility.yul\":4444:4450   */\n      dup2\n        /* \"#utility.yul\":4422:4451   */\n      tag_225\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4417:4420   */\n      dup5\n        /* \"#utility.yul\":4413:4452   */\n      add\n        /* \"#utility.yul\":4406:4452   */\n      swap2\n      pop\n        /* \"#utility.yul\":4173:4458   */\n      pop\n        /* \"#utility.yul\":4081:4458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4464:4777   */\n    tag_29:\n        /* \"#utility.yul\":4577:4581   */\n      0x00\n        /* \"#utility.yul\":4615:4617   */\n      0x20\n        /* \"#utility.yul\":4604:4613   */\n      dup3\n        /* \"#utility.yul\":4600:4618   */\n      add\n        /* \"#utility.yul\":4592:4618   */\n      swap1\n      pop\n        /* \"#utility.yul\":4664:4673   */\n      dup2\n        /* \"#utility.yul\":4658:4662   */\n      dup2\n        /* \"#utility.yul\":4654:4674   */\n      sub\n        /* \"#utility.yul\":4650:4651   */\n      0x00\n        /* \"#utility.yul\":4639:4648   */\n      dup4\n        /* \"#utility.yul\":4635:4652   */\n      add\n        /* \"#utility.yul\":4628:4675   */\n      mstore\n        /* \"#utility.yul\":4692:4770   */\n      tag_314\n        /* \"#utility.yul\":4765:4769   */\n      dup2\n        /* \"#utility.yul\":4756:4762   */\n      dup5\n        /* \"#utility.yul\":4692:4770   */\n      tag_226\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4684:4770   */\n      swap1\n      pop\n        /* \"#utility.yul\":4464:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:4900   */\n    tag_227:\n        /* \"#utility.yul\":4892:4893   */\n      0x00\n        /* \"#utility.yul\":4889:4890   */\n      dup1\n        /* \"#utility.yul\":4882:4894   */\n      revert\n        /* \"#utility.yul\":4906:5086   */\n    tag_82:\n        /* \"#utility.yul\":4954:5031   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4951:4952   */\n      0x00\n        /* \"#utility.yul\":4944:5032   */\n      mstore\n        /* \"#utility.yul\":5051:5055   */\n      0x41\n        /* \"#utility.yul\":5048:5049   */\n      0x04\n        /* \"#utility.yul\":5041:5056   */\n      mstore\n        /* \"#utility.yul\":5075:5079   */\n      0x24\n        /* \"#utility.yul\":5072:5073   */\n      0x00\n        /* \"#utility.yul\":5065:5080   */\n      revert\n        /* \"#utility.yul\":5092:5373   */\n    tag_228:\n        /* \"#utility.yul\":5175:5202   */\n      tag_318\n        /* \"#utility.yul\":5197:5201   */\n      dup3\n        /* \"#utility.yul\":5175:5202   */\n      tag_225\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5167:5173   */\n      dup2\n        /* \"#utility.yul\":5163:5203   */\n      add\n        /* \"#utility.yul\":5305:5311   */\n      dup2\n        /* \"#utility.yul\":5293:5303   */\n      dup2\n        /* \"#utility.yul\":5290:5312   */\n      lt\n        /* \"#utility.yul\":5269:5287   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5257:5267   */\n      dup3\n        /* \"#utility.yul\":5254:5288   */\n      gt\n        /* \"#utility.yul\":5251:5313   */\n      or\n        /* \"#utility.yul\":5248:5336   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":5316:5334   */\n      tag_320\n      tag_82\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5248:5336   */\n    tag_319:\n        /* \"#utility.yul\":5356:5366   */\n      dup1\n        /* \"#utility.yul\":5352:5354   */\n      0x40\n        /* \"#utility.yul\":5345:5367   */\n      mstore\n        /* \"#utility.yul\":5135:5373   */\n      pop\n        /* \"#utility.yul\":5092:5373   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5379:5508   */\n    tag_229:\n        /* \"#utility.yul\":5413:5419   */\n      0x00\n        /* \"#utility.yul\":5440:5460   */\n      tag_322\n      tag_206\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5430:5460   */\n      swap1\n      pop\n        /* \"#utility.yul\":5469:5502   */\n      tag_323\n        /* \"#utility.yul\":5497:5501   */\n      dup3\n        /* \"#utility.yul\":5489:5495   */\n      dup3\n        /* \"#utility.yul\":5469:5502   */\n      tag_228\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5379:5508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5514:5825   */\n    tag_230:\n        /* \"#utility.yul\":5591:5595   */\n      0x00\n        /* \"#utility.yul\":5681:5699   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5673:5679   */\n      dup3\n        /* \"#utility.yul\":5670:5700   */\n      gt\n        /* \"#utility.yul\":5667:5723   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":5703:5721   */\n      tag_326\n      tag_82\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5667:5723   */\n    tag_325:\n        /* \"#utility.yul\":5753:5757   */\n      0x20\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5741:5758   */\n      mul\n        /* \"#utility.yul\":5733:5758   */\n      swap1\n      pop\n        /* \"#utility.yul\":5813:5817   */\n      0x20\n        /* \"#utility.yul\":5807:5811   */\n      dup2\n        /* \"#utility.yul\":5803:5818   */\n      add\n        /* \"#utility.yul\":5795:5818   */\n      swap1\n      pop\n        /* \"#utility.yul\":5514:5825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5831:5948   */\n    tag_231:\n        /* \"#utility.yul\":5940:5941   */\n      0x00\n        /* \"#utility.yul\":5937:5938   */\n      dup1\n        /* \"#utility.yul\":5930:5942   */\n      revert\n        /* \"#utility.yul\":5971:6681   */\n    tag_232:\n        /* \"#utility.yul\":6067:6072   */\n      0x00\n        /* \"#utility.yul\":6092:6173   */\n      tag_329\n        /* \"#utility.yul\":6108:6172   */\n      tag_330\n        /* \"#utility.yul\":6165:6171   */\n      dup5\n        /* \"#utility.yul\":6108:6172   */\n      tag_230\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":6092:6173   */\n      tag_229\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6083:6173   */\n      swap1\n      pop\n        /* \"#utility.yul\":6193:6198   */\n      dup1\n        /* \"#utility.yul\":6222:6228   */\n      dup4\n        /* \"#utility.yul\":6215:6220   */\n      dup3\n        /* \"#utility.yul\":6208:6229   */\n      mstore\n        /* \"#utility.yul\":6256:6260   */\n      0x20\n        /* \"#utility.yul\":6249:6254   */\n      dup3\n        /* \"#utility.yul\":6245:6261   */\n      add\n        /* \"#utility.yul\":6238:6261   */\n      swap1\n      pop\n        /* \"#utility.yul\":6309:6313   */\n      0x20\n        /* \"#utility.yul\":6301:6307   */\n      dup5\n        /* \"#utility.yul\":6297:6314   */\n      mul\n        /* \"#utility.yul\":6289:6295   */\n      dup4\n        /* \"#utility.yul\":6285:6315   */\n      add\n        /* \"#utility.yul\":6338:6341   */\n      dup6\n        /* \"#utility.yul\":6330:6336   */\n      dup2\n        /* \"#utility.yul\":6327:6342   */\n      gt\n        /* \"#utility.yul\":6324:6446   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":6357:6436   */\n      tag_332\n      tag_231\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6324:6446   */\n    tag_331:\n        /* \"#utility.yul\":6472:6478   */\n      dup4\n        /* \"#utility.yul\":6455:6675   */\n    tag_333:\n        /* \"#utility.yul\":6489:6495   */\n      dup2\n        /* \"#utility.yul\":6484:6487   */\n      dup2\n        /* \"#utility.yul\":6481:6496   */\n      lt\n        /* \"#utility.yul\":6455:6675   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":6564:6567   */\n      dup1\n        /* \"#utility.yul\":6593:6630   */\n      tag_336\n        /* \"#utility.yul\":6626:6629   */\n      dup9\n        /* \"#utility.yul\":6614:6624   */\n      dup3\n        /* \"#utility.yul\":6593:6630   */\n      tag_215\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6588:6591   */\n      dup5\n        /* \"#utility.yul\":6581:6631   */\n      mstore\n        /* \"#utility.yul\":6660:6664   */\n      0x20\n        /* \"#utility.yul\":6655:6658   */\n      dup5\n        /* \"#utility.yul\":6651:6665   */\n      add\n        /* \"#utility.yul\":6644:6665   */\n      swap4\n      pop\n        /* \"#utility.yul\":6531:6675   */\n      pop\n        /* \"#utility.yul\":6515:6519   */\n      0x20\n        /* \"#utility.yul\":6510:6513   */\n      dup2\n        /* \"#utility.yul\":6506:6520   */\n      add\n        /* \"#utility.yul\":6499:6520   */\n      swap1\n      pop\n        /* \"#utility.yul\":6455:6675   */\n      jump(tag_333)\n    tag_335:\n        /* \"#utility.yul\":6459:6480   */\n      pop\n        /* \"#utility.yul\":6073:6681   */\n      pop\n      pop\n        /* \"#utility.yul\":5971:6681   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6704:7074   */\n    tag_233:\n        /* \"#utility.yul\":6775:6780   */\n      0x00\n        /* \"#utility.yul\":6824:6827   */\n      dup3\n        /* \"#utility.yul\":6817:6821   */\n      0x1f\n        /* \"#utility.yul\":6809:6815   */\n      dup4\n        /* \"#utility.yul\":6805:6822   */\n      add\n        /* \"#utility.yul\":6801:6828   */\n      slt\n        /* \"#utility.yul\":6791:6913   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":6832:6911   */\n      tag_339\n      tag_227\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6791:6913   */\n    tag_338:\n        /* \"#utility.yul\":6949:6955   */\n      dup2\n        /* \"#utility.yul\":6936:6956   */\n      calldataload\n        /* \"#utility.yul\":6974:7068   */\n      tag_340\n        /* \"#utility.yul\":7064:7067   */\n      dup5\n        /* \"#utility.yul\":7056:7062   */\n      dup3\n        /* \"#utility.yul\":7049:7053   */\n      0x20\n        /* \"#utility.yul\":7041:7047   */\n      dup7\n        /* \"#utility.yul\":7037:7054   */\n      add\n        /* \"#utility.yul\":6974:7068   */\n      tag_232\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6965:7068   */\n      swap2\n      pop\n        /* \"#utility.yul\":6781:7074   */\n      pop\n        /* \"#utility.yul\":6704:7074   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7080:7197   */\n    tag_234:\n        /* \"#utility.yul\":7189:7190   */\n      0x00\n        /* \"#utility.yul\":7186:7187   */\n      dup1\n        /* \"#utility.yul\":7179:7191   */\n      revert\n        /* \"#utility.yul\":7203:7510   */\n    tag_235:\n        /* \"#utility.yul\":7264:7268   */\n      0x00\n        /* \"#utility.yul\":7354:7372   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7346:7352   */\n      dup3\n        /* \"#utility.yul\":7343:7373   */\n      gt\n        /* \"#utility.yul\":7340:7396   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":7376:7394   */\n      tag_344\n      tag_82\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7340:7396   */\n    tag_343:\n        /* \"#utility.yul\":7414:7443   */\n      tag_345\n        /* \"#utility.yul\":7436:7442   */\n      dup3\n        /* \"#utility.yul\":7414:7443   */\n      tag_225\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7406:7443   */\n      swap1\n      pop\n        /* \"#utility.yul\":7498:7502   */\n      0x20\n        /* \"#utility.yul\":7492:7496   */\n      dup2\n        /* \"#utility.yul\":7488:7503   */\n      add\n        /* \"#utility.yul\":7480:7503   */\n      swap1\n      pop\n        /* \"#utility.yul\":7203:7510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7516:7664   */\n    tag_236:\n        /* \"#utility.yul\":7614:7620   */\n      dup3\n        /* \"#utility.yul\":7609:7612   */\n      dup2\n        /* \"#utility.yul\":7604:7607   */\n      dup4\n        /* \"#utility.yul\":7591:7621   */\n      calldatacopy\n        /* \"#utility.yul\":7655:7656   */\n      0x00\n        /* \"#utility.yul\":7646:7652   */\n      dup4\n        /* \"#utility.yul\":7641:7644   */\n      dup4\n        /* \"#utility.yul\":7637:7653   */\n      add\n        /* \"#utility.yul\":7630:7657   */\n      mstore\n        /* \"#utility.yul\":7516:7664   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7670:8093   */\n    tag_237:\n        /* \"#utility.yul\":7747:7752   */\n      0x00\n        /* \"#utility.yul\":7772:7837   */\n      tag_348\n        /* \"#utility.yul\":7788:7836   */\n      tag_349\n        /* \"#utility.yul\":7829:7835   */\n      dup5\n        /* \"#utility.yul\":7788:7836   */\n      tag_235\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7772:7837   */\n      tag_229\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7763:7837   */\n      swap1\n      pop\n        /* \"#utility.yul\":7860:7866   */\n      dup3\n        /* \"#utility.yul\":7853:7858   */\n      dup2\n        /* \"#utility.yul\":7846:7867   */\n      mstore\n        /* \"#utility.yul\":7898:7902   */\n      0x20\n        /* \"#utility.yul\":7891:7896   */\n      dup2\n        /* \"#utility.yul\":7887:7903   */\n      add\n        /* \"#utility.yul\":7936:7939   */\n      dup5\n        /* \"#utility.yul\":7927:7933   */\n      dup5\n        /* \"#utility.yul\":7922:7925   */\n      dup5\n        /* \"#utility.yul\":7918:7934   */\n      add\n        /* \"#utility.yul\":7915:7940   */\n      gt\n        /* \"#utility.yul\":7912:8024   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":7943:8022   */\n      tag_351\n      tag_234\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7912:8024   */\n    tag_350:\n        /* \"#utility.yul\":8033:8087   */\n      tag_352\n        /* \"#utility.yul\":8080:8086   */\n      dup5\n        /* \"#utility.yul\":8075:8078   */\n      dup3\n        /* \"#utility.yul\":8070:8073   */\n      dup6\n        /* \"#utility.yul\":8033:8087   */\n      tag_236\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":7753:8093   */\n      pop\n        /* \"#utility.yul\":7670:8093   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8112:8450   */\n    tag_238:\n        /* \"#utility.yul\":8167:8172   */\n      0x00\n        /* \"#utility.yul\":8216:8219   */\n      dup3\n        /* \"#utility.yul\":8209:8213   */\n      0x1f\n        /* \"#utility.yul\":8201:8207   */\n      dup4\n        /* \"#utility.yul\":8197:8214   */\n      add\n        /* \"#utility.yul\":8193:8220   */\n      slt\n        /* \"#utility.yul\":8183:8305   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":8224:8303   */\n      tag_355\n      tag_227\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8183:8305   */\n    tag_354:\n        /* \"#utility.yul\":8341:8347   */\n      dup2\n        /* \"#utility.yul\":8328:8348   */\n      calldataload\n        /* \"#utility.yul\":8366:8444   */\n      tag_356\n        /* \"#utility.yul\":8440:8443   */\n      dup5\n        /* \"#utility.yul\":8432:8438   */\n      dup3\n        /* \"#utility.yul\":8425:8429   */\n      0x20\n        /* \"#utility.yul\":8417:8423   */\n      dup7\n        /* \"#utility.yul\":8413:8430   */\n      add\n        /* \"#utility.yul\":8366:8444   */\n      tag_237\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":8357:8444   */\n      swap2\n      pop\n        /* \"#utility.yul\":8173:8450   */\n      pop\n        /* \"#utility.yul\":8112:8450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8456:9965   */\n    tag_32:\n        /* \"#utility.yul\":8610:8616   */\n      0x00\n        /* \"#utility.yul\":8618:8624   */\n      dup1\n        /* \"#utility.yul\":8626:8632   */\n      0x00\n        /* \"#utility.yul\":8634:8640   */\n      dup1\n        /* \"#utility.yul\":8642:8648   */\n      0x00\n        /* \"#utility.yul\":8691:8694   */\n      0xa0\n        /* \"#utility.yul\":8679:8688   */\n      dup7\n        /* \"#utility.yul\":8670:8677   */\n      dup9\n        /* \"#utility.yul\":8666:8689   */\n      sub\n        /* \"#utility.yul\":8662:8695   */\n      slt\n        /* \"#utility.yul\":8659:8779   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":8698:8777   */\n      tag_359\n      tag_207\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8659:8779   */\n    tag_358:\n        /* \"#utility.yul\":8818:8819   */\n      0x00\n        /* \"#utility.yul\":8843:8896   */\n      tag_360\n        /* \"#utility.yul\":8888:8895   */\n      dup9\n        /* \"#utility.yul\":8879:8885   */\n      dup3\n        /* \"#utility.yul\":8868:8877   */\n      dup10\n        /* \"#utility.yul\":8864:8886   */\n      add\n        /* \"#utility.yul\":8843:8896   */\n      tag_212\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8833:8896   */\n      swap6\n      pop\n        /* \"#utility.yul\":8789:8906   */\n      pop\n        /* \"#utility.yul\":8945:8947   */\n      0x20\n        /* \"#utility.yul\":8971:9024   */\n      tag_361\n        /* \"#utility.yul\":9016:9023   */\n      dup9\n        /* \"#utility.yul\":9007:9013   */\n      dup3\n        /* \"#utility.yul\":8996:9005   */\n      dup10\n        /* \"#utility.yul\":8992:9014   */\n      add\n        /* \"#utility.yul\":8971:9024   */\n      tag_212\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":8961:9024   */\n      swap5\n      pop\n        /* \"#utility.yul\":8916:9034   */\n      pop\n        /* \"#utility.yul\":9101:9103   */\n      0x40\n        /* \"#utility.yul\":9090:9099   */\n      dup7\n        /* \"#utility.yul\":9086:9104   */\n      add\n        /* \"#utility.yul\":9073:9105   */\n      calldataload\n        /* \"#utility.yul\":9132:9150   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9124:9130   */\n      dup2\n        /* \"#utility.yul\":9121:9151   */\n      gt\n        /* \"#utility.yul\":9118:9235   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":9154:9233   */\n      tag_363\n      tag_208\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":9118:9235   */\n    tag_362:\n        /* \"#utility.yul\":9259:9337   */\n      tag_364\n        /* \"#utility.yul\":9329:9336   */\n      dup9\n        /* \"#utility.yul\":9320:9326   */\n      dup3\n        /* \"#utility.yul\":9309:9318   */\n      dup10\n        /* \"#utility.yul\":9305:9327   */\n      add\n        /* \"#utility.yul\":9259:9337   */\n      tag_233\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9249:9337   */\n      swap4\n      pop\n        /* \"#utility.yul\":9044:9347   */\n      pop\n        /* \"#utility.yul\":9414:9416   */\n      0x60\n        /* \"#utility.yul\":9403:9412   */\n      dup7\n        /* \"#utility.yul\":9399:9417   */\n      add\n        /* \"#utility.yul\":9386:9418   */\n      calldataload\n        /* \"#utility.yul\":9445:9463   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9437:9443   */\n      dup2\n        /* \"#utility.yul\":9434:9464   */\n      gt\n        /* \"#utility.yul\":9431:9548   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":9467:9546   */\n      tag_366\n      tag_208\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9431:9548   */\n    tag_365:\n        /* \"#utility.yul\":9572:9650   */\n      tag_367\n        /* \"#utility.yul\":9642:9649   */\n      dup9\n        /* \"#utility.yul\":9633:9639   */\n      dup3\n        /* \"#utility.yul\":9622:9631   */\n      dup10\n        /* \"#utility.yul\":9618:9640   */\n      add\n        /* \"#utility.yul\":9572:9650   */\n      tag_233\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":9562:9650   */\n      swap3\n      pop\n        /* \"#utility.yul\":9357:9660   */\n      pop\n        /* \"#utility.yul\":9727:9730   */\n      0x80\n        /* \"#utility.yul\":9716:9725   */\n      dup7\n        /* \"#utility.yul\":9712:9731   */\n      add\n        /* \"#utility.yul\":9699:9732   */\n      calldataload\n        /* \"#utility.yul\":9759:9777   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9751:9757   */\n      dup2\n        /* \"#utility.yul\":9748:9778   */\n      gt\n        /* \"#utility.yul\":9745:9862   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":9781:9860   */\n      tag_369\n      tag_208\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9745:9862   */\n    tag_368:\n        /* \"#utility.yul\":9886:9948   */\n      tag_370\n        /* \"#utility.yul\":9940:9947   */\n      dup9\n        /* \"#utility.yul\":9931:9937   */\n      dup3\n        /* \"#utility.yul\":9920:9929   */\n      dup10\n        /* \"#utility.yul\":9916:9938   */\n      add\n        /* \"#utility.yul\":9886:9948   */\n      tag_238\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9876:9948   */\n      swap2\n      pop\n        /* \"#utility.yul\":9670:9958   */\n      pop\n        /* \"#utility.yul\":8456:9965   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9971:10282   */\n    tag_239:\n        /* \"#utility.yul\":10048:10052   */\n      0x00\n        /* \"#utility.yul\":10138:10156   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10130:10136   */\n      dup3\n        /* \"#utility.yul\":10127:10157   */\n      gt\n        /* \"#utility.yul\":10124:10180   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":10160:10178   */\n      tag_373\n      tag_82\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10124:10180   */\n    tag_372:\n        /* \"#utility.yul\":10210:10214   */\n      0x20\n        /* \"#utility.yul\":10202:10208   */\n      dup3\n        /* \"#utility.yul\":10198:10215   */\n      mul\n        /* \"#utility.yul\":10190:10215   */\n      swap1\n      pop\n        /* \"#utility.yul\":10270:10274   */\n      0x20\n        /* \"#utility.yul\":10264:10268   */\n      dup2\n        /* \"#utility.yul\":10260:10275   */\n      add\n        /* \"#utility.yul\":10252:10275   */\n      swap1\n      pop\n        /* \"#utility.yul\":9971:10282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10305:11015   */\n    tag_240:\n        /* \"#utility.yul\":10401:10406   */\n      0x00\n        /* \"#utility.yul\":10426:10507   */\n      tag_375\n        /* \"#utility.yul\":10442:10506   */\n      tag_376\n        /* \"#utility.yul\":10499:10505   */\n      dup5\n        /* \"#utility.yul\":10442:10506   */\n      tag_239\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10426:10507   */\n      tag_229\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10417:10507   */\n      swap1\n      pop\n        /* \"#utility.yul\":10527:10532   */\n      dup1\n        /* \"#utility.yul\":10556:10562   */\n      dup4\n        /* \"#utility.yul\":10549:10554   */\n      dup3\n        /* \"#utility.yul\":10542:10563   */\n      mstore\n        /* \"#utility.yul\":10590:10594   */\n      0x20\n        /* \"#utility.yul\":10583:10588   */\n      dup3\n        /* \"#utility.yul\":10579:10595   */\n      add\n        /* \"#utility.yul\":10572:10595   */\n      swap1\n      pop\n        /* \"#utility.yul\":10643:10647   */\n      0x20\n        /* \"#utility.yul\":10635:10641   */\n      dup5\n        /* \"#utility.yul\":10631:10648   */\n      mul\n        /* \"#utility.yul\":10623:10629   */\n      dup4\n        /* \"#utility.yul\":10619:10649   */\n      add\n        /* \"#utility.yul\":10672:10675   */\n      dup6\n        /* \"#utility.yul\":10664:10670   */\n      dup2\n        /* \"#utility.yul\":10661:10676   */\n      gt\n        /* \"#utility.yul\":10658:10780   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":10691:10770   */\n      tag_378\n      tag_231\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10658:10780   */\n    tag_377:\n        /* \"#utility.yul\":10806:10812   */\n      dup4\n        /* \"#utility.yul\":10789:11009   */\n    tag_379:\n        /* \"#utility.yul\":10823:10829   */\n      dup2\n        /* \"#utility.yul\":10818:10821   */\n      dup2\n        /* \"#utility.yul\":10815:10830   */\n      lt\n        /* \"#utility.yul\":10789:11009   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":10898:10901   */\n      dup1\n        /* \"#utility.yul\":10927:10964   */\n      tag_382\n        /* \"#utility.yul\":10960:10963   */\n      dup9\n        /* \"#utility.yul\":10948:10958   */\n      dup3\n        /* \"#utility.yul\":10927:10964   */\n      tag_212\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":10922:10925   */\n      dup5\n        /* \"#utility.yul\":10915:10965   */\n      mstore\n        /* \"#utility.yul\":10994:10998   */\n      0x20\n        /* \"#utility.yul\":10989:10992   */\n      dup5\n        /* \"#utility.yul\":10985:10999   */\n      add\n        /* \"#utility.yul\":10978:10999   */\n      swap4\n      pop\n        /* \"#utility.yul\":10865:11009   */\n      pop\n        /* \"#utility.yul\":10849:10853   */\n      0x20\n        /* \"#utility.yul\":10844:10847   */\n      dup2\n        /* \"#utility.yul\":10840:10854   */\n      add\n        /* \"#utility.yul\":10833:10854   */\n      swap1\n      pop\n        /* \"#utility.yul\":10789:11009   */\n      jump(tag_379)\n    tag_381:\n        /* \"#utility.yul\":10793:10814   */\n      pop\n        /* \"#utility.yul\":10407:11015   */\n      pop\n      pop\n        /* \"#utility.yul\":10305:11015   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11038:11408   */\n    tag_241:\n        /* \"#utility.yul\":11109:11114   */\n      0x00\n        /* \"#utility.yul\":11158:11161   */\n      dup3\n        /* \"#utility.yul\":11151:11155   */\n      0x1f\n        /* \"#utility.yul\":11143:11149   */\n      dup4\n        /* \"#utility.yul\":11139:11156   */\n      add\n        /* \"#utility.yul\":11135:11162   */\n      slt\n        /* \"#utility.yul\":11125:11247   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":11166:11245   */\n      tag_385\n      tag_227\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11125:11247   */\n    tag_384:\n        /* \"#utility.yul\":11283:11289   */\n      dup2\n        /* \"#utility.yul\":11270:11290   */\n      calldataload\n        /* \"#utility.yul\":11308:11402   */\n      tag_386\n        /* \"#utility.yul\":11398:11401   */\n      dup5\n        /* \"#utility.yul\":11390:11396   */\n      dup3\n        /* \"#utility.yul\":11383:11387   */\n      0x20\n        /* \"#utility.yul\":11375:11381   */\n      dup7\n        /* \"#utility.yul\":11371:11388   */\n      add\n        /* \"#utility.yul\":11308:11402   */\n      tag_240\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11299:11402   */\n      swap2\n      pop\n        /* \"#utility.yul\":11115:11408   */\n      pop\n        /* \"#utility.yul\":11038:11408   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11414:12308   */\n    tag_36:\n        /* \"#utility.yul\":11532:11538   */\n      0x00\n        /* \"#utility.yul\":11540:11546   */\n      dup1\n        /* \"#utility.yul\":11589:11591   */\n      0x40\n        /* \"#utility.yul\":11577:11586   */\n      dup4\n        /* \"#utility.yul\":11568:11575   */\n      dup6\n        /* \"#utility.yul\":11564:11587   */\n      sub\n        /* \"#utility.yul\":11560:11592   */\n      slt\n        /* \"#utility.yul\":11557:11676   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":11595:11674   */\n      tag_389\n      tag_207\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11557:11676   */\n    tag_388:\n        /* \"#utility.yul\":11743:11744   */\n      0x00\n        /* \"#utility.yul\":11732:11741   */\n      dup4\n        /* \"#utility.yul\":11728:11745   */\n      add\n        /* \"#utility.yul\":11715:11746   */\n      calldataload\n        /* \"#utility.yul\":11773:11791   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11765:11771   */\n      dup2\n        /* \"#utility.yul\":11762:11792   */\n      gt\n        /* \"#utility.yul\":11759:11876   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":11795:11874   */\n      tag_391\n      tag_208\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":11759:11876   */\n    tag_390:\n        /* \"#utility.yul\":11900:11978   */\n      tag_392\n        /* \"#utility.yul\":11970:11977   */\n      dup6\n        /* \"#utility.yul\":11961:11967   */\n      dup3\n        /* \"#utility.yul\":11950:11959   */\n      dup7\n        /* \"#utility.yul\":11946:11968   */\n      add\n        /* \"#utility.yul\":11900:11978   */\n      tag_241\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11890:11978   */\n      swap3\n      pop\n        /* \"#utility.yul\":11686:11988   */\n      pop\n        /* \"#utility.yul\":12055:12057   */\n      0x20\n        /* \"#utility.yul\":12044:12053   */\n      dup4\n        /* \"#utility.yul\":12040:12058   */\n      add\n        /* \"#utility.yul\":12027:12059   */\n      calldataload\n        /* \"#utility.yul\":12086:12104   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12078:12084   */\n      dup2\n        /* \"#utility.yul\":12075:12105   */\n      gt\n        /* \"#utility.yul\":12072:12189   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":12108:12187   */\n      tag_394\n      tag_208\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":12072:12189   */\n    tag_393:\n        /* \"#utility.yul\":12213:12291   */\n      tag_395\n        /* \"#utility.yul\":12283:12290   */\n      dup6\n        /* \"#utility.yul\":12274:12280   */\n      dup3\n        /* \"#utility.yul\":12263:12272   */\n      dup7\n        /* \"#utility.yul\":12259:12281   */\n      add\n        /* \"#utility.yul\":12213:12291   */\n      tag_233\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":12203:12291   */\n      swap2\n      pop\n        /* \"#utility.yul\":11998:12301   */\n      pop\n        /* \"#utility.yul\":11414:12308   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12314:12428   */\n    tag_242:\n        /* \"#utility.yul\":12381:12387   */\n      0x00\n        /* \"#utility.yul\":12415:12420   */\n      dup2\n        /* \"#utility.yul\":12409:12421   */\n      mload\n        /* \"#utility.yul\":12399:12421   */\n      swap1\n      pop\n        /* \"#utility.yul\":12314:12428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12434:12618   */\n    tag_243:\n        /* \"#utility.yul\":12533:12544   */\n      0x00\n        /* \"#utility.yul\":12567:12573   */\n      dup3\n        /* \"#utility.yul\":12562:12565   */\n      dup3\n        /* \"#utility.yul\":12555:12574   */\n      mstore\n        /* \"#utility.yul\":12607:12611   */\n      0x20\n        /* \"#utility.yul\":12602:12605   */\n      dup3\n        /* \"#utility.yul\":12598:12612   */\n      add\n        /* \"#utility.yul\":12583:12612   */\n      swap1\n      pop\n        /* \"#utility.yul\":12434:12618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12624:12756   */\n    tag_244:\n        /* \"#utility.yul\":12691:12695   */\n      0x00\n        /* \"#utility.yul\":12714:12717   */\n      dup2\n        /* \"#utility.yul\":12706:12717   */\n      swap1\n      pop\n        /* \"#utility.yul\":12744:12748   */\n      0x20\n        /* \"#utility.yul\":12739:12742   */\n      dup3\n        /* \"#utility.yul\":12735:12749   */\n      add\n        /* \"#utility.yul\":12727:12749   */\n      swap1\n      pop\n        /* \"#utility.yul\":12624:12756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12762:12870   */\n    tag_245:\n        /* \"#utility.yul\":12839:12863   */\n      tag_400\n        /* \"#utility.yul\":12857:12862   */\n      dup2\n        /* \"#utility.yul\":12839:12863   */\n      tag_213\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12834:12837   */\n      dup3\n        /* \"#utility.yul\":12827:12864   */\n      mstore\n        /* \"#utility.yul\":12762:12870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12876:13055   */\n    tag_246:\n        /* \"#utility.yul\":12945:12955   */\n      0x00\n        /* \"#utility.yul\":12966:13012   */\n      tag_402\n        /* \"#utility.yul\":13008:13011   */\n      dup4\n        /* \"#utility.yul\":13000:13006   */\n      dup4\n        /* \"#utility.yul\":12966:13012   */\n      tag_245\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":13044:13048   */\n      0x20\n        /* \"#utility.yul\":13039:13042   */\n      dup4\n        /* \"#utility.yul\":13035:13049   */\n      add\n        /* \"#utility.yul\":13021:13049   */\n      swap1\n      pop\n        /* \"#utility.yul\":12876:13055   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13061:13174   */\n    tag_247:\n        /* \"#utility.yul\":13131:13135   */\n      0x00\n        /* \"#utility.yul\":13163:13167   */\n      0x20\n        /* \"#utility.yul\":13158:13161   */\n      dup3\n        /* \"#utility.yul\":13154:13168   */\n      add\n        /* \"#utility.yul\":13146:13168   */\n      swap1\n      pop\n        /* \"#utility.yul\":13061:13174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13210:13942   */\n    tag_248:\n        /* \"#utility.yul\":13329:13332   */\n      0x00\n        /* \"#utility.yul\":13358:13412   */\n      tag_405\n        /* \"#utility.yul\":13406:13411   */\n      dup3\n        /* \"#utility.yul\":13358:13412   */\n      tag_242\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":13428:13514   */\n      tag_406\n        /* \"#utility.yul\":13507:13513   */\n      dup2\n        /* \"#utility.yul\":13502:13505   */\n      dup6\n        /* \"#utility.yul\":13428:13514   */\n      tag_243\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":13421:13514   */\n      swap4\n      pop\n        /* \"#utility.yul\":13538:13594   */\n      tag_407\n        /* \"#utility.yul\":13588:13593   */\n      dup4\n        /* \"#utility.yul\":13538:13594   */\n      tag_244\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":13617:13624   */\n      dup1\n        /* \"#utility.yul\":13648:13649   */\n      0x00\n        /* \"#utility.yul\":13633:13917   */\n    tag_408:\n        /* \"#utility.yul\":13658:13664   */\n      dup4\n        /* \"#utility.yul\":13655:13656   */\n      dup2\n        /* \"#utility.yul\":13652:13665   */\n      lt\n        /* \"#utility.yul\":13633:13917   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":13734:13740   */\n      dup2\n        /* \"#utility.yul\":13728:13741   */\n      mload\n        /* \"#utility.yul\":13761:13824   */\n      tag_411\n        /* \"#utility.yul\":13820:13823   */\n      dup9\n        /* \"#utility.yul\":13805:13818   */\n      dup3\n        /* \"#utility.yul\":13761:13824   */\n      tag_246\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":13754:13824   */\n      swap8\n      pop\n        /* \"#utility.yul\":13847:13907   */\n      tag_412\n        /* \"#utility.yul\":13900:13906   */\n      dup4\n        /* \"#utility.yul\":13847:13907   */\n      tag_247\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":13837:13907   */\n      swap3\n      pop\n        /* \"#utility.yul\":13693:13917   */\n      pop\n        /* \"#utility.yul\":13680:13681   */\n      0x01\n        /* \"#utility.yul\":13677:13678   */\n      dup2\n        /* \"#utility.yul\":13673:13682   */\n      add\n        /* \"#utility.yul\":13668:13682   */\n      swap1\n      pop\n        /* \"#utility.yul\":13633:13917   */\n      jump(tag_408)\n    tag_410:\n        /* \"#utility.yul\":13637:13651   */\n      pop\n        /* \"#utility.yul\":13933:13936   */\n      dup6\n        /* \"#utility.yul\":13926:13936   */\n      swap4\n      pop\n        /* \"#utility.yul\":13334:13942   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13210:13942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13948:14321   */\n    tag_39:\n        /* \"#utility.yul\":14091:14095   */\n      0x00\n        /* \"#utility.yul\":14129:14131   */\n      0x20\n        /* \"#utility.yul\":14118:14127   */\n      dup3\n        /* \"#utility.yul\":14114:14132   */\n      add\n        /* \"#utility.yul\":14106:14132   */\n      swap1\n      pop\n        /* \"#utility.yul\":14178:14187   */\n      dup2\n        /* \"#utility.yul\":14172:14176   */\n      dup2\n        /* \"#utility.yul\":14168:14188   */\n      sub\n        /* \"#utility.yul\":14164:14165   */\n      0x00\n        /* \"#utility.yul\":14153:14162   */\n      dup4\n        /* \"#utility.yul\":14149:14166   */\n      add\n        /* \"#utility.yul\":14142:14189   */\n      mstore\n        /* \"#utility.yul\":14206:14314   */\n      tag_414\n        /* \"#utility.yul\":14309:14313   */\n      dup2\n        /* \"#utility.yul\":14300:14306   */\n      dup5\n        /* \"#utility.yul\":14206:14314   */\n      tag_248\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":14198:14314   */\n      swap1\n      pop\n        /* \"#utility.yul\":13948:14321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14327:14443   */\n    tag_249:\n        /* \"#utility.yul\":14397:14418   */\n      tag_416\n        /* \"#utility.yul\":14412:14417   */\n      dup2\n        /* \"#utility.yul\":14397:14418   */\n      tag_220\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":14390:14395   */\n      dup2\n        /* \"#utility.yul\":14387:14419   */\n      eq\n        /* \"#utility.yul\":14377:14437   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":14433:14434   */\n      0x00\n        /* \"#utility.yul\":14430:14431   */\n      dup1\n        /* \"#utility.yul\":14423:14435   */\n      revert\n        /* \"#utility.yul\":14377:14437   */\n    tag_417:\n        /* \"#utility.yul\":14327:14443   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14449:14582   */\n    tag_250:\n        /* \"#utility.yul\":14492:14497   */\n      0x00\n        /* \"#utility.yul\":14530:14536   */\n      dup2\n        /* \"#utility.yul\":14517:14537   */\n      calldataload\n        /* \"#utility.yul\":14508:14537   */\n      swap1\n      pop\n        /* \"#utility.yul\":14546:14576   */\n      tag_419\n        /* \"#utility.yul\":14570:14575   */\n      dup2\n        /* \"#utility.yul\":14546:14576   */\n      tag_249\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":14449:14582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14588:15056   */\n    tag_42:\n        /* \"#utility.yul\":14653:14659   */\n      0x00\n        /* \"#utility.yul\":14661:14667   */\n      dup1\n        /* \"#utility.yul\":14710:14712   */\n      0x40\n        /* \"#utility.yul\":14698:14707   */\n      dup4\n        /* \"#utility.yul\":14689:14696   */\n      dup6\n        /* \"#utility.yul\":14685:14708   */\n      sub\n        /* \"#utility.yul\":14681:14713   */\n      slt\n        /* \"#utility.yul\":14678:14797   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":14716:14795   */\n      tag_422\n      tag_207\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":14678:14797   */\n    tag_421:\n        /* \"#utility.yul\":14836:14837   */\n      0x00\n        /* \"#utility.yul\":14861:14914   */\n      tag_423\n        /* \"#utility.yul\":14906:14913   */\n      dup6\n        /* \"#utility.yul\":14897:14903   */\n      dup3\n        /* \"#utility.yul\":14886:14895   */\n      dup7\n        /* \"#utility.yul\":14882:14904   */\n      add\n        /* \"#utility.yul\":14861:14914   */\n      tag_212\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":14851:14914   */\n      swap3\n      pop\n        /* \"#utility.yul\":14807:14924   */\n      pop\n        /* \"#utility.yul\":14963:14965   */\n      0x20\n        /* \"#utility.yul\":14989:15039   */\n      tag_424\n        /* \"#utility.yul\":15031:15038   */\n      dup6\n        /* \"#utility.yul\":15022:15028   */\n      dup3\n        /* \"#utility.yul\":15011:15020   */\n      dup7\n        /* \"#utility.yul\":15007:15029   */\n      add\n        /* \"#utility.yul\":14989:15039   */\n      tag_250\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":14979:15039   */\n      swap2\n      pop\n        /* \"#utility.yul\":14934:15049   */\n      pop\n        /* \"#utility.yul\":14588:15056   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15062:15536   */\n    tag_46:\n        /* \"#utility.yul\":15130:15136   */\n      0x00\n        /* \"#utility.yul\":15138:15144   */\n      dup1\n        /* \"#utility.yul\":15187:15189   */\n      0x40\n        /* \"#utility.yul\":15175:15184   */\n      dup4\n        /* \"#utility.yul\":15166:15173   */\n      dup6\n        /* \"#utility.yul\":15162:15185   */\n      sub\n        /* \"#utility.yul\":15158:15190   */\n      slt\n        /* \"#utility.yul\":15155:15274   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":15193:15272   */\n      tag_427\n      tag_207\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":15155:15274   */\n    tag_426:\n        /* \"#utility.yul\":15313:15314   */\n      0x00\n        /* \"#utility.yul\":15338:15391   */\n      tag_428\n        /* \"#utility.yul\":15383:15390   */\n      dup6\n        /* \"#utility.yul\":15374:15380   */\n      dup3\n        /* \"#utility.yul\":15363:15372   */\n      dup7\n        /* \"#utility.yul\":15359:15381   */\n      add\n        /* \"#utility.yul\":15338:15391   */\n      tag_212\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":15328:15391   */\n      swap3\n      pop\n        /* \"#utility.yul\":15284:15401   */\n      pop\n        /* \"#utility.yul\":15440:15442   */\n      0x20\n        /* \"#utility.yul\":15466:15519   */\n      tag_429\n        /* \"#utility.yul\":15511:15518   */\n      dup6\n        /* \"#utility.yul\":15502:15508   */\n      dup3\n        /* \"#utility.yul\":15491:15500   */\n      dup7\n        /* \"#utility.yul\":15487:15509   */\n      add\n        /* \"#utility.yul\":15466:15519   */\n      tag_212\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":15456:15519   */\n      swap2\n      pop\n        /* \"#utility.yul\":15411:15529   */\n      pop\n        /* \"#utility.yul\":15062:15536   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15542:16631   */\n    tag_51:\n        /* \"#utility.yul\":15646:15652   */\n      0x00\n        /* \"#utility.yul\":15654:15660   */\n      dup1\n        /* \"#utility.yul\":15662:15668   */\n      0x00\n        /* \"#utility.yul\":15670:15676   */\n      dup1\n        /* \"#utility.yul\":15678:15684   */\n      0x00\n        /* \"#utility.yul\":15727:15730   */\n      0xa0\n        /* \"#utility.yul\":15715:15724   */\n      dup7\n        /* \"#utility.yul\":15706:15713   */\n      dup9\n        /* \"#utility.yul\":15702:15725   */\n      sub\n        /* \"#utility.yul\":15698:15731   */\n      slt\n        /* \"#utility.yul\":15695:15815   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":15734:15813   */\n      tag_432\n      tag_207\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":15695:15815   */\n    tag_431:\n        /* \"#utility.yul\":15854:15855   */\n      0x00\n        /* \"#utility.yul\":15879:15932   */\n      tag_433\n        /* \"#utility.yul\":15924:15931   */\n      dup9\n        /* \"#utility.yul\":15915:15921   */\n      dup3\n        /* \"#utility.yul\":15904:15913   */\n      dup10\n        /* \"#utility.yul\":15900:15922   */\n      add\n        /* \"#utility.yul\":15879:15932   */\n      tag_212\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":15869:15932   */\n      swap6\n      pop\n        /* \"#utility.yul\":15825:15942   */\n      pop\n        /* \"#utility.yul\":15981:15983   */\n      0x20\n        /* \"#utility.yul\":16007:16060   */\n      tag_434\n        /* \"#utility.yul\":16052:16059   */\n      dup9\n        /* \"#utility.yul\":16043:16049   */\n      dup3\n        /* \"#utility.yul\":16032:16041   */\n      dup10\n        /* \"#utility.yul\":16028:16050   */\n      add\n        /* \"#utility.yul\":16007:16060   */\n      tag_212\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":15997:16060   */\n      swap5\n      pop\n        /* \"#utility.yul\":15952:16070   */\n      pop\n        /* \"#utility.yul\":16109:16111   */\n      0x40\n        /* \"#utility.yul\":16135:16188   */\n      tag_435\n        /* \"#utility.yul\":16180:16187   */\n      dup9\n        /* \"#utility.yul\":16171:16177   */\n      dup3\n        /* \"#utility.yul\":16160:16169   */\n      dup10\n        /* \"#utility.yul\":16156:16178   */\n      add\n        /* \"#utility.yul\":16135:16188   */\n      tag_215\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":16125:16188   */\n      swap4\n      pop\n        /* \"#utility.yul\":16080:16198   */\n      pop\n        /* \"#utility.yul\":16237:16239   */\n      0x60\n        /* \"#utility.yul\":16263:16316   */\n      tag_436\n        /* \"#utility.yul\":16308:16315   */\n      dup9\n        /* \"#utility.yul\":16299:16305   */\n      dup3\n        /* \"#utility.yul\":16288:16297   */\n      dup10\n        /* \"#utility.yul\":16284:16306   */\n      add\n        /* \"#utility.yul\":16263:16316   */\n      tag_215\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":16253:16316   */\n      swap3\n      pop\n        /* \"#utility.yul\":16208:16326   */\n      pop\n        /* \"#utility.yul\":16393:16396   */\n      0x80\n        /* \"#utility.yul\":16382:16391   */\n      dup7\n        /* \"#utility.yul\":16378:16397   */\n      add\n        /* \"#utility.yul\":16365:16398   */\n      calldataload\n        /* \"#utility.yul\":16425:16443   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16417:16423   */\n      dup2\n        /* \"#utility.yul\":16414:16444   */\n      gt\n        /* \"#utility.yul\":16411:16528   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":16447:16526   */\n      tag_438\n      tag_208\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":16411:16528   */\n    tag_437:\n        /* \"#utility.yul\":16552:16614   */\n      tag_439\n        /* \"#utility.yul\":16606:16613   */\n      dup9\n        /* \"#utility.yul\":16597:16603   */\n      dup3\n        /* \"#utility.yul\":16586:16595   */\n      dup10\n        /* \"#utility.yul\":16582:16604   */\n      add\n        /* \"#utility.yul\":16552:16614   */\n      tag_238\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":16542:16614   */\n      swap2\n      pop\n        /* \"#utility.yul\":16336:16624   */\n      pop\n        /* \"#utility.yul\":15542:16631   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16637:16817   */\n    tag_251:\n        /* \"#utility.yul\":16685:16762   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16682:16683   */\n      0x00\n        /* \"#utility.yul\":16675:16763   */\n      mstore\n        /* \"#utility.yul\":16782:16786   */\n      0x22\n        /* \"#utility.yul\":16779:16780   */\n      0x04\n        /* \"#utility.yul\":16772:16787   */\n      mstore\n        /* \"#utility.yul\":16806:16810   */\n      0x24\n        /* \"#utility.yul\":16803:16804   */\n      0x00\n        /* \"#utility.yul\":16796:16811   */\n      revert\n        /* \"#utility.yul\":16823:17143   */\n    tag_61:\n        /* \"#utility.yul\":16867:16873   */\n      0x00\n        /* \"#utility.yul\":16904:16905   */\n      0x02\n        /* \"#utility.yul\":16898:16902   */\n      dup3\n        /* \"#utility.yul\":16894:16906   */\n      div\n        /* \"#utility.yul\":16884:16906   */\n      swap1\n      pop\n        /* \"#utility.yul\":16951:16952   */\n      0x01\n        /* \"#utility.yul\":16945:16949   */\n      dup3\n        /* \"#utility.yul\":16941:16953   */\n      and\n        /* \"#utility.yul\":16972:16990   */\n      dup1\n        /* \"#utility.yul\":16962:17043   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":17028:17032   */\n      0x7f\n        /* \"#utility.yul\":17020:17026   */\n      dup3\n        /* \"#utility.yul\":17016:17033   */\n      and\n        /* \"#utility.yul\":17006:17033   */\n      swap2\n      pop\n        /* \"#utility.yul\":16962:17043   */\n    tag_442:\n        /* \"#utility.yul\":17090:17092   */\n      0x20\n        /* \"#utility.yul\":17082:17088   */\n      dup3\n        /* \"#utility.yul\":17079:17093   */\n      lt\n        /* \"#utility.yul\":17059:17077   */\n      dup2\n        /* \"#utility.yul\":17056:17094   */\n      sub\n        /* \"#utility.yul\":17053:17137   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":17109:17127   */\n      tag_444\n      tag_251\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":17053:17137   */\n    tag_443:\n        /* \"#utility.yul\":16874:17143   */\n      pop\n        /* \"#utility.yul\":16823:17143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17149:17267   */\n    tag_252:\n        /* \"#utility.yul\":17236:17260   */\n      tag_446\n        /* \"#utility.yul\":17254:17259   */\n      dup2\n        /* \"#utility.yul\":17236:17260   */\n      tag_210\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":17231:17234   */\n      dup3\n        /* \"#utility.yul\":17224:17261   */\n      mstore\n        /* \"#utility.yul\":17149:17267   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17273:17605   */\n    tag_73:\n        /* \"#utility.yul\":17394:17398   */\n      0x00\n        /* \"#utility.yul\":17432:17434   */\n      0x40\n        /* \"#utility.yul\":17421:17430   */\n      dup3\n        /* \"#utility.yul\":17417:17435   */\n      add\n        /* \"#utility.yul\":17409:17435   */\n      swap1\n      pop\n        /* \"#utility.yul\":17445:17516   */\n      tag_448\n        /* \"#utility.yul\":17513:17514   */\n      0x00\n        /* \"#utility.yul\":17502:17511   */\n      dup4\n        /* \"#utility.yul\":17498:17515   */\n      add\n        /* \"#utility.yul\":17489:17495   */\n      dup6\n        /* \"#utility.yul\":17445:17516   */\n      tag_252\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":17526:17598   */\n      tag_449\n        /* \"#utility.yul\":17594:17596   */\n      0x20\n        /* \"#utility.yul\":17583:17592   */\n      dup4\n        /* \"#utility.yul\":17579:17597   */\n      add\n        /* \"#utility.yul\":17570:17576   */\n      dup5\n        /* \"#utility.yul\":17526:17598   */\n      tag_252\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":17273:17605   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17611:17943   */\n    tag_79:\n        /* \"#utility.yul\":17732:17736   */\n      0x00\n        /* \"#utility.yul\":17770:17772   */\n      0x40\n        /* \"#utility.yul\":17759:17768   */\n      dup3\n        /* \"#utility.yul\":17755:17773   */\n      add\n        /* \"#utility.yul\":17747:17773   */\n      swap1\n      pop\n        /* \"#utility.yul\":17783:17854   */\n      tag_451\n        /* \"#utility.yul\":17851:17852   */\n      0x00\n        /* \"#utility.yul\":17840:17849   */\n      dup4\n        /* \"#utility.yul\":17836:17853   */\n      add\n        /* \"#utility.yul\":17827:17833   */\n      dup6\n        /* \"#utility.yul\":17783:17854   */\n      tag_216\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":17864:17936   */\n      tag_452\n        /* \"#utility.yul\":17932:17934   */\n      0x20\n        /* \"#utility.yul\":17921:17930   */\n      dup4\n        /* \"#utility.yul\":17917:17935   */\n      add\n        /* \"#utility.yul\":17908:17914   */\n      dup5\n        /* \"#utility.yul\":17864:17936   */\n      tag_216\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":17611:17943   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17949:18129   */\n    tag_94:\n        /* \"#utility.yul\":17997:18074   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17994:17995   */\n      0x00\n        /* \"#utility.yul\":17987:18075   */\n      mstore\n        /* \"#utility.yul\":18094:18098   */\n      0x32\n        /* \"#utility.yul\":18091:18092   */\n      0x04\n        /* \"#utility.yul\":18084:18099   */\n      mstore\n        /* \"#utility.yul\":18118:18122   */\n      0x24\n        /* \"#utility.yul\":18115:18116   */\n      0x00\n        /* \"#utility.yul\":18108:18123   */\n      revert\n        /* \"#utility.yul\":18135:18357   */\n    tag_113:\n        /* \"#utility.yul\":18228:18232   */\n      0x00\n        /* \"#utility.yul\":18266:18268   */\n      0x20\n        /* \"#utility.yul\":18255:18264   */\n      dup3\n        /* \"#utility.yul\":18251:18269   */\n      add\n        /* \"#utility.yul\":18243:18269   */\n      swap1\n      pop\n        /* \"#utility.yul\":18279:18350   */\n      tag_455\n        /* \"#utility.yul\":18347:18348   */\n      0x00\n        /* \"#utility.yul\":18336:18345   */\n      dup4\n        /* \"#utility.yul\":18332:18349   */\n      add\n        /* \"#utility.yul\":18323:18329   */\n      dup5\n        /* \"#utility.yul\":18279:18350   */\n      tag_252\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":18135:18357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18363:18916   */\n    tag_158:\n        /* \"#utility.yul\":18540:18544   */\n      0x00\n        /* \"#utility.yul\":18578:18581   */\n      0x80\n        /* \"#utility.yul\":18567:18576   */\n      dup3\n        /* \"#utility.yul\":18563:18582   */\n      add\n        /* \"#utility.yul\":18555:18582   */\n      swap1\n      pop\n        /* \"#utility.yul\":18592:18663   */\n      tag_457\n        /* \"#utility.yul\":18660:18661   */\n      0x00\n        /* \"#utility.yul\":18649:18658   */\n      dup4\n        /* \"#utility.yul\":18645:18662   */\n      add\n        /* \"#utility.yul\":18636:18642   */\n      dup8\n        /* \"#utility.yul\":18592:18663   */\n      tag_252\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":18673:18745   */\n      tag_458\n        /* \"#utility.yul\":18741:18743   */\n      0x20\n        /* \"#utility.yul\":18730:18739   */\n      dup4\n        /* \"#utility.yul\":18726:18744   */\n      add\n        /* \"#utility.yul\":18717:18723   */\n      dup7\n        /* \"#utility.yul\":18673:18745   */\n      tag_216\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":18755:18827   */\n      tag_459\n        /* \"#utility.yul\":18823:18825   */\n      0x40\n        /* \"#utility.yul\":18812:18821   */\n      dup4\n        /* \"#utility.yul\":18808:18826   */\n      add\n        /* \"#utility.yul\":18799:18805   */\n      dup6\n        /* \"#utility.yul\":18755:18827   */\n      tag_216\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":18837:18909   */\n      tag_460\n        /* \"#utility.yul\":18905:18907   */\n      0x60\n        /* \"#utility.yul\":18894:18903   */\n      dup4\n        /* \"#utility.yul\":18890:18908   */\n      add\n        /* \"#utility.yul\":18881:18887   */\n      dup5\n        /* \"#utility.yul\":18837:18909   */\n      tag_216\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":18363:18916   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18922:19102   */\n    tag_253:\n        /* \"#utility.yul\":18970:19047   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18967:18968   */\n      0x00\n        /* \"#utility.yul\":18960:19048   */\n      mstore\n        /* \"#utility.yul\":19067:19071   */\n      0x11\n        /* \"#utility.yul\":19064:19065   */\n      0x04\n        /* \"#utility.yul\":19057:19072   */\n      mstore\n        /* \"#utility.yul\":19091:19095   */\n      0x24\n        /* \"#utility.yul\":19088:19089   */\n      0x00\n        /* \"#utility.yul\":19081:19096   */\n      revert\n        /* \"#utility.yul\":19108:19299   */\n    tag_161:\n        /* \"#utility.yul\":19148:19151   */\n      0x00\n        /* \"#utility.yul\":19167:19187   */\n      tag_463\n        /* \"#utility.yul\":19185:19186   */\n      dup3\n        /* \"#utility.yul\":19167:19187   */\n      tag_213\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":19162:19187   */\n      swap2\n      pop\n        /* \"#utility.yul\":19201:19221   */\n      tag_464\n        /* \"#utility.yul\":19219:19220   */\n      dup4\n        /* \"#utility.yul\":19201:19221   */\n      tag_213\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":19196:19221   */\n      swap3\n      pop\n        /* \"#utility.yul\":19244:19245   */\n      dup3\n        /* \"#utility.yul\":19241:19242   */\n      dup3\n        /* \"#utility.yul\":19237:19246   */\n      add\n        /* \"#utility.yul\":19230:19246   */\n      swap1\n      pop\n        /* \"#utility.yul\":19265:19268   */\n      dup1\n        /* \"#utility.yul\":19262:19263   */\n      dup3\n        /* \"#utility.yul\":19259:19269   */\n      gt\n        /* \"#utility.yul\":19256:19292   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":19272:19290   */\n      tag_466\n      tag_253\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":19256:19292   */\n    tag_465:\n        /* \"#utility.yul\":19108:19299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19305:19939   */\n    tag_168:\n        /* \"#utility.yul\":19526:19530   */\n      0x00\n        /* \"#utility.yul\":19564:19566   */\n      0x40\n        /* \"#utility.yul\":19553:19562   */\n      dup3\n        /* \"#utility.yul\":19549:19567   */\n      add\n        /* \"#utility.yul\":19541:19567   */\n      swap1\n      pop\n        /* \"#utility.yul\":19613:19622   */\n      dup2\n        /* \"#utility.yul\":19607:19611   */\n      dup2\n        /* \"#utility.yul\":19603:19623   */\n      sub\n        /* \"#utility.yul\":19599:19600   */\n      0x00\n        /* \"#utility.yul\":19588:19597   */\n      dup4\n        /* \"#utility.yul\":19584:19601   */\n      add\n        /* \"#utility.yul\":19577:19624   */\n      mstore\n        /* \"#utility.yul\":19641:19749   */\n      tag_468\n        /* \"#utility.yul\":19744:19748   */\n      dup2\n        /* \"#utility.yul\":19735:19741   */\n      dup6\n        /* \"#utility.yul\":19641:19749   */\n      tag_248\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":19633:19749   */\n      swap1\n      pop\n        /* \"#utility.yul\":19796:19805   */\n      dup2\n        /* \"#utility.yul\":19790:19794   */\n      dup2\n        /* \"#utility.yul\":19786:19806   */\n      sub\n        /* \"#utility.yul\":19781:19783   */\n      0x20\n        /* \"#utility.yul\":19770:19779   */\n      dup4\n        /* \"#utility.yul\":19766:19784   */\n      add\n        /* \"#utility.yul\":19759:19807   */\n      mstore\n        /* \"#utility.yul\":19824:19932   */\n      tag_469\n        /* \"#utility.yul\":19927:19931   */\n      dup2\n        /* \"#utility.yul\":19918:19924   */\n      dup5\n        /* \"#utility.yul\":19824:19932   */\n      tag_248\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":19816:19932   */\n      swap1\n      pop\n        /* \"#utility.yul\":19305:19939   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19945:20043   */\n    tag_254:\n        /* \"#utility.yul\":19996:20002   */\n      0x00\n        /* \"#utility.yul\":20030:20035   */\n      dup2\n        /* \"#utility.yul\":20024:20036   */\n      mload\n        /* \"#utility.yul\":20014:20036   */\n      swap1\n      pop\n        /* \"#utility.yul\":19945:20043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20049:20217   */\n    tag_255:\n        /* \"#utility.yul\":20132:20143   */\n      0x00\n        /* \"#utility.yul\":20166:20172   */\n      dup3\n        /* \"#utility.yul\":20161:20164   */\n      dup3\n        /* \"#utility.yul\":20154:20173   */\n      mstore\n        /* \"#utility.yul\":20206:20210   */\n      0x20\n        /* \"#utility.yul\":20201:20204   */\n      dup3\n        /* \"#utility.yul\":20197:20211   */\n      add\n        /* \"#utility.yul\":20182:20211   */\n      swap1\n      pop\n        /* \"#utility.yul\":20049:20217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20223:20596   */\n    tag_256:\n        /* \"#utility.yul\":20309:20312   */\n      0x00\n        /* \"#utility.yul\":20337:20375   */\n      tag_473\n        /* \"#utility.yul\":20369:20374   */\n      dup3\n        /* \"#utility.yul\":20337:20375   */\n      tag_254\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":20391:20461   */\n      tag_474\n        /* \"#utility.yul\":20454:20460   */\n      dup2\n        /* \"#utility.yul\":20449:20452   */\n      dup6\n        /* \"#utility.yul\":20391:20461   */\n      tag_255\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":20384:20461   */\n      swap4\n      pop\n        /* \"#utility.yul\":20470:20535   */\n      tag_475\n        /* \"#utility.yul\":20528:20534   */\n      dup2\n        /* \"#utility.yul\":20523:20526   */\n      dup6\n        /* \"#utility.yul\":20516:20520   */\n      0x20\n        /* \"#utility.yul\":20509:20514   */\n      dup7\n        /* \"#utility.yul\":20505:20521   */\n      add\n        /* \"#utility.yul\":20470:20535   */\n      tag_224\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":20560:20589   */\n      tag_476\n        /* \"#utility.yul\":20582:20588   */\n      dup2\n        /* \"#utility.yul\":20560:20589   */\n      tag_225\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":20555:20558   */\n      dup5\n        /* \"#utility.yul\":20551:20590   */\n      add\n        /* \"#utility.yul\":20544:20590   */\n      swap2\n      pop\n        /* \"#utility.yul\":20313:20596   */\n      pop\n        /* \"#utility.yul\":20223:20596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20602:21353   */\n    tag_172:\n        /* \"#utility.yul\":20825:20829   */\n      0x00\n        /* \"#utility.yul\":20863:20866   */\n      0xa0\n        /* \"#utility.yul\":20852:20861   */\n      dup3\n        /* \"#utility.yul\":20848:20867   */\n      add\n        /* \"#utility.yul\":20840:20867   */\n      swap1\n      pop\n        /* \"#utility.yul\":20877:20948   */\n      tag_478\n        /* \"#utility.yul\":20945:20946   */\n      0x00\n        /* \"#utility.yul\":20934:20943   */\n      dup4\n        /* \"#utility.yul\":20930:20947   */\n      add\n        /* \"#utility.yul\":20921:20927   */\n      dup9\n        /* \"#utility.yul\":20877:20948   */\n      tag_252\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":20958:21030   */\n      tag_479\n        /* \"#utility.yul\":21026:21028   */\n      0x20\n        /* \"#utility.yul\":21015:21024   */\n      dup4\n        /* \"#utility.yul\":21011:21029   */\n      add\n        /* \"#utility.yul\":21002:21008   */\n      dup8\n        /* \"#utility.yul\":20958:21030   */\n      tag_252\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":21040:21112   */\n      tag_480\n        /* \"#utility.yul\":21108:21110   */\n      0x40\n        /* \"#utility.yul\":21097:21106   */\n      dup4\n        /* \"#utility.yul\":21093:21111   */\n      add\n        /* \"#utility.yul\":21084:21090   */\n      dup7\n        /* \"#utility.yul\":21040:21112   */\n      tag_216\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":21122:21194   */\n      tag_481\n        /* \"#utility.yul\":21190:21192   */\n      0x60\n        /* \"#utility.yul\":21179:21188   */\n      dup4\n        /* \"#utility.yul\":21175:21193   */\n      add\n        /* \"#utility.yul\":21166:21172   */\n      dup6\n        /* \"#utility.yul\":21122:21194   */\n      tag_216\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":21242:21251   */\n      dup2\n        /* \"#utility.yul\":21236:21240   */\n      dup2\n        /* \"#utility.yul\":21232:21252   */\n      sub\n        /* \"#utility.yul\":21226:21229   */\n      0x80\n        /* \"#utility.yul\":21215:21224   */\n      dup4\n        /* \"#utility.yul\":21211:21230   */\n      add\n        /* \"#utility.yul\":21204:21253   */\n      mstore\n        /* \"#utility.yul\":21270:21346   */\n      tag_482\n        /* \"#utility.yul\":21341:21345   */\n      dup2\n        /* \"#utility.yul\":21332:21338   */\n      dup5\n        /* \"#utility.yul\":21270:21346   */\n      tag_256\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":21262:21346   */\n      swap1\n      pop\n        /* \"#utility.yul\":20602:21353   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21359:21500   */\n    tag_257:\n        /* \"#utility.yul\":21415:21420   */\n      0x00\n        /* \"#utility.yul\":21446:21452   */\n      dup2\n        /* \"#utility.yul\":21440:21453   */\n      mload\n        /* \"#utility.yul\":21431:21453   */\n      swap1\n      pop\n        /* \"#utility.yul\":21462:21494   */\n      tag_484\n        /* \"#utility.yul\":21488:21493   */\n      dup2\n        /* \"#utility.yul\":21462:21494   */\n      tag_218\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":21359:21500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21506:21855   */\n    tag_175:\n        /* \"#utility.yul\":21575:21581   */\n      0x00\n        /* \"#utility.yul\":21624:21626   */\n      0x20\n        /* \"#utility.yul\":21612:21621   */\n      dup3\n        /* \"#utility.yul\":21603:21610   */\n      dup5\n        /* \"#utility.yul\":21599:21622   */\n      sub\n        /* \"#utility.yul\":21595:21627   */\n      slt\n        /* \"#utility.yul\":21592:21711   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":21630:21709   */\n      tag_487\n      tag_207\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":21592:21711   */\n    tag_486:\n        /* \"#utility.yul\":21750:21751   */\n      0x00\n        /* \"#utility.yul\":21775:21838   */\n      tag_488\n        /* \"#utility.yul\":21830:21837   */\n      dup5\n        /* \"#utility.yul\":21821:21827   */\n      dup3\n        /* \"#utility.yul\":21810:21819   */\n      dup6\n        /* \"#utility.yul\":21806:21828   */\n      add\n        /* \"#utility.yul\":21775:21838   */\n      tag_257\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":21765:21838   */\n      swap2\n      pop\n        /* \"#utility.yul\":21721:21848   */\n      pop\n        /* \"#utility.yul\":21506:21855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21861:22914   */\n    tag_191:\n        /* \"#utility.yul\":22184:22188   */\n      0x00\n        /* \"#utility.yul\":22222:22225   */\n      0xa0\n        /* \"#utility.yul\":22211:22220   */\n      dup3\n        /* \"#utility.yul\":22207:22226   */\n      add\n        /* \"#utility.yul\":22199:22226   */\n      swap1\n      pop\n        /* \"#utility.yul\":22236:22307   */\n      tag_490\n        /* \"#utility.yul\":22304:22305   */\n      0x00\n        /* \"#utility.yul\":22293:22302   */\n      dup4\n        /* \"#utility.yul\":22289:22306   */\n      add\n        /* \"#utility.yul\":22280:22286   */\n      dup9\n        /* \"#utility.yul\":22236:22307   */\n      tag_252\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":22317:22389   */\n      tag_491\n        /* \"#utility.yul\":22385:22387   */\n      0x20\n        /* \"#utility.yul\":22374:22383   */\n      dup4\n        /* \"#utility.yul\":22370:22388   */\n      add\n        /* \"#utility.yul\":22361:22367   */\n      dup8\n        /* \"#utility.yul\":22317:22389   */\n      tag_252\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":22436:22445   */\n      dup2\n        /* \"#utility.yul\":22430:22434   */\n      dup2\n        /* \"#utility.yul\":22426:22446   */\n      sub\n        /* \"#utility.yul\":22421:22423   */\n      0x40\n        /* \"#utility.yul\":22410:22419   */\n      dup4\n        /* \"#utility.yul\":22406:22424   */\n      add\n        /* \"#utility.yul\":22399:22447   */\n      mstore\n        /* \"#utility.yul\":22464:22572   */\n      tag_492\n        /* \"#utility.yul\":22567:22571   */\n      dup2\n        /* \"#utility.yul\":22558:22564   */\n      dup7\n        /* \"#utility.yul\":22464:22572   */\n      tag_248\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":22456:22572   */\n      swap1\n      pop\n        /* \"#utility.yul\":22619:22628   */\n      dup2\n        /* \"#utility.yul\":22613:22617   */\n      dup2\n        /* \"#utility.yul\":22609:22629   */\n      sub\n        /* \"#utility.yul\":22604:22606   */\n      0x60\n        /* \"#utility.yul\":22593:22602   */\n      dup4\n        /* \"#utility.yul\":22589:22607   */\n      add\n        /* \"#utility.yul\":22582:22630   */\n      mstore\n        /* \"#utility.yul\":22647:22755   */\n      tag_493\n        /* \"#utility.yul\":22750:22754   */\n      dup2\n        /* \"#utility.yul\":22741:22747   */\n      dup6\n        /* \"#utility.yul\":22647:22755   */\n      tag_248\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":22639:22755   */\n      swap1\n      pop\n        /* \"#utility.yul\":22803:22812   */\n      dup2\n        /* \"#utility.yul\":22797:22801   */\n      dup2\n        /* \"#utility.yul\":22793:22813   */\n      sub\n        /* \"#utility.yul\":22787:22790   */\n      0x80\n        /* \"#utility.yul\":22776:22785   */\n      dup4\n        /* \"#utility.yul\":22772:22791   */\n      add\n        /* \"#utility.yul\":22765:22814   */\n      mstore\n        /* \"#utility.yul\":22831:22907   */\n      tag_494\n        /* \"#utility.yul\":22902:22906   */\n      dup2\n        /* \"#utility.yul\":22893:22899   */\n      dup5\n        /* \"#utility.yul\":22831:22907   */\n      tag_256\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":22823:22907   */\n      swap1\n      pop\n        /* \"#utility.yul\":21861:22914   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220368dcdf2ee5b5a84ff73fec02e4848000b79263954324fd7c51a47e738f3aca164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2817": {
									"entryPoint": null,
									"id": 2817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_asSingletonArrays_1186": {
									"entryPoint": 344,
									"id": 1186,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_doSafeBatchTransferAcceptanceCheck_1170": {
									"entryPoint": 1963,
									"id": 1170,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1100": {
									"entryPoint": 1532,
									"id": 1100,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_862": {
									"entryPoint": 183,
									"id": 862,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1563": {
									"entryPoint": 1506,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_810": {
									"entryPoint": 164,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_678": {
									"entryPoint": 392,
									"id": 678,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_602": {
									"entryPoint": 588,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1537": {
									"entryPoint": 1513,
									"id": 1537,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 3981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 3532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3824,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3313,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3659,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 3202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3738,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3912,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2765,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13331:12",
										"nodeType": "YulBlock",
										"src": "0:13331:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:12",
													"nodeType": "YulBlock",
													"src": "66:40:12",
													"statements": [
														{
															"nativeSrc": "77:22:12",
															"nodeType": "YulAssignment",
															"src": "77:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:12"
																},
																"nativeSrc": "87:12:12",
																"nodeType": "YulFunctionCall",
																"src": "87:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:12",
														"nodeType": "YulTypedName",
														"src": "49:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:12",
														"nodeType": "YulTypedName",
														"src": "59:6:12",
														"type": ""
													}
												],
												"src": "7:99:12"
											},
											{
												"body": {
													"nativeSrc": "140:152:12",
													"nodeType": "YulBlock",
													"src": "140:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:12",
																		"nodeType": "YulLiteral",
																		"src": "157:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:12",
																		"nodeType": "YulLiteral",
																		"src": "160:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:12"
																},
																"nativeSrc": "150:88:12",
																"nodeType": "YulFunctionCall",
																"src": "150:88:12"
															},
															"nativeSrc": "150:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:12",
																		"nodeType": "YulLiteral",
																		"src": "254:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:12",
																		"nodeType": "YulLiteral",
																		"src": "257:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:12"
																},
																"nativeSrc": "247:15:12",
																"nodeType": "YulFunctionCall",
																"src": "247:15:12"
															},
															"nativeSrc": "247:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:12",
																		"nodeType": "YulLiteral",
																		"src": "278:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:12",
																		"nodeType": "YulLiteral",
																		"src": "281:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:12"
																},
																"nativeSrc": "271:15:12",
																"nodeType": "YulFunctionCall",
																"src": "271:15:12"
															},
															"nativeSrc": "271:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:12"
											},
											{
												"body": {
													"nativeSrc": "326:152:12",
													"nodeType": "YulBlock",
													"src": "326:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:12",
																		"nodeType": "YulLiteral",
																		"src": "343:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:12",
																		"nodeType": "YulLiteral",
																		"src": "346:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:12"
																},
																"nativeSrc": "336:88:12",
																"nodeType": "YulFunctionCall",
																"src": "336:88:12"
															},
															"nativeSrc": "336:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:12",
																		"nodeType": "YulLiteral",
																		"src": "443:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:15:12",
																"nodeType": "YulFunctionCall",
																"src": "433:15:12"
															},
															"nativeSrc": "433:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:12",
																		"nodeType": "YulLiteral",
																		"src": "464:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:12",
																		"nodeType": "YulLiteral",
																		"src": "467:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:12"
																},
																"nativeSrc": "457:15:12",
																"nodeType": "YulFunctionCall",
																"src": "457:15:12"
															},
															"nativeSrc": "457:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:12"
											},
											{
												"body": {
													"nativeSrc": "535:269:12",
													"nodeType": "YulBlock",
													"src": "535:269:12",
													"statements": [
														{
															"nativeSrc": "545:22:12",
															"nodeType": "YulAssignment",
															"src": "545:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:12",
																		"nodeType": "YulLiteral",
																		"src": "565:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:12"
																},
																"nativeSrc": "555:12:12",
																"nodeType": "YulFunctionCall",
																"src": "555:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:12"
																}
															]
														},
														{
															"nativeSrc": "576:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "612:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:12"
																},
																"nativeSrc": "602:12:12",
																"nodeType": "YulFunctionCall",
																"src": "602:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:12",
																	"nodeType": "YulTypedName",
																	"src": "580:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:12",
																"nodeType": "YulBlock",
																"src": "653:51:12",
																"statements": [
																	{
																		"nativeSrc": "667:27:12",
																		"nodeType": "YulAssignment",
																		"src": "667:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:12",
																					"nodeType": "YulLiteral",
																					"src": "689:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:12"
																			},
																			"nativeSrc": "677:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:12"
																},
																"nativeSrc": "626:26:12",
																"nodeType": "YulFunctionCall",
																"src": "626:26:12"
															},
															"nativeSrc": "623:81:12",
															"nodeType": "YulIf",
															"src": "623:81:12"
														},
														{
															"body": {
																"nativeSrc": "756:42:12",
																"nodeType": "YulBlock",
																"src": "756:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:12"
																			},
																			"nativeSrc": "770:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:12"
																		},
																		"nativeSrc": "770:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:12",
																				"nodeType": "YulLiteral",
																				"src": "751:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:12"
																		},
																		"nativeSrc": "740:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:12"
																},
																"nativeSrc": "717:38:12",
																"nodeType": "YulFunctionCall",
																"src": "717:38:12"
															},
															"nativeSrc": "714:84:12",
															"nodeType": "YulIf",
															"src": "714:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:12",
														"nodeType": "YulTypedName",
														"src": "519:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:12",
														"nodeType": "YulTypedName",
														"src": "528:6:12",
														"type": ""
													}
												],
												"src": "484:320:12"
											},
											{
												"body": {
													"nativeSrc": "864:87:12",
													"nodeType": "YulBlock",
													"src": "864:87:12",
													"statements": [
														{
															"nativeSrc": "874:11:12",
															"nodeType": "YulAssignment",
															"src": "874:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:12",
																"nodeType": "YulIdentifier",
																"src": "882:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:12",
																		"nodeType": "YulLiteral",
																		"src": "902:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:12"
																},
																"nativeSrc": "895:14:12",
																"nodeType": "YulFunctionCall",
																"src": "895:14:12"
															},
															"nativeSrc": "895:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:12"
														},
														{
															"nativeSrc": "918:26:12",
															"nodeType": "YulAssignment",
															"src": "918:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:12",
																		"nodeType": "YulLiteral",
																		"src": "936:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:12",
																		"nodeType": "YulLiteral",
																		"src": "939:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:12"
																},
																"nativeSrc": "926:18:12",
																"nodeType": "YulFunctionCall",
																"src": "926:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:12",
														"nodeType": "YulTypedName",
														"src": "851:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:12",
														"nodeType": "YulTypedName",
														"src": "859:4:12",
														"type": ""
													}
												],
												"src": "810:141:12"
											},
											{
												"body": {
													"nativeSrc": "1001:49:12",
													"nodeType": "YulBlock",
													"src": "1001:49:12",
													"statements": [
														{
															"nativeSrc": "1011:33:12",
															"nodeType": "YulAssignment",
															"src": "1011:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:12"
																		},
																		"nativeSrc": "1025:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:12"
																},
																"nativeSrc": "1021:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:12",
														"nodeType": "YulTypedName",
														"src": "984:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:12",
														"nodeType": "YulTypedName",
														"src": "994:6:12",
														"type": ""
													}
												],
												"src": "957:93:12"
											},
											{
												"body": {
													"nativeSrc": "1109:54:12",
													"nodeType": "YulBlock",
													"src": "1109:54:12",
													"statements": [
														{
															"nativeSrc": "1119:37:12",
															"nodeType": "YulAssignment",
															"src": "1119:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:12"
																},
																"nativeSrc": "1140:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:12",
														"nodeType": "YulTypedName",
														"src": "1084:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:12",
														"nodeType": "YulTypedName",
														"src": "1090:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:12",
														"nodeType": "YulTypedName",
														"src": "1100:8:12",
														"type": ""
													}
												],
												"src": "1056:107:12"
											},
											{
												"body": {
													"nativeSrc": "1245:317:12",
													"nodeType": "YulBlock",
													"src": "1245:317:12",
													"statements": [
														{
															"nativeSrc": "1255:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:12"
																},
																"nativeSrc": "1272:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:12",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:12",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:12"
																},
																"nativeSrc": "1311:97:12",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:12",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:12",
															"nodeType": "YulAssignment",
															"src": "1417:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:12"
																},
																"nativeSrc": "1429:39:12",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:12"
																}
															]
														},
														{
															"nativeSrc": "1477:30:12",
															"nodeType": "YulAssignment",
															"src": "1477:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:12"
																		},
																		"nativeSrc": "1497:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:12"
																},
																"nativeSrc": "1486:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:12"
																}
															]
														},
														{
															"nativeSrc": "1516:40:12",
															"nodeType": "YulAssignment",
															"src": "1516:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:12"
																		},
																		"nativeSrc": "1536:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:12"
																},
																"nativeSrc": "1526:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:12",
														"nodeType": "YulTypedName",
														"src": "1206:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:12",
														"nodeType": "YulTypedName",
														"src": "1213:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:12",
														"nodeType": "YulTypedName",
														"src": "1225:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:12",
														"nodeType": "YulTypedName",
														"src": "1238:6:12",
														"type": ""
													}
												],
												"src": "1169:393:12"
											},
											{
												"body": {
													"nativeSrc": "1613:32:12",
													"nodeType": "YulBlock",
													"src": "1613:32:12",
													"statements": [
														{
															"nativeSrc": "1623:16:12",
															"nodeType": "YulAssignment",
															"src": "1623:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:12",
																"nodeType": "YulIdentifier",
																"src": "1634:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:12",
														"nodeType": "YulTypedName",
														"src": "1595:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:12",
														"nodeType": "YulTypedName",
														"src": "1605:7:12",
														"type": ""
													}
												],
												"src": "1568:77:12"
											},
											{
												"body": {
													"nativeSrc": "1683:28:12",
													"nodeType": "YulBlock",
													"src": "1683:28:12",
													"statements": [
														{
															"nativeSrc": "1693:12:12",
															"nodeType": "YulAssignment",
															"src": "1693:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:12",
																"nodeType": "YulIdentifier",
																"src": "1700:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:12",
														"nodeType": "YulTypedName",
														"src": "1669:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:12",
														"nodeType": "YulTypedName",
														"src": "1679:3:12",
														"type": ""
													}
												],
												"src": "1651:60:12"
											},
											{
												"body": {
													"nativeSrc": "1777:82:12",
													"nodeType": "YulBlock",
													"src": "1777:82:12",
													"statements": [
														{
															"nativeSrc": "1787:66:12",
															"nodeType": "YulAssignment",
															"src": "1787:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:12"
																				},
																				"nativeSrc": "1827:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:12"
																		},
																		"nativeSrc": "1818:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:12"
																},
																"nativeSrc": "1800:53:12",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:12",
														"nodeType": "YulTypedName",
														"src": "1757:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:12",
														"nodeType": "YulTypedName",
														"src": "1767:9:12",
														"type": ""
													}
												],
												"src": "1717:142:12"
											},
											{
												"body": {
													"nativeSrc": "1912:28:12",
													"nodeType": "YulBlock",
													"src": "1912:28:12",
													"statements": [
														{
															"nativeSrc": "1922:12:12",
															"nodeType": "YulAssignment",
															"src": "1922:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:12",
																"nodeType": "YulIdentifier",
																"src": "1929:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:12",
														"nodeType": "YulTypedName",
														"src": "1898:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:12",
														"nodeType": "YulTypedName",
														"src": "1908:3:12",
														"type": ""
													}
												],
												"src": "1865:75:12"
											},
											{
												"body": {
													"nativeSrc": "2022:193:12",
													"nodeType": "YulBlock",
													"src": "2022:193:12",
													"statements": [
														{
															"nativeSrc": "2032:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:12"
																},
																"nativeSrc": "2056:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:12",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:12"
																				},
																				"nativeSrc": "2145:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:12"
																				},
																				"nativeSrc": "2166:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:12"
																		},
																		"nativeSrc": "2117:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:12"
																},
																"nativeSrc": "2104:105:12",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:12"
															},
															"nativeSrc": "2104:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:12",
														"nodeType": "YulTypedName",
														"src": "1999:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:12",
														"nodeType": "YulTypedName",
														"src": "2005:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:12",
														"nodeType": "YulTypedName",
														"src": "2013:7:12",
														"type": ""
													}
												],
												"src": "1946:269:12"
											},
											{
												"body": {
													"nativeSrc": "2270:24:12",
													"nodeType": "YulBlock",
													"src": "2270:24:12",
													"statements": [
														{
															"nativeSrc": "2280:8:12",
															"nodeType": "YulAssignment",
															"src": "2280:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:12",
																"nodeType": "YulLiteral",
																"src": "2287:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:12",
														"nodeType": "YulTypedName",
														"src": "2266:3:12",
														"type": ""
													}
												],
												"src": "2221:73:12"
											},
											{
												"body": {
													"nativeSrc": "2353:136:12",
													"nodeType": "YulBlock",
													"src": "2353:136:12",
													"statements": [
														{
															"nativeSrc": "2363:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:12"
																},
																"nativeSrc": "2377:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:12"
																},
																"nativeSrc": "2418:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:12"
															},
															"nativeSrc": "2418:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:12",
														"nodeType": "YulTypedName",
														"src": "2339:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:12",
														"nodeType": "YulTypedName",
														"src": "2345:6:12",
														"type": ""
													}
												],
												"src": "2300:189:12"
											},
											{
												"body": {
													"nativeSrc": "2545:136:12",
													"nodeType": "YulBlock",
													"src": "2545:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:12",
																"nodeType": "YulBlock",
																"src": "2612:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:12"
																			},
																			"nativeSrc": "2626:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:12"
																		},
																		"nativeSrc": "2626:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:12"
																},
																"nativeSrc": "2562:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:12"
															},
															"nativeSrc": "2555:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:12",
																"nodeType": "YulBlock",
																"src": "2577:26:12",
																"statements": [
																	{
																		"nativeSrc": "2579:22:12",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:12"
																			},
																			"nativeSrc": "2588:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:12",
																"nodeType": "YulBlock",
																"src": "2559:2:12",
																"statements": []
															},
															"src": "2555:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:12",
														"nodeType": "YulTypedName",
														"src": "2533:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:12",
														"nodeType": "YulTypedName",
														"src": "2540:3:12",
														"type": ""
													}
												],
												"src": "2495:186:12"
											},
											{
												"body": {
													"nativeSrc": "2766:464:12",
													"nodeType": "YulBlock",
													"src": "2766:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:12",
																"nodeType": "YulBlock",
																"src": "2792:431:12",
																"statements": [
																	{
																		"nativeSrc": "2806:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:12"
																			},
																			"nativeSrc": "2822:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:12",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:12"
																					},
																					"nativeSrc": "2906:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:12"
																			},
																			"nativeSrc": "2892:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:12",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:12",
																			"nodeType": "YulBlock",
																			"src": "3093:27:12",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:12",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:12",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:12"
																			},
																			"nativeSrc": "3074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:12"
																		},
																		"nativeSrc": "3071:49:12",
																		"nodeType": "YulIf",
																		"src": "3071:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:12"
																							},
																							"nativeSrc": "3189:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:12"
																					},
																					"nativeSrc": "3175:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:12"
																			},
																			"nativeSrc": "3133:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:12"
																		},
																		"nativeSrc": "3133:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:12"
																},
																"nativeSrc": "2780:11:12",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:12"
															},
															"nativeSrc": "2777:446:12",
															"nodeType": "YulIf",
															"src": "2777:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:12",
														"nodeType": "YulTypedName",
														"src": "2742:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:12",
														"nodeType": "YulTypedName",
														"src": "2749:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:12",
														"nodeType": "YulTypedName",
														"src": "2754:10:12",
														"type": ""
													}
												],
												"src": "2687:543:12"
											},
											{
												"body": {
													"nativeSrc": "3299:54:12",
													"nodeType": "YulBlock",
													"src": "3299:54:12",
													"statements": [
														{
															"nativeSrc": "3309:37:12",
															"nodeType": "YulAssignment",
															"src": "3309:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:12"
																},
																"nativeSrc": "3330:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:12",
														"nodeType": "YulTypedName",
														"src": "3274:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:12",
														"nodeType": "YulTypedName",
														"src": "3280:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:12",
														"nodeType": "YulTypedName",
														"src": "3290:8:12",
														"type": ""
													}
												],
												"src": "3236:117:12"
											},
											{
												"body": {
													"nativeSrc": "3410:118:12",
													"nodeType": "YulBlock",
													"src": "3410:118:12",
													"statements": [
														{
															"nativeSrc": "3420:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:12"
																				},
																				"nativeSrc": "3465:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:12"
																				},
																				"nativeSrc": "3480:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:12"
																		},
																		"nativeSrc": "3436:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:12"
																},
																"nativeSrc": "3432:56:12",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:12",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:12",
															"nodeType": "YulAssignment",
															"src": "3497:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:12"
																},
																"nativeSrc": "3507:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:12",
														"nodeType": "YulTypedName",
														"src": "3387:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:12",
														"nodeType": "YulTypedName",
														"src": "3393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:12",
														"nodeType": "YulTypedName",
														"src": "3403:6:12",
														"type": ""
													}
												],
												"src": "3359:169:12"
											},
											{
												"body": {
													"nativeSrc": "3614:214:12",
													"nodeType": "YulBlock",
													"src": "3614:214:12",
													"statements": [
														{
															"nativeSrc": "3747:37:12",
															"nodeType": "YulAssignment",
															"src": "3747:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:12"
																},
																"nativeSrc": "3755:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:12"
																}
															]
														},
														{
															"nativeSrc": "3793:29:12",
															"nodeType": "YulAssignment",
															"src": "3793:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:12"
																		},
																		"nativeSrc": "3810:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:12"
																},
																"nativeSrc": "3801:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:12",
														"nodeType": "YulTypedName",
														"src": "3595:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:12",
														"nodeType": "YulTypedName",
														"src": "3601:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:12",
														"nodeType": "YulTypedName",
														"src": "3609:4:12",
														"type": ""
													}
												],
												"src": "3533:295:12"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:12",
													"nodeType": "YulBlock",
													"src": "3925:1303:12",
													"statements": [
														{
															"nativeSrc": "3936:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:12"
																},
																"nativeSrc": "3950:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:12",
																"nodeType": "YulBlock",
																"src": "4072:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:12"
																			},
																			"nativeSrc": "4074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:12"
																		},
																		"nativeSrc": "4074:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:12",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:12"
																},
																"nativeSrc": "4041:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:12"
															},
															"nativeSrc": "4038:56:12",
															"nodeType": "YulIf",
															"src": "4038:56:12"
														},
														{
															"nativeSrc": "4104:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:12"
																		},
																		"nativeSrc": "4144:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:12"
																},
																"nativeSrc": "4118:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:12"
																},
																"nativeSrc": "4203:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:12"
															},
															"nativeSrc": "4203:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:12"
														},
														{
															"nativeSrc": "4280:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:12",
																"nodeType": "YulLiteral",
																"src": "4297:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:12",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:12",
															"nodeType": "YulAssignment",
															"src": "4308:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:12",
																"nodeType": "YulLiteral",
																"src": "4321:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:12",
																		"nodeType": "YulBlock",
																		"src": "4372:611:12",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:12",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:12"
																							},
																							"nativeSrc": "4413:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:12"
																					},
																					"nativeSrc": "4401:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:12",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:12"
																					},
																					"nativeSrc": "4451:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:12",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:12",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:12",
																					"nodeType": "YulBlock",
																					"src": "4569:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:12"
																												},
																												"nativeSrc": "4608:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:12"
																										},
																										"nativeSrc": "4602:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:12"
																								},
																								"nativeSrc": "4587:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:12"
																							},
																							"nativeSrc": "4587:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:12"
																						},
																						{
																							"nativeSrc": "4646:24:12",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:12",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:12"
																								},
																								"nativeSrc": "4656:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:12",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:12",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:12"
																								},
																								"nativeSrc": "4700:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:12"
																					},
																					"nativeSrc": "4532:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:12"
																				},
																				"nativeSrc": "4524:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:12",
																					"nodeType": "YulBlock",
																					"src": "4547:21:12",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:12",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:12",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:12"
																								},
																								"nativeSrc": "4554:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:12",
																					"nodeType": "YulBlock",
																					"src": "4528:3:12",
																					"statements": []
																				},
																				"src": "4524:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:12",
																					"nodeType": "YulBlock",
																					"src": "4768:156:12",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:12"
																										},
																										"nativeSrc": "4809:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:12"
																								},
																								"nativeSrc": "4803:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:12",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:12",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:12"
																												},
																												"nativeSrc": "4891:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:12"
																										},
																										"nativeSrc": "4861:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:12"
																								},
																								"nativeSrc": "4846:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:12"
																							},
																							"nativeSrc": "4846:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:12"
																					},
																					"nativeSrc": "4748:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:12"
																				},
																				"nativeSrc": "4745:179:12",
																				"nodeType": "YulIf",
																				"src": "4745:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:12",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:12"
																									},
																									"nativeSrc": "4954:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:12",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:12"
																							},
																							"nativeSrc": "4950:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:12"
																					},
																					"nativeSrc": "4937:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:12"
																				},
																				"nativeSrc": "4937:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:12"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:12",
																	"nodeType": "YulCase",
																	"src": "4365:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:12",
																		"nodeType": "YulBlock",
																		"src": "5000:222:12",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:12",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:12",
																					"nodeType": "YulBlock",
																					"src": "5051:67:12",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:12",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:12"
																										},
																										"nativeSrc": "5084:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:12"
																								},
																								"nativeSrc": "5078:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:12"
																				},
																				"nativeSrc": "5041:77:12",
																				"nodeType": "YulIf",
																				"src": "5041:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:12"
																							},
																							"nativeSrc": "5144:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:12"
																					},
																					"nativeSrc": "5131:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:12"
																				},
																				"nativeSrc": "5131:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:12"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:12",
																	"nodeType": "YulCase",
																	"src": "4992:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:12"
																},
																"nativeSrc": "4342:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:12"
															},
															"nativeSrc": "4335:887:12",
															"nodeType": "YulSwitch",
															"src": "4335:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:12",
														"nodeType": "YulTypedName",
														"src": "3914:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:12",
														"nodeType": "YulTypedName",
														"src": "3920:3:12",
														"type": ""
													}
												],
												"src": "3833:1395:12"
											},
											{
												"body": {
													"nativeSrc": "5279:81:12",
													"nodeType": "YulBlock",
													"src": "5279:81:12",
													"statements": [
														{
															"nativeSrc": "5289:65:12",
															"nodeType": "YulAssignment",
															"src": "5289:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:12",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:12"
																},
																"nativeSrc": "5300:54:12",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:12",
														"nodeType": "YulTypedName",
														"src": "5261:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:12",
														"nodeType": "YulTypedName",
														"src": "5271:7:12",
														"type": ""
													}
												],
												"src": "5234:126:12"
											},
											{
												"body": {
													"nativeSrc": "5411:51:12",
													"nodeType": "YulBlock",
													"src": "5411:51:12",
													"statements": [
														{
															"nativeSrc": "5421:35:12",
															"nodeType": "YulAssignment",
															"src": "5421:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:12"
																},
																"nativeSrc": "5432:24:12",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:12",
														"nodeType": "YulTypedName",
														"src": "5393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:12",
														"nodeType": "YulTypedName",
														"src": "5403:7:12",
														"type": ""
													}
												],
												"src": "5366:96:12"
											},
											{
												"body": {
													"nativeSrc": "5533:53:12",
													"nodeType": "YulBlock",
													"src": "5533:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:12"
																		},
																		"nativeSrc": "5555:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:12"
																},
																"nativeSrc": "5543:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:12"
															},
															"nativeSrc": "5543:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:12",
														"nodeType": "YulTypedName",
														"src": "5521:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:12",
														"nodeType": "YulTypedName",
														"src": "5528:3:12",
														"type": ""
													}
												],
												"src": "5468:118:12"
											},
											{
												"body": {
													"nativeSrc": "5690:124:12",
													"nodeType": "YulBlock",
													"src": "5690:124:12",
													"statements": [
														{
															"nativeSrc": "5700:26:12",
															"nodeType": "YulAssignment",
															"src": "5700:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:12"
																},
																"nativeSrc": "5708:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:12"
																		},
																		"nativeSrc": "5789:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:12"
																},
																"nativeSrc": "5736:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:12"
															},
															"nativeSrc": "5736:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:12",
														"nodeType": "YulTypedName",
														"src": "5662:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:12",
														"nodeType": "YulTypedName",
														"src": "5674:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:12",
														"nodeType": "YulTypedName",
														"src": "5685:4:12",
														"type": ""
													}
												],
												"src": "5592:222:12"
											},
											{
												"body": {
													"nativeSrc": "5885:53:12",
													"nodeType": "YulBlock",
													"src": "5885:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5902:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5902:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5925:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5925:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5907:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5907:17:12"
																		},
																		"nativeSrc": "5907:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5907:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5895:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5895:6:12"
																},
																"nativeSrc": "5895:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5895:37:12"
															},
															"nativeSrc": "5895:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5895:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5820:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5873:5:12",
														"nodeType": "YulTypedName",
														"src": "5873:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5880:3:12",
														"nodeType": "YulTypedName",
														"src": "5880:3:12",
														"type": ""
													}
												],
												"src": "5820:118:12"
											},
											{
												"body": {
													"nativeSrc": "6070:206:12",
													"nodeType": "YulBlock",
													"src": "6070:206:12",
													"statements": [
														{
															"nativeSrc": "6080:26:12",
															"nodeType": "YulAssignment",
															"src": "6080:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6092:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6092:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6103:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6103:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6088:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6088:3:12"
																},
																"nativeSrc": "6088:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6088:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6080:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6080:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6160:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6160:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6173:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6173:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6184:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6184:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6169:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:12"
																		},
																		"nativeSrc": "6169:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6169:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6116:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6116:43:12"
																},
																"nativeSrc": "6116:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6116:71:12"
															},
															"nativeSrc": "6116:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6116:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6241:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6241:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6254:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6254:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6265:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6265:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6250:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6250:3:12"
																		},
																		"nativeSrc": "6250:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6250:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6197:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6197:43:12"
																},
																"nativeSrc": "6197:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6197:72:12"
															},
															"nativeSrc": "6197:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6197:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5944:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6034:9:12",
														"nodeType": "YulTypedName",
														"src": "6034:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6046:6:12",
														"nodeType": "YulTypedName",
														"src": "6046:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6054:6:12",
														"nodeType": "YulTypedName",
														"src": "6054:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6065:4:12",
														"nodeType": "YulTypedName",
														"src": "6065:4:12",
														"type": ""
													}
												],
												"src": "5944:332:12"
											},
											{
												"body": {
													"nativeSrc": "6464:371:12",
													"nodeType": "YulBlock",
													"src": "6464:371:12",
													"statements": [
														{
															"nativeSrc": "6474:27:12",
															"nodeType": "YulAssignment",
															"src": "6474:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6486:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6486:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6497:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6497:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6482:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6482:3:12"
																},
																"nativeSrc": "6482:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6482:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6474:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6474:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6555:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6555:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6568:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6568:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6579:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6579:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6564:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6564:3:12"
																		},
																		"nativeSrc": "6564:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6564:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6511:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6511:43:12"
																},
																"nativeSrc": "6511:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6511:71:12"
															},
															"nativeSrc": "6511:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6511:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6636:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6636:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6649:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6649:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6660:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6660:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6645:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6645:3:12"
																		},
																		"nativeSrc": "6645:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6645:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6592:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6592:43:12"
																},
																"nativeSrc": "6592:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6592:72:12"
															},
															"nativeSrc": "6592:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6592:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6718:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6718:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6731:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6731:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6742:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6742:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6727:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6727:3:12"
																		},
																		"nativeSrc": "6727:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6674:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6674:43:12"
																},
																"nativeSrc": "6674:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6674:72:12"
															},
															"nativeSrc": "6674:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6674:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6800:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6800:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6813:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6813:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6824:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6824:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6809:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6809:3:12"
																		},
																		"nativeSrc": "6809:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6809:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6756:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6756:43:12"
																},
																"nativeSrc": "6756:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6756:72:12"
															},
															"nativeSrc": "6756:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6756:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6282:553:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6412:9:12",
														"nodeType": "YulTypedName",
														"src": "6412:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6424:6:12",
														"nodeType": "YulTypedName",
														"src": "6424:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6432:6:12",
														"nodeType": "YulTypedName",
														"src": "6432:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6440:6:12",
														"nodeType": "YulTypedName",
														"src": "6440:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6448:6:12",
														"nodeType": "YulTypedName",
														"src": "6448:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6459:4:12",
														"nodeType": "YulTypedName",
														"src": "6459:4:12",
														"type": ""
													}
												],
												"src": "6282:553:12"
											},
											{
												"body": {
													"nativeSrc": "6869:152:12",
													"nodeType": "YulBlock",
													"src": "6869:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6886:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6886:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6889:77:12",
																		"nodeType": "YulLiteral",
																		"src": "6889:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6879:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:12"
																},
																"nativeSrc": "6879:88:12",
																"nodeType": "YulFunctionCall",
																"src": "6879:88:12"
															},
															"nativeSrc": "6879:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "6879:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6983:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6983:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6986:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6986:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6976:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6976:6:12"
																},
																"nativeSrc": "6976:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6976:15:12"
															},
															"nativeSrc": "6976:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6976:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7007:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7007:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7010:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7010:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7000:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7000:6:12"
																},
																"nativeSrc": "7000:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7000:15:12"
															},
															"nativeSrc": "7000:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7000:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6841:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6841:180:12"
											},
											{
												"body": {
													"nativeSrc": "7071:147:12",
													"nodeType": "YulBlock",
													"src": "7071:147:12",
													"statements": [
														{
															"nativeSrc": "7081:25:12",
															"nodeType": "YulAssignment",
															"src": "7081:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7104:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7104:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7086:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7086:17:12"
																},
																"nativeSrc": "7086:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7086:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7081:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7081:1:12"
																}
															]
														},
														{
															"nativeSrc": "7115:25:12",
															"nodeType": "YulAssignment",
															"src": "7115:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7138:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7138:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7120:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7120:17:12"
																},
																"nativeSrc": "7120:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7120:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7115:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7115:1:12"
																}
															]
														},
														{
															"nativeSrc": "7149:16:12",
															"nodeType": "YulAssignment",
															"src": "7149:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7160:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7160:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7163:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7163:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7156:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7156:3:12"
																},
																"nativeSrc": "7156:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7156:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7149:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7149:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7189:22:12",
																"nodeType": "YulBlock",
																"src": "7189:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7191:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7191:16:12"
																			},
																			"nativeSrc": "7191:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7191:18:12"
																		},
																		"nativeSrc": "7191:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7191:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7181:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7181:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7184:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7184:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7178:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7178:2:12"
																},
																"nativeSrc": "7178:10:12",
																"nodeType": "YulFunctionCall",
																"src": "7178:10:12"
															},
															"nativeSrc": "7175:36:12",
															"nodeType": "YulIf",
															"src": "7175:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7027:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7058:1:12",
														"nodeType": "YulTypedName",
														"src": "7058:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7061:1:12",
														"nodeType": "YulTypedName",
														"src": "7061:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7067:3:12",
														"nodeType": "YulTypedName",
														"src": "7067:3:12",
														"type": ""
													}
												],
												"src": "7027:191:12"
											},
											{
												"body": {
													"nativeSrc": "7298:40:12",
													"nodeType": "YulBlock",
													"src": "7298:40:12",
													"statements": [
														{
															"nativeSrc": "7309:22:12",
															"nodeType": "YulAssignment",
															"src": "7309:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7325:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7325:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7319:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7319:5:12"
																},
																"nativeSrc": "7319:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7319:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7309:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7309:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7224:114:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7281:5:12",
														"nodeType": "YulTypedName",
														"src": "7281:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7291:6:12",
														"nodeType": "YulTypedName",
														"src": "7291:6:12",
														"type": ""
													}
												],
												"src": "7224:114:12"
											},
											{
												"body": {
													"nativeSrc": "7455:73:12",
													"nodeType": "YulBlock",
													"src": "7455:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7472:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7472:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7477:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7477:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7465:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7465:6:12"
																},
																"nativeSrc": "7465:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7465:19:12"
															},
															"nativeSrc": "7465:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "7465:19:12"
														},
														{
															"nativeSrc": "7493:29:12",
															"nodeType": "YulAssignment",
															"src": "7493:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7512:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7512:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7517:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7517:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7508:3:12"
																},
																"nativeSrc": "7508:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7508:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7493:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "7493:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7344:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7427:3:12",
														"nodeType": "YulTypedName",
														"src": "7427:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7432:6:12",
														"nodeType": "YulTypedName",
														"src": "7432:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7443:11:12",
														"nodeType": "YulTypedName",
														"src": "7443:11:12",
														"type": ""
													}
												],
												"src": "7344:184:12"
											},
											{
												"body": {
													"nativeSrc": "7606:60:12",
													"nodeType": "YulBlock",
													"src": "7606:60:12",
													"statements": [
														{
															"nativeSrc": "7616:11:12",
															"nodeType": "YulAssignment",
															"src": "7616:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "7624:3:12",
																"nodeType": "YulIdentifier",
																"src": "7624:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7616:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7616:4:12"
																}
															]
														},
														{
															"nativeSrc": "7637:22:12",
															"nodeType": "YulAssignment",
															"src": "7637:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7649:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7649:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7654:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7654:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7645:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7645:3:12"
																},
																"nativeSrc": "7645:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7645:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7637:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7637:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7534:132:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7593:3:12",
														"nodeType": "YulTypedName",
														"src": "7593:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7601:4:12",
														"nodeType": "YulTypedName",
														"src": "7601:4:12",
														"type": ""
													}
												],
												"src": "7534:132:12"
											},
											{
												"body": {
													"nativeSrc": "7727:53:12",
													"nodeType": "YulBlock",
													"src": "7727:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7744:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7744:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7767:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7767:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7749:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "7749:17:12"
																		},
																		"nativeSrc": "7749:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7749:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7737:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7737:6:12"
																},
																"nativeSrc": "7737:37:12",
																"nodeType": "YulFunctionCall",
																"src": "7737:37:12"
															},
															"nativeSrc": "7737:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "7737:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "7672:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7715:5:12",
														"nodeType": "YulTypedName",
														"src": "7715:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7722:3:12",
														"nodeType": "YulTypedName",
														"src": "7722:3:12",
														"type": ""
													}
												],
												"src": "7672:108:12"
											},
											{
												"body": {
													"nativeSrc": "7866:99:12",
													"nodeType": "YulBlock",
													"src": "7866:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7910:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7910:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7918:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7918:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "7876:33:12",
																	"nodeType": "YulIdentifier",
																	"src": "7876:33:12"
																},
																"nativeSrc": "7876:46:12",
																"nodeType": "YulFunctionCall",
																"src": "7876:46:12"
															},
															"nativeSrc": "7876:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "7876:46:12"
														},
														{
															"nativeSrc": "7931:28:12",
															"nodeType": "YulAssignment",
															"src": "7931:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7949:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7949:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7954:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7954:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7945:3:12"
																},
																"nativeSrc": "7945:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7945:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "7931:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "7931:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "7786:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "7839:6:12",
														"nodeType": "YulTypedName",
														"src": "7839:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7847:3:12",
														"nodeType": "YulTypedName",
														"src": "7847:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "7855:10:12",
														"nodeType": "YulTypedName",
														"src": "7855:10:12",
														"type": ""
													}
												],
												"src": "7786:179:12"
											},
											{
												"body": {
													"nativeSrc": "8046:38:12",
													"nodeType": "YulBlock",
													"src": "8046:38:12",
													"statements": [
														{
															"nativeSrc": "8056:22:12",
															"nodeType": "YulAssignment",
															"src": "8056:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8068:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8068:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8073:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8073:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8064:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8064:3:12"
																},
																"nativeSrc": "8064:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8064:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "8056:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8056:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7971:113:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8033:3:12",
														"nodeType": "YulTypedName",
														"src": "8033:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "8041:4:12",
														"nodeType": "YulTypedName",
														"src": "8041:4:12",
														"type": ""
													}
												],
												"src": "7971:113:12"
											},
											{
												"body": {
													"nativeSrc": "8244:608:12",
													"nodeType": "YulBlock",
													"src": "8244:608:12",
													"statements": [
														{
															"nativeSrc": "8254:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8254:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8316:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8316:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8268:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "8268:47:12"
																},
																"nativeSrc": "8268:54:12",
																"nodeType": "YulFunctionCall",
																"src": "8268:54:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8258:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8258:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8331:93:12",
															"nodeType": "YulAssignment",
															"src": "8331:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8412:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8412:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8417:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8417:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8338:73:12",
																	"nodeType": "YulIdentifier",
																	"src": "8338:73:12"
																},
																"nativeSrc": "8338:86:12",
																"nodeType": "YulFunctionCall",
																"src": "8338:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8331:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8331:3:12"
																}
															]
														},
														{
															"nativeSrc": "8433:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8433:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8498:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8498:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8448:49:12",
																	"nodeType": "YulIdentifier",
																	"src": "8448:49:12"
																},
																"nativeSrc": "8448:56:12",
																"nodeType": "YulFunctionCall",
																"src": "8448:56:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8437:7:12",
																	"nodeType": "YulTypedName",
																	"src": "8437:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8513:21:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8513:21:12",
															"value": {
																"name": "baseRef",
																"nativeSrc": "8527:7:12",
																"nodeType": "YulIdentifier",
																"src": "8527:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8517:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8517:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8603:224:12",
																"nodeType": "YulBlock",
																"src": "8603:224:12",
																"statements": [
																	{
																		"nativeSrc": "8617:34:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8617:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8644:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8644:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8638:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8638:5:12"
																			},
																			"nativeSrc": "8638:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8638:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "8621:13:12",
																				"nodeType": "YulTypedName",
																				"src": "8621:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8664:70:12",
																		"nodeType": "YulAssignment",
																		"src": "8664:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "8715:13:12",
																					"nodeType": "YulIdentifier",
																					"src": "8715:13:12"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "8730:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8730:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "8671:43:12",
																				"nodeType": "YulIdentifier",
																				"src": "8671:43:12"
																			},
																			"nativeSrc": "8671:63:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8671:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8664:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8664:3:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8747:70:12",
																		"nodeType": "YulAssignment",
																		"src": "8747:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8810:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8810:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "8757:52:12",
																				"nodeType": "YulIdentifier",
																				"src": "8757:52:12"
																			},
																			"nativeSrc": "8757:60:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8757:60:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "8747:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8747:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8565:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8565:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8568:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8568:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8562:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8562:2:12"
																},
																"nativeSrc": "8562:13:12",
																"nodeType": "YulFunctionCall",
																"src": "8562:13:12"
															},
															"nativeSrc": "8543:284:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8576:18:12",
																"nodeType": "YulBlock",
																"src": "8576:18:12",
																"statements": [
																	{
																		"nativeSrc": "8578:14:12",
																		"nodeType": "YulAssignment",
																		"src": "8578:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8587:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "8587:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8590:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8590:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8583:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8583:3:12"
																			},
																			"nativeSrc": "8583:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8583:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8578:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "8578:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8547:14:12",
																"nodeType": "YulBlock",
																"src": "8547:14:12",
																"statements": [
																	{
																		"nativeSrc": "8549:10:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8549:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8558:1:12",
																			"nodeType": "YulLiteral",
																			"src": "8558:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "8553:1:12",
																				"nodeType": "YulTypedName",
																				"src": "8553:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8543:284:12"
														},
														{
															"nativeSrc": "8836:10:12",
															"nodeType": "YulAssignment",
															"src": "8836:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "8843:3:12",
																"nodeType": "YulIdentifier",
																"src": "8843:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8836:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "8120:732:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8223:5:12",
														"nodeType": "YulTypedName",
														"src": "8223:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8230:3:12",
														"nodeType": "YulTypedName",
														"src": "8230:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8239:3:12",
														"nodeType": "YulTypedName",
														"src": "8239:3:12",
														"type": ""
													}
												],
												"src": "8120:732:12"
											},
											{
												"body": {
													"nativeSrc": "9084:408:12",
													"nodeType": "YulBlock",
													"src": "9084:408:12",
													"statements": [
														{
															"nativeSrc": "9094:26:12",
															"nodeType": "YulAssignment",
															"src": "9094:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9106:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9106:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9117:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9117:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9102:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9102:3:12"
																},
																"nativeSrc": "9102:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9102:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9094:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9094:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9141:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9141:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9152:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9152:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9137:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9137:3:12"
																		},
																		"nativeSrc": "9137:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9137:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9160:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9160:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9166:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9166:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9156:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9156:3:12"
																		},
																		"nativeSrc": "9156:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9156:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9130:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9130:6:12"
																},
																"nativeSrc": "9130:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9130:47:12"
															},
															"nativeSrc": "9130:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9130:47:12"
														},
														{
															"nativeSrc": "9186:116:12",
															"nodeType": "YulAssignment",
															"src": "9186:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9288:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9288:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9297:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9297:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9194:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "9194:93:12"
																},
																"nativeSrc": "9194:108:12",
																"nodeType": "YulFunctionCall",
																"src": "9194:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9186:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9186:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9323:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9323:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9334:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9334:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9319:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9319:3:12"
																		},
																		"nativeSrc": "9319:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9319:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9343:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9343:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9349:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9349:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9339:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9339:3:12"
																		},
																		"nativeSrc": "9339:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9339:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9312:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9312:6:12"
																},
																"nativeSrc": "9312:48:12",
																"nodeType": "YulFunctionCall",
																"src": "9312:48:12"
															},
															"nativeSrc": "9312:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "9312:48:12"
														},
														{
															"nativeSrc": "9369:116:12",
															"nodeType": "YulAssignment",
															"src": "9369:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9471:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9471:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9480:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9480:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9377:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "9377:93:12"
																},
																"nativeSrc": "9377:108:12",
																"nodeType": "YulFunctionCall",
																"src": "9377:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9369:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9369:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "8858:634:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9048:9:12",
														"nodeType": "YulTypedName",
														"src": "9048:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9060:6:12",
														"nodeType": "YulTypedName",
														"src": "9060:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9068:6:12",
														"nodeType": "YulTypedName",
														"src": "9068:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9079:4:12",
														"nodeType": "YulTypedName",
														"src": "9079:4:12",
														"type": ""
													}
												],
												"src": "8858:634:12"
											},
											{
												"body": {
													"nativeSrc": "9556:40:12",
													"nodeType": "YulBlock",
													"src": "9556:40:12",
													"statements": [
														{
															"nativeSrc": "9567:22:12",
															"nodeType": "YulAssignment",
															"src": "9567:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9583:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9583:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9577:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9577:5:12"
																},
																"nativeSrc": "9577:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9577:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9567:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9567:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "9498:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9539:5:12",
														"nodeType": "YulTypedName",
														"src": "9539:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9549:6:12",
														"nodeType": "YulTypedName",
														"src": "9549:6:12",
														"type": ""
													}
												],
												"src": "9498:98:12"
											},
											{
												"body": {
													"nativeSrc": "9697:73:12",
													"nodeType": "YulBlock",
													"src": "9697:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9714:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9714:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9719:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9719:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9707:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9707:6:12"
																},
																"nativeSrc": "9707:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9707:19:12"
															},
															"nativeSrc": "9707:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "9707:19:12"
														},
														{
															"nativeSrc": "9735:29:12",
															"nodeType": "YulAssignment",
															"src": "9735:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9754:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9754:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9759:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9759:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9750:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9750:3:12"
																},
																"nativeSrc": "9750:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9750:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9735:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "9735:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "9602:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9669:3:12",
														"nodeType": "YulTypedName",
														"src": "9669:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9674:6:12",
														"nodeType": "YulTypedName",
														"src": "9674:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9685:11:12",
														"nodeType": "YulTypedName",
														"src": "9685:11:12",
														"type": ""
													}
												],
												"src": "9602:168:12"
											},
											{
												"body": {
													"nativeSrc": "9838:77:12",
													"nodeType": "YulBlock",
													"src": "9838:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9855:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9855:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9860:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9860:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9865:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9865:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "9849:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9849:5:12"
																},
																"nativeSrc": "9849:23:12",
																"nodeType": "YulFunctionCall",
																"src": "9849:23:12"
															},
															"nativeSrc": "9849:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "9849:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9892:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9892:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9897:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9897:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9888:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9888:3:12"
																		},
																		"nativeSrc": "9888:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9888:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9906:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9906:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9881:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9881:6:12"
																},
																"nativeSrc": "9881:27:12",
																"nodeType": "YulFunctionCall",
																"src": "9881:27:12"
															},
															"nativeSrc": "9881:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "9881:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "9776:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9820:3:12",
														"nodeType": "YulTypedName",
														"src": "9820:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9825:3:12",
														"nodeType": "YulTypedName",
														"src": "9825:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9830:6:12",
														"nodeType": "YulTypedName",
														"src": "9830:6:12",
														"type": ""
													}
												],
												"src": "9776:139:12"
											},
											{
												"body": {
													"nativeSrc": "9969:54:12",
													"nodeType": "YulBlock",
													"src": "9969:54:12",
													"statements": [
														{
															"nativeSrc": "9979:38:12",
															"nodeType": "YulAssignment",
															"src": "9979:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9997:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9997:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10004:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10004:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9993:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9993:3:12"
																		},
																		"nativeSrc": "9993:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9993:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10013:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10013:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10009:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10009:3:12"
																		},
																		"nativeSrc": "10009:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10009:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9989:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9989:3:12"
																},
																"nativeSrc": "9989:28:12",
																"nodeType": "YulFunctionCall",
																"src": "9989:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "9979:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9979:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "9921:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9952:5:12",
														"nodeType": "YulTypedName",
														"src": "9952:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "9962:6:12",
														"nodeType": "YulTypedName",
														"src": "9962:6:12",
														"type": ""
													}
												],
												"src": "9921:102:12"
											},
											{
												"body": {
													"nativeSrc": "10119:283:12",
													"nodeType": "YulBlock",
													"src": "10119:283:12",
													"statements": [
														{
															"nativeSrc": "10129:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10129:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10175:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10175:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "10143:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "10143:31:12"
																},
																"nativeSrc": "10143:38:12",
																"nodeType": "YulFunctionCall",
																"src": "10143:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10133:6:12",
																	"nodeType": "YulTypedName",
																	"src": "10133:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10190:77:12",
															"nodeType": "YulAssignment",
															"src": "10190:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10255:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10255:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10260:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10260:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "10197:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "10197:57:12"
																},
																"nativeSrc": "10197:70:12",
																"nodeType": "YulFunctionCall",
																"src": "10197:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10190:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10190:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10315:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10315:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10322:4:12",
																				"nodeType": "YulLiteral",
																				"src": "10322:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10311:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10311:3:12"
																		},
																		"nativeSrc": "10311:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10311:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10329:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10329:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10334:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10334:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10276:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "10276:34:12"
																},
																"nativeSrc": "10276:65:12",
																"nodeType": "YulFunctionCall",
																"src": "10276:65:12"
															},
															"nativeSrc": "10276:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "10276:65:12"
														},
														{
															"nativeSrc": "10350:46:12",
															"nodeType": "YulAssignment",
															"src": "10350:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10361:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10361:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10388:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10388:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10366:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "10366:21:12"
																		},
																		"nativeSrc": "10366:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10366:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10357:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10357:3:12"
																},
																"nativeSrc": "10357:39:12",
																"nodeType": "YulFunctionCall",
																"src": "10357:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10350:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10350:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "10029:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10100:5:12",
														"nodeType": "YulTypedName",
														"src": "10100:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10107:3:12",
														"nodeType": "YulTypedName",
														"src": "10107:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10115:3:12",
														"nodeType": "YulTypedName",
														"src": "10115:3:12",
														"type": ""
													}
												],
												"src": "10029:373:12"
											},
											{
												"body": {
													"nativeSrc": "10636:523:12",
													"nodeType": "YulBlock",
													"src": "10636:523:12",
													"statements": [
														{
															"nativeSrc": "10646:27:12",
															"nodeType": "YulAssignment",
															"src": "10646:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10658:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10658:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10669:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10669:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10654:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10654:3:12"
																},
																"nativeSrc": "10654:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10654:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10646:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10646:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10727:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10727:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10740:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10740:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10751:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10751:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10736:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10736:3:12"
																		},
																		"nativeSrc": "10736:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10736:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10683:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10683:43:12"
																},
																"nativeSrc": "10683:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10683:71:12"
															},
															"nativeSrc": "10683:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10683:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10808:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10808:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10821:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10821:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10832:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10832:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10817:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10817:3:12"
																		},
																		"nativeSrc": "10817:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10817:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10764:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10764:43:12"
																},
																"nativeSrc": "10764:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10764:72:12"
															},
															"nativeSrc": "10764:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10764:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10890:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10890:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10903:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10903:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10914:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10914:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10899:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10899:3:12"
																		},
																		"nativeSrc": "10899:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10899:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10846:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10846:43:12"
																},
																"nativeSrc": "10846:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10846:72:12"
															},
															"nativeSrc": "10846:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10846:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10972:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10972:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10985:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10985:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10996:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10996:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10981:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10981:3:12"
																		},
																		"nativeSrc": "10981:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10981:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10928:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10928:43:12"
																},
																"nativeSrc": "10928:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10928:72:12"
															},
															"nativeSrc": "10928:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10928:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11021:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11021:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11032:3:12",
																				"nodeType": "YulLiteral",
																				"src": "11032:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11017:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11017:3:12"
																		},
																		"nativeSrc": "11017:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11017:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11042:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11042:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11048:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11048:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11038:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11038:3:12"
																		},
																		"nativeSrc": "11038:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11038:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11010:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11010:6:12"
																},
																"nativeSrc": "11010:49:12",
																"nodeType": "YulFunctionCall",
																"src": "11010:49:12"
															},
															"nativeSrc": "11010:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "11010:49:12"
														},
														{
															"nativeSrc": "11068:84:12",
															"nodeType": "YulAssignment",
															"src": "11068:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "11138:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11138:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11147:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11147:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "11076:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "11076:61:12"
																},
																"nativeSrc": "11076:76:12",
																"nodeType": "YulFunctionCall",
																"src": "11076:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11068:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11068:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "10408:751:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10576:9:12",
														"nodeType": "YulTypedName",
														"src": "10576:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10588:6:12",
														"nodeType": "YulTypedName",
														"src": "10588:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10596:6:12",
														"nodeType": "YulTypedName",
														"src": "10596:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10604:6:12",
														"nodeType": "YulTypedName",
														"src": "10604:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10612:6:12",
														"nodeType": "YulTypedName",
														"src": "10612:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10620:6:12",
														"nodeType": "YulTypedName",
														"src": "10620:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10631:4:12",
														"nodeType": "YulTypedName",
														"src": "10631:4:12",
														"type": ""
													}
												],
												"src": "10408:751:12"
											},
											{
												"body": {
													"nativeSrc": "11205:35:12",
													"nodeType": "YulBlock",
													"src": "11205:35:12",
													"statements": [
														{
															"nativeSrc": "11215:19:12",
															"nodeType": "YulAssignment",
															"src": "11215:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11231:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11231:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11225:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11225:5:12"
																},
																"nativeSrc": "11225:9:12",
																"nodeType": "YulFunctionCall",
																"src": "11225:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "11215:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11215:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "11165:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "11198:6:12",
														"nodeType": "YulTypedName",
														"src": "11198:6:12",
														"type": ""
													}
												],
												"src": "11165:75:12"
											},
											{
												"body": {
													"nativeSrc": "11335:28:12",
													"nodeType": "YulBlock",
													"src": "11335:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11352:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11352:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11355:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11355:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11345:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11345:6:12"
																},
																"nativeSrc": "11345:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11345:12:12"
															},
															"nativeSrc": "11345:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "11345:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "11246:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "11246:117:12"
											},
											{
												"body": {
													"nativeSrc": "11458:28:12",
													"nodeType": "YulBlock",
													"src": "11458:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11475:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11475:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11478:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11478:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11468:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11468:6:12"
																},
																"nativeSrc": "11468:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11468:12:12"
															},
															"nativeSrc": "11468:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "11468:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "11369:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "11369:117:12"
											},
											{
												"body": {
													"nativeSrc": "11536:105:12",
													"nodeType": "YulBlock",
													"src": "11536:105:12",
													"statements": [
														{
															"nativeSrc": "11546:89:12",
															"nodeType": "YulAssignment",
															"src": "11546:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11561:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11561:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11568:66:12",
																		"nodeType": "YulLiteral",
																		"src": "11568:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11557:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11557:3:12"
																},
																"nativeSrc": "11557:78:12",
																"nodeType": "YulFunctionCall",
																"src": "11557:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11546:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "11546:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "11492:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11518:5:12",
														"nodeType": "YulTypedName",
														"src": "11518:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11528:7:12",
														"nodeType": "YulTypedName",
														"src": "11528:7:12",
														"type": ""
													}
												],
												"src": "11492:149:12"
											},
											{
												"body": {
													"nativeSrc": "11689:78:12",
													"nodeType": "YulBlock",
													"src": "11689:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11745:16:12",
																"nodeType": "YulBlock",
																"src": "11745:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11754:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11754:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11757:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11757:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11747:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11747:6:12"
																			},
																			"nativeSrc": "11747:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11747:12:12"
																		},
																		"nativeSrc": "11747:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11747:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11712:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11712:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11736:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "11736:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "11719:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "11719:16:12"
																				},
																				"nativeSrc": "11719:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11719:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11709:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11709:2:12"
																		},
																		"nativeSrc": "11709:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11709:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11702:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11702:6:12"
																},
																"nativeSrc": "11702:42:12",
																"nodeType": "YulFunctionCall",
																"src": "11702:42:12"
															},
															"nativeSrc": "11699:62:12",
															"nodeType": "YulIf",
															"src": "11699:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "11647:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11682:5:12",
														"nodeType": "YulTypedName",
														"src": "11682:5:12",
														"type": ""
													}
												],
												"src": "11647:120:12"
											},
											{
												"body": {
													"nativeSrc": "11835:79:12",
													"nodeType": "YulBlock",
													"src": "11835:79:12",
													"statements": [
														{
															"nativeSrc": "11845:22:12",
															"nodeType": "YulAssignment",
															"src": "11845:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11860:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11860:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11854:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11854:5:12"
																},
																"nativeSrc": "11854:13:12",
																"nodeType": "YulFunctionCall",
																"src": "11854:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11845:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11845:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11902:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11902:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "11876:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "11876:25:12"
																},
																"nativeSrc": "11876:32:12",
																"nodeType": "YulFunctionCall",
																"src": "11876:32:12"
															},
															"nativeSrc": "11876:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "11876:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "11773:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11813:6:12",
														"nodeType": "YulTypedName",
														"src": "11813:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11821:3:12",
														"nodeType": "YulTypedName",
														"src": "11821:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11829:5:12",
														"nodeType": "YulTypedName",
														"src": "11829:5:12",
														"type": ""
													}
												],
												"src": "11773:141:12"
											},
											{
												"body": {
													"nativeSrc": "11996:273:12",
													"nodeType": "YulBlock",
													"src": "11996:273:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12042:83:12",
																"nodeType": "YulBlock",
																"src": "12042:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12044:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "12044:77:12"
																			},
																			"nativeSrc": "12044:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12044:79:12"
																		},
																		"nativeSrc": "12044:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12044:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12017:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12017:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12026:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12026:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12013:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12013:3:12"
																		},
																		"nativeSrc": "12013:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12013:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12038:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12038:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12009:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12009:3:12"
																},
																"nativeSrc": "12009:32:12",
																"nodeType": "YulFunctionCall",
																"src": "12009:32:12"
															},
															"nativeSrc": "12006:119:12",
															"nodeType": "YulIf",
															"src": "12006:119:12"
														},
														{
															"nativeSrc": "12135:127:12",
															"nodeType": "YulBlock",
															"src": "12135:127:12",
															"statements": [
																{
																	"nativeSrc": "12150:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12150:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12164:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12164:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12154:6:12",
																			"nodeType": "YulTypedName",
																			"src": "12154:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12179:73:12",
																	"nodeType": "YulAssignment",
																	"src": "12179:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12224:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12224:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12235:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12235:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12220:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12220:3:12"
																				},
																				"nativeSrc": "12220:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12220:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12244:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12244:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "12189:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "12189:30:12"
																		},
																		"nativeSrc": "12189:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12189:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12179:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12179:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "11920:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11966:9:12",
														"nodeType": "YulTypedName",
														"src": "11966:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11977:7:12",
														"nodeType": "YulTypedName",
														"src": "11977:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11989:6:12",
														"nodeType": "YulTypedName",
														"src": "11989:6:12",
														"type": ""
													}
												],
												"src": "11920:349:12"
											},
											{
												"body": {
													"nativeSrc": "12603:725:12",
													"nodeType": "YulBlock",
													"src": "12603:725:12",
													"statements": [
														{
															"nativeSrc": "12613:27:12",
															"nodeType": "YulAssignment",
															"src": "12613:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12625:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12625:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12636:3:12",
																		"nodeType": "YulLiteral",
																		"src": "12636:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12621:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12621:3:12"
																},
																"nativeSrc": "12621:19:12",
																"nodeType": "YulFunctionCall",
																"src": "12621:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12613:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12613:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12694:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12694:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12707:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12707:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12718:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12718:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12703:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12703:3:12"
																		},
																		"nativeSrc": "12703:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12703:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12650:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12650:43:12"
																},
																"nativeSrc": "12650:71:12",
																"nodeType": "YulFunctionCall",
																"src": "12650:71:12"
															},
															"nativeSrc": "12650:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "12650:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12775:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12775:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12788:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12788:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12799:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12799:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12784:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12784:3:12"
																		},
																		"nativeSrc": "12784:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12784:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12731:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12731:43:12"
																},
																"nativeSrc": "12731:72:12",
																"nodeType": "YulFunctionCall",
																"src": "12731:72:12"
															},
															"nativeSrc": "12731:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "12731:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12824:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12824:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12835:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12835:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12820:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12820:3:12"
																		},
																		"nativeSrc": "12820:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12820:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12844:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12844:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12850:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12850:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12840:3:12"
																		},
																		"nativeSrc": "12840:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12840:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12813:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12813:6:12"
																},
																"nativeSrc": "12813:48:12",
																"nodeType": "YulFunctionCall",
																"src": "12813:48:12"
															},
															"nativeSrc": "12813:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "12813:48:12"
														},
														{
															"nativeSrc": "12870:116:12",
															"nodeType": "YulAssignment",
															"src": "12870:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12972:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12972:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12981:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12981:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "12878:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "12878:93:12"
																},
																"nativeSrc": "12878:108:12",
																"nodeType": "YulFunctionCall",
																"src": "12878:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12870:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12870:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13007:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13007:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13018:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13018:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13003:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13003:3:12"
																		},
																		"nativeSrc": "13003:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13003:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13027:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13027:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13033:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13033:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13023:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13023:3:12"
																		},
																		"nativeSrc": "13023:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13023:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12996:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12996:6:12"
																},
																"nativeSrc": "12996:48:12",
																"nodeType": "YulFunctionCall",
																"src": "12996:48:12"
															},
															"nativeSrc": "12996:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "12996:48:12"
														},
														{
															"nativeSrc": "13053:116:12",
															"nodeType": "YulAssignment",
															"src": "13053:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13155:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13155:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13164:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13164:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "13061:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "13061:93:12"
																},
																"nativeSrc": "13061:108:12",
																"nodeType": "YulFunctionCall",
																"src": "13061:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13053:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13053:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13190:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13190:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13201:3:12",
																				"nodeType": "YulLiteral",
																				"src": "13201:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13186:3:12"
																		},
																		"nativeSrc": "13186:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13186:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13211:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13211:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13217:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13217:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13207:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13207:3:12"
																		},
																		"nativeSrc": "13207:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13207:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13179:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13179:6:12"
																},
																"nativeSrc": "13179:49:12",
																"nodeType": "YulFunctionCall",
																"src": "13179:49:12"
															},
															"nativeSrc": "13179:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "13179:49:12"
														},
														{
															"nativeSrc": "13237:84:12",
															"nodeType": "YulAssignment",
															"src": "13237:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "13307:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13307:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13316:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13316:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13245:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "13245:61:12"
																},
																"nativeSrc": "13245:76:12",
																"nodeType": "YulFunctionCall",
																"src": "13245:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13237:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13237:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "12275:1053:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12543:9:12",
														"nodeType": "YulTypedName",
														"src": "12543:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12555:6:12",
														"nodeType": "YulTypedName",
														"src": "12555:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12563:6:12",
														"nodeType": "YulTypedName",
														"src": "12563:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12571:6:12",
														"nodeType": "YulTypedName",
														"src": "12571:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12579:6:12",
														"nodeType": "YulTypedName",
														"src": "12579:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12587:6:12",
														"nodeType": "YulTypedName",
														"src": "12587:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12598:4:12",
														"nodeType": "YulTypedName",
														"src": "12598:4:12",
														"type": ""
													}
												],
												"src": "12275:1053:12"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060800160405280604b8152602001612e60604b9139610038816100a460201b60201c565b5061005b336001600a60405180602001604052805f8152506100b760201b60201c565b61007d336002601460405180602001604052805f8152506100b760201b60201c565b61009f336003601460405180602001604052805f8152506100b760201b60201c565b611032565b80600290816100b39190610b94565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610127575f6040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161011e9190610ca2565b60405180910390fd5b5f80610139858561015860201b60201c565b915091506101505f8784848761018860201b60201c565b505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b61019a8585858561024c60201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610245575f6101dc6105e260201b60201c565b9050600184510361022e575f6101fb5f866105e960201b90919060201c565b90505f6102115f866105e960201b90919060201c565b90506102278389898585896105fc60201b60201c565b5050610243565b6102428187878787876107ab60201b60201c565b5b505b5050505050565b805182511461029657815181516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161028d929190610cca565b60405180910390fd5b5f6102a56105e260201b60201c565b90505f5b83518110156104a1575f6102c682866105e960201b90919060201c565b90505f6102dc83866105e960201b90919060201c565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146103ff575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103ab57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016103a29493929190610cf1565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461049457805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461048c9190610d61565b925050819055505b50508060010190506102a9565b50600183510361055c575f6104bf5f856105e960201b90919060201c565b90505f6104d55f856105e960201b90919060201c565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161054d929190610cca565b60405180910390a450506105db565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516105d2929190610e4b565b60405180910390a45b5050505050565b5f33905090565b5f60208202602084010151905092915050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b11156107a3578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161065c959493929190610ef0565b6020604051808303815f875af192505050801561069757506040513d601f19601f820116820180604052508101906106949190610fa1565b60015b610718573d805f81146106c5576040519150601f19603f3d011682016040523d82523d5f602084013e6106ca565b606091505b505f81510361071057846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016107079190610ca2565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146107a157846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016107989190610ca2565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115610952578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161080b959493929190610fcc565b6020604051808303815f875af192505050801561084657506040513d601f19601f820116820180604052508101906108439190610fa1565b60015b6108c7573d805f8114610874576040519150601f19603f3d011682016040523d82523d5f602084013e610879565b606091505b505f8151036108bf57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016108b69190610ca2565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461095057846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109479190610ca2565b60405180910390fd5b505b505050505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806109d557607f821691505b6020821081036109e8576109e7610991565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610a4a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a0f565b610a548683610a0f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f610a98610a93610a8e84610a6c565b610a75565b610a6c565b9050919050565b5f819050919050565b610ab183610a7e565b610ac5610abd82610a9f565b848454610a1b565b825550505050565b5f90565b610ad9610acd565b610ae4818484610aa8565b505050565b5b81811015610b0757610afc5f82610ad1565b600181019050610aea565b5050565b601f821115610b4c57610b1d816109ee565b610b2684610a00565b81016020851015610b35578190505b610b49610b4185610a00565b830182610ae9565b50505b505050565b5f82821c905092915050565b5f610b6c5f1984600802610b51565b1980831691505092915050565b5f610b848383610b5d565b9150826002028217905092915050565b610b9d8261095a565b67ffffffffffffffff811115610bb657610bb5610964565b5b610bc082546109be565b610bcb828285610b0b565b5f60209050601f831160018114610bfc575f8415610bea578287015190505b610bf48582610b79565b865550610c5b565b601f198416610c0a866109ee565b5f5b82811015610c3157848901518255600182019150602085019450602081019050610c0c565b86831015610c4e5784890151610c4a601f891682610b5d565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c8c82610c63565b9050919050565b610c9c81610c82565b82525050565b5f602082019050610cb55f830184610c93565b92915050565b610cc481610a6c565b82525050565b5f604082019050610cdd5f830185610cbb565b610cea6020830184610cbb565b9392505050565b5f608082019050610d045f830187610c93565b610d116020830186610cbb565b610d1e6040830185610cbb565b610d2b6060830184610cbb565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d6b82610a6c565b9150610d7683610a6c565b9250828201905080821115610d8e57610d8d610d34565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610dc681610a6c565b82525050565b5f610dd78383610dbd565b60208301905092915050565b5f602082019050919050565b5f610df982610d94565b610e038185610d9e565b9350610e0e83610dae565b805f5b83811015610e3e578151610e258882610dcc565b9750610e3083610de3565b925050600181019050610e11565b5085935050505092915050565b5f6040820190508181035f830152610e638185610def565b90508181036020830152610e778184610def565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610ec282610e80565b610ecc8185610e8a565b9350610edc818560208601610e9a565b610ee581610ea8565b840191505092915050565b5f60a082019050610f035f830188610c93565b610f106020830187610c93565b610f1d6040830186610cbb565b610f2a6060830185610cbb565b8181036080830152610f3c8184610eb8565b90509695505050505050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f8081610f4c565b8114610f8a575f80fd5b50565b5f81519050610f9b81610f77565b92915050565b5f60208284031215610fb657610fb5610f48565b5b5f610fc384828501610f8d565b91505092915050565b5f60a082019050610fdf5f830188610c93565b610fec6020830187610c93565b8181036040830152610ffe8186610def565b905081810360608301526110128185610def565b905081810360808301526110268184610eb8565b90509695505050505050565b611e218061103f5f395ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c80634e1273f4116100595780634e1273f414610135578063a22cb46514610165578063e985e9c514610181578063f242432a146101b157610085565b8062fdd58e1461008957806301ffc9a7146100b95780630e89341c146100e95780632eb2c2d614610119575b5f80fd5b6100a3600480360381019061009e91906112ef565b6101cd565b6040516100b0919061133c565b60405180910390f35b6100d360048036038101906100ce91906113aa565b610222565b6040516100e091906113ef565b60405180910390f35b61010360048036038101906100fe9190611408565b610303565b60405161011091906114a3565b60405180910390f35b610133600480360381019061012e91906116b3565b610395565b005b61014f600480360381019061014a919061183e565b61043c565b60405161015c919061196b565b60405180910390f35b61017f600480360381019061017a91906119b5565b610543565b005b61019b600480360381019061019691906119f3565b610559565b6040516101a891906113ef565b60405180910390f35b6101cb60048036038101906101c69190611a31565b6105e7565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102ec57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806102fc57506102fb8261068e565b5b9050919050565b60606002805461031290611af1565b80601f016020809104026020016040519081016040528092919081815260200182805461033e90611af1565b80156103895780601f1061036057610100808354040283529160200191610389565b820191905f5260205f20905b81548152906001019060200180831161036c57829003601f168201915b50505050509050919050565b5f61039e6106f7565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156103e357506103e18682610559565b155b156104275780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161041e929190611b30565b60405180910390fd5b61043486868686866106fe565b505050505050565b6060815183511461048857815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161047f929190611b57565b60405180910390fd5b5f835167ffffffffffffffff8111156104a4576104a36114c7565b5b6040519080825280602002602001820160405280156104d25781602001602082028036833780820191505090505b5090505f5b84518110156105385761050e6104f682876107f290919063ffffffff16565b610509838761080590919063ffffffff16565b6101cd565b82828151811061052157610520611b7e565b5b6020026020010181815250508060010190506104d7565b508091505092915050565b61055561054e6106f7565b8383610818565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6105f06106f7565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561063557506106338682610559565b155b156106795780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610670929190611b30565b60405180910390fd5b6106868686868686610981565b505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361076e575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016107659190611bab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107de575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016107d59190611bab565b60405180910390fd5b6107eb8585858585610a87565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610888575f6040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161087f9190611bab565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161097491906113ef565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109f1575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109e89190611bab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a61575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610a589190611bab565b60405180910390fd5b5f80610a6d8585610b33565b91509150610a7e8787848487610a87565b50505050505050565b610a9385858585610b63565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610b2c575f610acf6106f7565b90506001845103610b1b575f610aee5f8661080590919063ffffffff16565b90505f610b045f8661080590919063ffffffff16565b9050610b14838989858589610ef3565b5050610b2a565b610b298187878787876110a2565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610bad57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610ba4929190611b57565b60405180910390fd5b5f610bb66106f7565b90505f5b8351811015610db2575f610bd7828661080590919063ffffffff16565b90505f610bed838661080590919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610d10575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610cbc57888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610cb39493929190611bc4565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610da557805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d9d9190611c34565b925050819055505b5050806001019050610bba565b506001835103610e6d575f610dd05f8561080590919063ffffffff16565b90505f610de65f8561080590919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610e5e929190611b57565b60405180910390a45050610eec565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610ee3929190611c67565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561109a578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401610f53959493929190611cee565b6020604051808303815f875af1925050508015610f8e57506040513d601f19601f82011682018060405250810190610f8b9190611d5a565b60015b61100f573d805f8114610fbc576040519150601f19603f3d011682016040523d82523d5f602084013e610fc1565b606091505b505f81510361100757846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610ffe9190611bab565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461109857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161108f9190611bab565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611249578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611102959493929190611d85565b6020604051808303815f875af192505050801561113d57506040513d601f19601f8201168201806040525081019061113a9190611d5a565b60015b6111be573d805f811461116b576040519150601f19603f3d011682016040523d82523d5f602084013e611170565b606091505b505f8151036111b657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111ad9190611bab565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461124757846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161123e9190611bab565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61128b82611262565b9050919050565b61129b81611281565b81146112a5575f80fd5b50565b5f813590506112b681611292565b92915050565b5f819050919050565b6112ce816112bc565b81146112d8575f80fd5b50565b5f813590506112e9816112c5565b92915050565b5f80604083850312156113055761130461125a565b5b5f611312858286016112a8565b9250506020611323858286016112db565b9150509250929050565b611336816112bc565b82525050565b5f60208201905061134f5f83018461132d565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61138981611355565b8114611393575f80fd5b50565b5f813590506113a481611380565b92915050565b5f602082840312156113bf576113be61125a565b5b5f6113cc84828501611396565b91505092915050565b5f8115159050919050565b6113e9816113d5565b82525050565b5f6020820190506114025f8301846113e0565b92915050565b5f6020828403121561141d5761141c61125a565b5b5f61142a848285016112db565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61147582611433565b61147f818561143d565b935061148f81856020860161144d565b6114988161145b565b840191505092915050565b5f6020820190508181035f8301526114bb818461146b565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6114fd8261145b565b810181811067ffffffffffffffff8211171561151c5761151b6114c7565b5b80604052505050565b5f61152e611251565b905061153a82826114f4565b919050565b5f67ffffffffffffffff821115611559576115586114c7565b5b602082029050602081019050919050565b5f80fd5b5f61158061157b8461153f565b611525565b905080838252602082019050602084028301858111156115a3576115a261156a565b5b835b818110156115cc57806115b888826112db565b8452602084019350506020810190506115a5565b5050509392505050565b5f82601f8301126115ea576115e96114c3565b5b81356115fa84826020860161156e565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115611621576116206114c7565b5b61162a8261145b565b9050602081019050919050565b828183375f83830152505050565b5f61165761165284611607565b611525565b90508281526020810184848401111561167357611672611603565b5b61167e848285611637565b509392505050565b5f82601f83011261169a576116996114c3565b5b81356116aa848260208601611645565b91505092915050565b5f805f805f60a086880312156116cc576116cb61125a565b5b5f6116d9888289016112a8565b95505060206116ea888289016112a8565b945050604086013567ffffffffffffffff81111561170b5761170a61125e565b5b611717888289016115d6565b935050606086013567ffffffffffffffff8111156117385761173761125e565b5b611744888289016115d6565b925050608086013567ffffffffffffffff8111156117655761176461125e565b5b61177188828901611686565b9150509295509295909350565b5f67ffffffffffffffff821115611798576117976114c7565b5b602082029050602081019050919050565b5f6117bb6117b68461177e565b611525565b905080838252602082019050602084028301858111156117de576117dd61156a565b5b835b8181101561180757806117f388826112a8565b8452602084019350506020810190506117e0565b5050509392505050565b5f82601f830112611825576118246114c3565b5b81356118358482602086016117a9565b91505092915050565b5f80604083850312156118545761185361125a565b5b5f83013567ffffffffffffffff8111156118715761187061125e565b5b61187d85828601611811565b925050602083013567ffffffffffffffff81111561189e5761189d61125e565b5b6118aa858286016115d6565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6118e6816112bc565b82525050565b5f6118f783836118dd565b60208301905092915050565b5f602082019050919050565b5f611919826118b4565b61192381856118be565b935061192e836118ce565b805f5b8381101561195e57815161194588826118ec565b975061195083611903565b925050600181019050611931565b5085935050505092915050565b5f6020820190508181035f830152611983818461190f565b905092915050565b611994816113d5565b811461199e575f80fd5b50565b5f813590506119af8161198b565b92915050565b5f80604083850312156119cb576119ca61125a565b5b5f6119d8858286016112a8565b92505060206119e9858286016119a1565b9150509250929050565b5f8060408385031215611a0957611a0861125a565b5b5f611a16858286016112a8565b9250506020611a27858286016112a8565b9150509250929050565b5f805f805f60a08688031215611a4a57611a4961125a565b5b5f611a57888289016112a8565b9550506020611a68888289016112a8565b9450506040611a79888289016112db565b9350506060611a8a888289016112db565b925050608086013567ffffffffffffffff811115611aab57611aaa61125e565b5b611ab788828901611686565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611b0857607f821691505b602082108103611b1b57611b1a611ac4565b5b50919050565b611b2a81611281565b82525050565b5f604082019050611b435f830185611b21565b611b506020830184611b21565b9392505050565b5f604082019050611b6a5f83018561132d565b611b77602083018461132d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082019050611bbe5f830184611b21565b92915050565b5f608082019050611bd75f830187611b21565b611be4602083018661132d565b611bf1604083018561132d565b611bfe606083018461132d565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c3e826112bc565b9150611c49836112bc565b9250828201905080821115611c6157611c60611c07565b5b92915050565b5f6040820190508181035f830152611c7f818561190f565b90508181036020830152611c93818461190f565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611cc082611c9c565b611cca8185611ca6565b9350611cda81856020860161144d565b611ce38161145b565b840191505092915050565b5f60a082019050611d015f830188611b21565b611d0e6020830187611b21565b611d1b604083018661132d565b611d28606083018561132d565b8181036080830152611d3a8184611cb6565b90509695505050505050565b5f81519050611d5481611380565b92915050565b5f60208284031215611d6f57611d6e61125a565b5b5f611d7c84828501611d46565b91505092915050565b5f60a082019050611d985f830188611b21565b611da56020830187611b21565b8181036040830152611db7818661190f565b90508181036060830152611dcb818561190f565b90508181036080830152611ddf8184611cb6565b9050969550505050505056fea2646970667358221220368dcdf2ee5b5a84ff73fec02e4848000b79263954324fd7c51a47e738f3aca164736f6c6343000819003368747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4a4c44536a722f6d657461646174615f626c6f636b636861696e2f6d61696e2f7b69647d2e6a736f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4B DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E60 PUSH1 0x4B SWAP2 CODECOPY PUSH2 0x38 DUP2 PUSH2 0xA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x5B CALLER PUSH1 0x1 PUSH1 0xA PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x7D CALLER PUSH1 0x2 PUSH1 0x14 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x9F CALLER PUSH1 0x3 PUSH1 0x14 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1032 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x139 DUP6 DUP6 PUSH2 0x158 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x150 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x188 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A DUP6 DUP6 DUP6 DUP6 PUSH2 0x24C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x245 JUMPI PUSH0 PUSH2 0x1DC PUSH2 0x5E2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x22E JUMPI PUSH0 PUSH2 0x1FB PUSH0 DUP7 PUSH2 0x5E9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x211 PUSH0 DUP7 PUSH2 0x5E9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x227 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x5FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x243 JUMP JUMPDEST PUSH2 0x242 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x7AB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x296 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D SWAP3 SWAP2 SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2A5 PUSH2 0x5E2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH0 PUSH2 0x2C6 DUP3 DUP7 PUSH2 0x5E9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2DC DUP4 DUP7 PUSH2 0x5E9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3FF JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3AB JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x494 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2A9 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x55C JUMPI PUSH0 PUSH2 0x4BF PUSH0 DUP6 PUSH2 0x5E9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x4D5 PUSH0 DUP6 PUSH2 0x5E9 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x54D SWAP3 SWAP2 SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x5DB JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x5D2 SWAP3 SWAP2 SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x7A3 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x697 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x694 SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x718 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x710 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x707 SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x7A1 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x798 SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x952 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x846 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x843 SWAP2 SWAP1 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8C7 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x879 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x8BF JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x950 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x947 SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x9D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9E8 JUMPI PUSH2 0x9E7 PUSH2 0x991 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xA4A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xA0F JUMP JUMPDEST PUSH2 0xA54 DUP7 DUP4 PUSH2 0xA0F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA98 PUSH2 0xA93 PUSH2 0xA8E DUP5 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0xA75 JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB1 DUP4 PUSH2 0xA7E JUMP JUMPDEST PUSH2 0xAC5 PUSH2 0xABD DUP3 PUSH2 0xA9F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xA1B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xAD9 PUSH2 0xACD JUMP JUMPDEST PUSH2 0xAE4 DUP2 DUP5 DUP5 PUSH2 0xAA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB07 JUMPI PUSH2 0xAFC PUSH0 DUP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xAEA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB4C JUMPI PUSH2 0xB1D DUP2 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xB26 DUP5 PUSH2 0xA00 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB35 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xB49 PUSH2 0xB41 DUP6 PUSH2 0xA00 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xAE9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB6C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xB51 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB84 DUP4 DUP4 PUSH2 0xB5D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB9D DUP3 PUSH2 0x95A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB6 JUMPI PUSH2 0xBB5 PUSH2 0x964 JUMP JUMPDEST JUMPDEST PUSH2 0xBC0 DUP3 SLOAD PUSH2 0x9BE JUMP JUMPDEST PUSH2 0xBCB DUP3 DUP3 DUP6 PUSH2 0xB0B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBFC JUMPI PUSH0 DUP5 ISZERO PUSH2 0xBEA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xBF4 DUP6 DUP3 PUSH2 0xB79 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xC0A DUP7 PUSH2 0x9EE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC31 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC0C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xC4E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xC4A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xB5D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC8C DUP3 PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9C DUP2 PUSH2 0xC82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCB5 PUSH0 DUP4 ADD DUP5 PUSH2 0xC93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC4 DUP2 PUSH2 0xA6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCDD PUSH0 DUP4 ADD DUP6 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0xCEA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCBB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xD04 PUSH0 DUP4 ADD DUP8 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0xD11 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0xD1E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0xD2B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xCBB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD6B DUP3 PUSH2 0xA6C JUMP JUMPDEST SWAP2 POP PUSH2 0xD76 DUP4 PUSH2 0xA6C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD8E JUMPI PUSH2 0xD8D PUSH2 0xD34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC6 DUP2 PUSH2 0xA6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDD7 DUP4 DUP4 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDF9 DUP3 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xE03 DUP2 DUP6 PUSH2 0xD9E JUMP JUMPDEST SWAP4 POP PUSH2 0xE0E DUP4 PUSH2 0xDAE JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE3E JUMPI DUP2 MLOAD PUSH2 0xE25 DUP9 DUP3 PUSH2 0xDCC JUMP JUMPDEST SWAP8 POP PUSH2 0xE30 DUP4 PUSH2 0xDE3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xE11 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE63 DUP2 DUP6 PUSH2 0xDEF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xE77 DUP2 DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEC2 DUP3 PUSH2 0xE80 JUMP JUMPDEST PUSH2 0xECC DUP2 DUP6 PUSH2 0xE8A JUMP JUMPDEST SWAP4 POP PUSH2 0xEDC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE9A JUMP JUMPDEST PUSH2 0xEE5 DUP2 PUSH2 0xEA8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xF03 PUSH0 DUP4 ADD DUP9 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0xF10 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0xF1D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0xF2A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xCBB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xF3C DUP2 DUP5 PUSH2 0xEB8 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF80 DUP2 PUSH2 0xF4C JUMP JUMPDEST DUP2 EQ PUSH2 0xF8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF9B DUP2 PUSH2 0xF77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB6 JUMPI PUSH2 0xFB5 PUSH2 0xF48 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC3 DUP5 DUP3 DUP6 ADD PUSH2 0xF8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xFDF PUSH0 DUP4 ADD DUP9 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0xFEC PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xC93 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xFFE DUP2 DUP7 PUSH2 0xDEF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1012 DUP2 DUP6 PUSH2 0xDEF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1026 DUP2 DUP5 PUSH2 0xEB8 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E21 DUP1 PUSH2 0x103F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B1 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x119 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x12EF JUMP JUMPDEST PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x19B5 JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2EC JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x2FC JUMPI POP PUSH2 0x2FB DUP3 PUSH2 0x68E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x312 SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33E SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x360 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x389 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x39E PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3E3 JUMPI POP PUSH2 0x3E1 DUP7 DUP3 PUSH2 0x559 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x427 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41E SWAP3 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x434 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x6FE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x488 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP3 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A4 JUMPI PUSH2 0x4A3 PUSH2 0x14C7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4D2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x538 JUMPI PUSH2 0x50E PUSH2 0x4F6 DUP3 DUP8 PUSH2 0x7F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x509 DUP4 DUP8 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CD JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x521 JUMPI PUSH2 0x520 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x4D7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x555 PUSH2 0x54E PUSH2 0x6F7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x818 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5F0 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x635 JUMPI POP PUSH2 0x633 DUP7 DUP3 PUSH2 0x559 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x679 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP3 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x686 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x981 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x76E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7EB DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA87 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x888 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA61 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xA6D DUP6 DUP6 PUSH2 0xB33 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xA7E DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xA87 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA93 DUP6 DUP6 DUP6 DUP6 PUSH2 0xB63 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB2C JUMPI PUSH0 PUSH2 0xACF PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xB1B JUMPI PUSH0 PUSH2 0xAEE PUSH0 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB04 PUSH0 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB14 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEF3 JUMP JUMPDEST POP POP PUSH2 0xB2A JUMP JUMPDEST PUSH2 0xB29 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x10A2 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xBAD JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBB6 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xDB2 JUMPI PUSH0 PUSH2 0xBD7 DUP3 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBED DUP4 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD10 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCBC JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xBBA JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0xE6D JUMPI PUSH0 PUSH2 0xDD0 PUSH0 DUP6 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDE6 PUSH0 DUP6 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE5E SWAP3 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0xEEC JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xEE3 SWAP3 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x109A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF8E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF8B SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x100F JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1007 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1098 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108F SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1249 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1102 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x113D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x113A SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11BE JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x11B6 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AD SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1247 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123E SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x128B DUP3 PUSH2 0x1262 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129B DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B6 DUP2 PUSH2 0x1292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12CE DUP2 PUSH2 0x12BC JUMP JUMPDEST DUP2 EQ PUSH2 0x12D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E9 DUP2 PUSH2 0x12C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1305 JUMPI PUSH2 0x1304 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1312 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1323 DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1336 DUP2 PUSH2 0x12BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x134F PUSH0 DUP4 ADD DUP5 PUSH2 0x132D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1389 DUP2 PUSH2 0x1355 JUMP JUMPDEST DUP2 EQ PUSH2 0x1393 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13A4 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13BF JUMPI PUSH2 0x13BE PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13CC DUP5 DUP3 DUP6 ADD PUSH2 0x1396 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E9 DUP2 PUSH2 0x13D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1402 PUSH0 DUP4 ADD DUP5 PUSH2 0x13E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141D JUMPI PUSH2 0x141C PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x142A DUP5 DUP3 DUP6 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1475 DUP3 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x147F DUP2 DUP6 PUSH2 0x143D JUMP JUMPDEST SWAP4 POP PUSH2 0x148F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144D JUMP JUMPDEST PUSH2 0x1498 DUP2 PUSH2 0x145B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14BB DUP2 DUP5 PUSH2 0x146B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x14FD DUP3 PUSH2 0x145B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x151C JUMPI PUSH2 0x151B PUSH2 0x14C7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x152E PUSH2 0x1251 JUMP JUMPDEST SWAP1 POP PUSH2 0x153A DUP3 DUP3 PUSH2 0x14F4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1559 JUMPI PUSH2 0x1558 PUSH2 0x14C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1580 PUSH2 0x157B DUP5 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x15A3 JUMPI PUSH2 0x15A2 PUSH2 0x156A JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15CC JUMPI DUP1 PUSH2 0x15B8 DUP9 DUP3 PUSH2 0x12DB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15A5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15EA JUMPI PUSH2 0x15E9 PUSH2 0x14C3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15FA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x156E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1621 JUMPI PUSH2 0x1620 PUSH2 0x14C7 JUMP JUMPDEST JUMPDEST PUSH2 0x162A DUP3 PUSH2 0x145B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1657 PUSH2 0x1652 DUP5 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH2 0x167E DUP5 DUP3 DUP6 PUSH2 0x1637 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x169A JUMPI PUSH2 0x1699 PUSH2 0x14C3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16AA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1645 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16CC JUMPI PUSH2 0x16CB PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D9 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x16EA DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1717 DUP9 DUP3 DUP10 ADD PUSH2 0x15D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1738 JUMPI PUSH2 0x1737 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1744 DUP9 DUP3 DUP10 ADD PUSH2 0x15D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1765 JUMPI PUSH2 0x1764 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1771 DUP9 DUP3 DUP10 ADD PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x14C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17BB PUSH2 0x17B6 DUP5 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x17DE JUMPI PUSH2 0x17DD PUSH2 0x156A JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1807 JUMPI DUP1 PUSH2 0x17F3 DUP9 DUP3 PUSH2 0x12A8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17E0 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1825 JUMPI PUSH2 0x1824 PUSH2 0x14C3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1835 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1853 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1871 JUMPI PUSH2 0x1870 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x187D DUP6 DUP3 DUP7 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x189E JUMPI PUSH2 0x189D PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x18AA DUP6 DUP3 DUP7 ADD PUSH2 0x15D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E6 DUP2 PUSH2 0x12BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18F7 DUP4 DUP4 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1919 DUP3 PUSH2 0x18B4 JUMP JUMPDEST PUSH2 0x1923 DUP2 DUP6 PUSH2 0x18BE JUMP JUMPDEST SWAP4 POP PUSH2 0x192E DUP4 PUSH2 0x18CE JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x195E JUMPI DUP2 MLOAD PUSH2 0x1945 DUP9 DUP3 PUSH2 0x18EC JUMP JUMPDEST SWAP8 POP PUSH2 0x1950 DUP4 PUSH2 0x1903 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1931 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1983 DUP2 DUP5 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1994 DUP2 PUSH2 0x13D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x199E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19AF DUP2 PUSH2 0x198B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19CB JUMPI PUSH2 0x19CA PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D8 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E9 DUP6 DUP3 DUP7 ADD PUSH2 0x19A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A16 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A4A JUMPI PUSH2 0x1A49 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A57 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1A68 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1A79 DUP9 DUP3 DUP10 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1A8A DUP9 DUP3 DUP10 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AAB JUMPI PUSH2 0x1AAA PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1AB7 DUP9 DUP3 DUP10 ADD PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B08 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B1B JUMPI PUSH2 0x1B1A PUSH2 0x1AC4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B2A DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B43 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B21 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B6A PUSH0 DUP4 ADD DUP6 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1B77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x132D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBE PUSH0 DUP4 ADD DUP5 PUSH2 0x1B21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1BD7 PUSH0 DUP4 ADD DUP8 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1BE4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1BF1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1BFE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x132D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C3E DUP3 PUSH2 0x12BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C49 DUP4 PUSH2 0x12BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C61 JUMPI PUSH2 0x1C60 PUSH2 0x1C07 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C7F DUP2 DUP6 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C93 DUP2 DUP5 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC0 DUP3 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x1CCA DUP2 DUP6 PUSH2 0x1CA6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CDA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144D JUMP JUMPDEST PUSH2 0x1CE3 DUP2 PUSH2 0x145B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D01 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1D0E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1D1B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1D28 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x132D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1D3A DUP2 DUP5 PUSH2 0x1CB6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D54 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7C DUP5 DUP3 DUP6 ADD PUSH2 0x1D46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D98 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1DA5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B21 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1DB7 DUP2 DUP7 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1DCB DUP2 DUP6 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1DDF DUP2 DUP5 PUSH2 0x1CB6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE DUP14 0xCD CALLCODE 0xEE JUMPDEST GAS DUP5 SELFDESTRUCT PUSH20 0xFEC02E4848000B79263954324FD7C51A47E738F3 0xAC LOG1 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER PUSH9 0x747470733A2F2F7261 PUSH24 0x2E67697468756275736572636F6E74656E742E636F6D2F4A 0x4C PREVRANDAO MSTORE8 PUSH11 0x722F6D657461646174615F PUSH3 0x6C6F63 PUSH12 0x636861696E2F6D61696E2F7B PUSH10 0x647D2E6A736F6E000000 ",
							"sourceMap": "119:373:11:-:0;;;160:330;;;;;;;;;;1251:62:1;;;;;;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;271:60:11::1;277:10;289:1;309:2;271:60;;;;;;;;;;;::::0;:5:::1;;;:60;;:::i;:::-;341:68;347:10;359:1;387:2;341:68;;;;;;;;;;;::::0;:5:::1;;;:68;;:::i;:::-;419:64;425:10;437:1;461:2;419:64;;;;;;;;;;;::::0;:5:::1;;;:64;;:::i;:::-;119:373:::0;;10282:86:1;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;10746:346::-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;;;:29;;:::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;;;:61;;:::i;:::-;10828:264;;10746:346;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;;;:30;;:::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;;;:12;;:::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;;;:67;;:::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;;;:74;;:::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;;;:12;;:::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;4204:197:5:-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;13761:974:1:-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:99:12:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:118::-;5907:24;5925:5;5907:24;:::i;:::-;5902:3;5895:37;5820:118;;:::o;5944:332::-;6065:4;6103:2;6092:9;6088:18;6080:26;;6116:71;6184:1;6173:9;6169:17;6160:6;6116:71;:::i;:::-;6197:72;6265:2;6254:9;6250:18;6241:6;6197:72;:::i;:::-;5944:332;;;;;:::o;6282:553::-;6459:4;6497:3;6486:9;6482:19;6474:27;;6511:71;6579:1;6568:9;6564:17;6555:6;6511:71;:::i;:::-;6592:72;6660:2;6649:9;6645:18;6636:6;6592:72;:::i;:::-;6674;6742:2;6731:9;6727:18;6718:6;6674:72;:::i;:::-;6756;6824:2;6813:9;6809:18;6800:6;6756:72;:::i;:::-;6282:553;;;;;;;:::o;6841:180::-;6889:77;6886:1;6879:88;6986:4;6983:1;6976:15;7010:4;7007:1;7000:15;7027:191;7067:3;7086:20;7104:1;7086:20;:::i;:::-;7081:25;;7120:20;7138:1;7120:20;:::i;:::-;7115:25;;7163:1;7160;7156:9;7149:16;;7184:3;7181:1;7178:10;7175:36;;;7191:18;;:::i;:::-;7175:36;7027:191;;;;:::o;7224:114::-;7291:6;7325:5;7319:12;7309:22;;7224:114;;;:::o;7344:184::-;7443:11;7477:6;7472:3;7465:19;7517:4;7512:3;7508:14;7493:29;;7344:184;;;;:::o;7534:132::-;7601:4;7624:3;7616:11;;7654:4;7649:3;7645:14;7637:22;;7534:132;;;:::o;7672:108::-;7749:24;7767:5;7749:24;:::i;:::-;7744:3;7737:37;7672:108;;:::o;7786:179::-;7855:10;7876:46;7918:3;7910:6;7876:46;:::i;:::-;7954:4;7949:3;7945:14;7931:28;;7786:179;;;;:::o;7971:113::-;8041:4;8073;8068:3;8064:14;8056:22;;7971:113;;;:::o;8120:732::-;8239:3;8268:54;8316:5;8268:54;:::i;:::-;8338:86;8417:6;8412:3;8338:86;:::i;:::-;8331:93;;8448:56;8498:5;8448:56;:::i;:::-;8527:7;8558:1;8543:284;8568:6;8565:1;8562:13;8543:284;;;8644:6;8638:13;8671:63;8730:3;8715:13;8671:63;:::i;:::-;8664:70;;8757:60;8810:6;8757:60;:::i;:::-;8747:70;;8603:224;8590:1;8587;8583:9;8578:14;;8543:284;;;8547:14;8843:3;8836:10;;8244:608;;;8120:732;;;;:::o;8858:634::-;9079:4;9117:2;9106:9;9102:18;9094:26;;9166:9;9160:4;9156:20;9152:1;9141:9;9137:17;9130:47;9194:108;9297:4;9288:6;9194:108;:::i;:::-;9186:116;;9349:9;9343:4;9339:20;9334:2;9323:9;9319:18;9312:48;9377:108;9480:4;9471:6;9377:108;:::i;:::-;9369:116;;8858:634;;;;;:::o;9498:98::-;9549:6;9583:5;9577:12;9567:22;;9498:98;;;:::o;9602:168::-;9685:11;9719:6;9714:3;9707:19;9759:4;9754:3;9750:14;9735:29;;9602:168;;;;:::o;9776:139::-;9865:6;9860:3;9855;9849:23;9906:1;9897:6;9892:3;9888:16;9881:27;9776:139;;;:::o;9921:102::-;9962:6;10013:2;10009:7;10004:2;9997:5;9993:14;9989:28;9979:38;;9921:102;;;:::o;10029:373::-;10115:3;10143:38;10175:5;10143:38;:::i;:::-;10197:70;10260:6;10255:3;10197:70;:::i;:::-;10190:77;;10276:65;10334:6;10329:3;10322:4;10315:5;10311:16;10276:65;:::i;:::-;10366:29;10388:6;10366:29;:::i;:::-;10361:3;10357:39;10350:46;;10119:283;10029:373;;;;:::o;10408:751::-;10631:4;10669:3;10658:9;10654:19;10646:27;;10683:71;10751:1;10740:9;10736:17;10727:6;10683:71;:::i;:::-;10764:72;10832:2;10821:9;10817:18;10808:6;10764:72;:::i;:::-;10846;10914:2;10903:9;10899:18;10890:6;10846:72;:::i;:::-;10928;10996:2;10985:9;10981:18;10972:6;10928:72;:::i;:::-;11048:9;11042:4;11038:20;11032:3;11021:9;11017:19;11010:49;11076:76;11147:4;11138:6;11076:76;:::i;:::-;11068:84;;10408:751;;;;;;;;:::o;11246:117::-;11355:1;11352;11345:12;11492:149;11528:7;11568:66;11561:5;11557:78;11546:89;;11492:149;;;:::o;11647:120::-;11719:23;11736:5;11719:23;:::i;:::-;11712:5;11709:34;11699:62;;11757:1;11754;11747:12;11699:62;11647:120;:::o;11773:141::-;11829:5;11860:6;11854:13;11845:22;;11876:32;11902:5;11876:32;:::i;:::-;11773:141;;;;:::o;11920:349::-;11989:6;12038:2;12026:9;12017:7;12013:23;12009:32;12006:119;;;12044:79;;:::i;:::-;12006:119;12164:1;12189:63;12244:7;12235:6;12224:9;12220:22;12189:63;:::i;:::-;12179:73;;12135:127;11920:349;;;;:::o;12275:1053::-;12598:4;12636:3;12625:9;12621:19;12613:27;;12650:71;12718:1;12707:9;12703:17;12694:6;12650:71;:::i;:::-;12731:72;12799:2;12788:9;12784:18;12775:6;12731:72;:::i;:::-;12850:9;12844:4;12840:20;12835:2;12824:9;12820:18;12813:48;12878:108;12981:4;12972:6;12878:108;:::i;:::-;12870:116;;13033:9;13027:4;13023:20;13018:2;13007:9;13003:18;12996:48;13061:108;13164:4;13155:6;13061:108;:::i;:::-;13053:116;;13217:9;13211:4;13207:20;13201:3;13190:9;13186:19;13179:49;13245:76;13316:4;13307:6;13245:76;:::i;:::-;13237:84;;12275:1053;;;;;;;;:::o;119:373:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1186": {
									"entryPoint": 2867,
									"id": 1186,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_doSafeBatchTransferAcceptanceCheck_1170": {
									"entryPoint": 4258,
									"id": 1170,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1100": {
									"entryPoint": 3827,
									"id": 1100,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1563": {
									"entryPoint": 1783,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_799": {
									"entryPoint": 1790,
									"id": 799,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_744": {
									"entryPoint": 2433,
									"id": 744,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1032": {
									"entryPoint": 2072,
									"id": 1032,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_678": {
									"entryPoint": 2695,
									"id": 678,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_602": {
									"entryPoint": 2915,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_326": {
									"entryPoint": 1084,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_256": {
									"entryPoint": 461,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_359": {
									"entryPoint": 1369,
									"id": 359,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_449": {
									"entryPoint": 917,
									"id": 449,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_403": {
									"entryPoint": 1511,
									"id": 403,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_342": {
									"entryPoint": 1347,
									"id": 342,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1714": {
									"entryPoint": 1678,
									"id": 1714,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_228": {
									"entryPoint": 546,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1537": {
									"entryPoint": 2053,
									"id": 1537,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1550": {
									"entryPoint": 2034,
									"id": 1550,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_239": {
									"entryPoint": 771,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6057,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5701,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 7494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6960,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7557,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7406,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7108,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7271,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4689,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5687,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5197,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7175,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5319,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5315,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5635,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4698,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22917:12",
										"nodeType": "YulBlock",
										"src": "0:22917:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "748:87:12",
													"nodeType": "YulBlock",
													"src": "748:87:12",
													"statements": [
														{
															"nativeSrc": "758:29:12",
															"nodeType": "YulAssignment",
															"src": "758:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:12"
																},
																"nativeSrc": "767:20:12",
																"nodeType": "YulFunctionCall",
																"src": "767:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:12"
																},
																"nativeSrc": "796:33:12",
																"nodeType": "YulFunctionCall",
																"src": "796:33:12"
															},
															"nativeSrc": "796:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:12",
														"nodeType": "YulTypedName",
														"src": "726:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:12",
														"nodeType": "YulTypedName",
														"src": "734:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:12",
														"nodeType": "YulTypedName",
														"src": "742:5:12",
														"type": ""
													}
												],
												"src": "696:139:12"
											},
											{
												"body": {
													"nativeSrc": "886:32:12",
													"nodeType": "YulBlock",
													"src": "886:32:12",
													"statements": [
														{
															"nativeSrc": "896:16:12",
															"nodeType": "YulAssignment",
															"src": "896:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:12",
																"nodeType": "YulIdentifier",
																"src": "907:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:12",
														"nodeType": "YulTypedName",
														"src": "868:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:12",
														"nodeType": "YulTypedName",
														"src": "878:7:12",
														"type": ""
													}
												],
												"src": "841:77:12"
											},
											{
												"body": {
													"nativeSrc": "967:79:12",
													"nodeType": "YulBlock",
													"src": "967:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:12",
																"nodeType": "YulBlock",
																"src": "1024:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:12"
																			},
																			"nativeSrc": "1026:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:12"
																		},
																		"nativeSrc": "1026:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:12"
																				},
																				"nativeSrc": "997:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:12"
																		},
																		"nativeSrc": "987:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:12"
																},
																"nativeSrc": "980:43:12",
																"nodeType": "YulFunctionCall",
																"src": "980:43:12"
															},
															"nativeSrc": "977:63:12",
															"nodeType": "YulIf",
															"src": "977:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:12",
														"nodeType": "YulTypedName",
														"src": "960:5:12",
														"type": ""
													}
												],
												"src": "924:122:12"
											},
											{
												"body": {
													"nativeSrc": "1104:87:12",
													"nodeType": "YulBlock",
													"src": "1104:87:12",
													"statements": [
														{
															"nativeSrc": "1114:29:12",
															"nodeType": "YulAssignment",
															"src": "1114:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:12"
																},
																"nativeSrc": "1123:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:12"
																},
																"nativeSrc": "1152:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:12"
															},
															"nativeSrc": "1152:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:12",
														"nodeType": "YulTypedName",
														"src": "1082:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:12",
														"nodeType": "YulTypedName",
														"src": "1090:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:12",
														"nodeType": "YulTypedName",
														"src": "1098:5:12",
														"type": ""
													}
												],
												"src": "1052:139:12"
											},
											{
												"body": {
													"nativeSrc": "1280:391:12",
													"nodeType": "YulBlock",
													"src": "1280:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:12",
																"nodeType": "YulBlock",
																"src": "1326:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:12"
																			},
																			"nativeSrc": "1328:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:12"
																		},
																		"nativeSrc": "1328:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:12"
																		},
																		"nativeSrc": "1297:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:12"
																},
																"nativeSrc": "1293:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:12"
															},
															"nativeSrc": "1290:119:12",
															"nodeType": "YulIf",
															"src": "1290:119:12"
														},
														{
															"nativeSrc": "1419:117:12",
															"nodeType": "YulBlock",
															"src": "1419:117:12",
															"statements": [
																{
																	"nativeSrc": "1434:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:12"
																				},
																				"nativeSrc": "1494:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:12"
																		},
																		"nativeSrc": "1473:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:12",
															"nodeType": "YulBlock",
															"src": "1546:118:12",
															"statements": [
																{
																	"nativeSrc": "1561:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:12"
																				},
																				"nativeSrc": "1622:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:12"
																		},
																		"nativeSrc": "1601:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:12",
														"nodeType": "YulTypedName",
														"src": "1242:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:12",
														"nodeType": "YulTypedName",
														"src": "1253:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:12",
														"nodeType": "YulTypedName",
														"src": "1265:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:12",
														"nodeType": "YulTypedName",
														"src": "1273:6:12",
														"type": ""
													}
												],
												"src": "1197:474:12"
											},
											{
												"body": {
													"nativeSrc": "1742:53:12",
													"nodeType": "YulBlock",
													"src": "1742:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:12"
																		},
																		"nativeSrc": "1764:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:12"
																},
																"nativeSrc": "1752:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:12"
															},
															"nativeSrc": "1752:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:12",
														"nodeType": "YulTypedName",
														"src": "1730:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:12",
														"nodeType": "YulTypedName",
														"src": "1737:3:12",
														"type": ""
													}
												],
												"src": "1677:118:12"
											},
											{
												"body": {
													"nativeSrc": "1899:124:12",
													"nodeType": "YulBlock",
													"src": "1899:124:12",
													"statements": [
														{
															"nativeSrc": "1909:26:12",
															"nodeType": "YulAssignment",
															"src": "1909:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:12"
																},
																"nativeSrc": "1917:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:12"
																		},
																		"nativeSrc": "1998:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:12"
																},
																"nativeSrc": "1945:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:12"
															},
															"nativeSrc": "1945:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:12",
														"nodeType": "YulTypedName",
														"src": "1871:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:12",
														"nodeType": "YulTypedName",
														"src": "1883:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:12",
														"nodeType": "YulTypedName",
														"src": "1894:4:12",
														"type": ""
													}
												],
												"src": "1801:222:12"
											},
											{
												"body": {
													"nativeSrc": "2073:105:12",
													"nodeType": "YulBlock",
													"src": "2073:105:12",
													"statements": [
														{
															"nativeSrc": "2083:89:12",
															"nodeType": "YulAssignment",
															"src": "2083:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2098:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:66:12",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2094:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:12"
																},
																"nativeSrc": "2094:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2094:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2083:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "2029:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2055:5:12",
														"nodeType": "YulTypedName",
														"src": "2055:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2065:7:12",
														"nodeType": "YulTypedName",
														"src": "2065:7:12",
														"type": ""
													}
												],
												"src": "2029:149:12"
											},
											{
												"body": {
													"nativeSrc": "2226:78:12",
													"nodeType": "YulBlock",
													"src": "2226:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2282:16:12",
																"nodeType": "YulBlock",
																"src": "2282:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2284:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:12"
																			},
																			"nativeSrc": "2284:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:12"
																		},
																		"nativeSrc": "2284:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2273:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "2256:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:12"
																				},
																				"nativeSrc": "2256:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2246:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:12"
																		},
																		"nativeSrc": "2246:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2239:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:12"
																},
																"nativeSrc": "2239:42:12",
																"nodeType": "YulFunctionCall",
																"src": "2239:42:12"
															},
															"nativeSrc": "2236:62:12",
															"nodeType": "YulIf",
															"src": "2236:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "2184:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2219:5:12",
														"nodeType": "YulTypedName",
														"src": "2219:5:12",
														"type": ""
													}
												],
												"src": "2184:120:12"
											},
											{
												"body": {
													"nativeSrc": "2361:86:12",
													"nodeType": "YulBlock",
													"src": "2361:86:12",
													"statements": [
														{
															"nativeSrc": "2371:29:12",
															"nodeType": "YulAssignment",
															"src": "2371:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2393:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:12"
																},
																"nativeSrc": "2380:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2380:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2371:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2435:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2409:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:12"
																},
																"nativeSrc": "2409:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2409:32:12"
															},
															"nativeSrc": "2409:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "2310:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2339:6:12",
														"nodeType": "YulTypedName",
														"src": "2339:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:12",
														"nodeType": "YulTypedName",
														"src": "2347:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2355:5:12",
														"nodeType": "YulTypedName",
														"src": "2355:5:12",
														"type": ""
													}
												],
												"src": "2310:137:12"
											},
											{
												"body": {
													"nativeSrc": "2518:262:12",
													"nodeType": "YulBlock",
													"src": "2518:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2564:83:12",
																"nodeType": "YulBlock",
																"src": "2564:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2566:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:12"
																			},
																			"nativeSrc": "2566:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:12"
																		},
																		"nativeSrc": "2566:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2539:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2548:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2535:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:12"
																		},
																		"nativeSrc": "2535:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2531:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:12"
																},
																"nativeSrc": "2531:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2531:32:12"
															},
															"nativeSrc": "2528:119:12",
															"nodeType": "YulIf",
															"src": "2528:119:12"
														},
														{
															"nativeSrc": "2657:116:12",
															"nodeType": "YulBlock",
															"src": "2657:116:12",
															"statements": [
																{
																	"nativeSrc": "2672:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2686:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2676:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2701:62:12",
																	"nodeType": "YulAssignment",
																	"src": "2701:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2735:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2746:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2731:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:12"
																				},
																				"nativeSrc": "2731:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2755:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2711:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:12"
																		},
																		"nativeSrc": "2711:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2701:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2453:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2488:9:12",
														"nodeType": "YulTypedName",
														"src": "2488:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2499:7:12",
														"nodeType": "YulTypedName",
														"src": "2499:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2511:6:12",
														"nodeType": "YulTypedName",
														"src": "2511:6:12",
														"type": ""
													}
												],
												"src": "2453:327:12"
											},
											{
												"body": {
													"nativeSrc": "2828:48:12",
													"nodeType": "YulBlock",
													"src": "2828:48:12",
													"statements": [
														{
															"nativeSrc": "2838:32:12",
															"nodeType": "YulAssignment",
															"src": "2838:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2856:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:12"
																		},
																		"nativeSrc": "2856:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2849:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:12"
																},
																"nativeSrc": "2849:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2849:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2838:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2786:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:12",
														"nodeType": "YulTypedName",
														"src": "2810:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2820:7:12",
														"nodeType": "YulTypedName",
														"src": "2820:7:12",
														"type": ""
													}
												],
												"src": "2786:90:12"
											},
											{
												"body": {
													"nativeSrc": "2941:50:12",
													"nodeType": "YulBlock",
													"src": "2941:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2958:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2978:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2963:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:12"
																		},
																		"nativeSrc": "2963:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:12"
																},
																"nativeSrc": "2951:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2951:34:12"
															},
															"nativeSrc": "2951:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2882:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:12",
														"nodeType": "YulTypedName",
														"src": "2929:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2936:3:12",
														"nodeType": "YulTypedName",
														"src": "2936:3:12",
														"type": ""
													}
												],
												"src": "2882:109:12"
											},
											{
												"body": {
													"nativeSrc": "3089:118:12",
													"nodeType": "YulBlock",
													"src": "3089:118:12",
													"statements": [
														{
															"nativeSrc": "3099:26:12",
															"nodeType": "YulAssignment",
															"src": "3099:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:12"
																},
																"nativeSrc": "3107:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:12"
																		},
																		"nativeSrc": "3182:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3135:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:12"
																},
																"nativeSrc": "3135:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3135:65:12"
															},
															"nativeSrc": "3135:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2997:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3061:9:12",
														"nodeType": "YulTypedName",
														"src": "3061:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3073:6:12",
														"nodeType": "YulTypedName",
														"src": "3073:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:12",
														"nodeType": "YulTypedName",
														"src": "3084:4:12",
														"type": ""
													}
												],
												"src": "2997:210:12"
											},
											{
												"body": {
													"nativeSrc": "3279:263:12",
													"nodeType": "YulBlock",
													"src": "3279:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3325:83:12",
																"nodeType": "YulBlock",
																"src": "3325:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3327:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:12"
																			},
																			"nativeSrc": "3327:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:12"
																		},
																		"nativeSrc": "3327:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3300:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3309:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3296:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:12"
																		},
																		"nativeSrc": "3296:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3292:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:12"
																},
																"nativeSrc": "3292:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3292:32:12"
															},
															"nativeSrc": "3289:119:12",
															"nodeType": "YulIf",
															"src": "3289:119:12"
														},
														{
															"nativeSrc": "3418:117:12",
															"nodeType": "YulBlock",
															"src": "3418:117:12",
															"statements": [
																{
																	"nativeSrc": "3433:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3447:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3437:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:12"
																				},
																				"nativeSrc": "3493:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3472:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:12"
																		},
																		"nativeSrc": "3472:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3462:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3213:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3249:9:12",
														"nodeType": "YulTypedName",
														"src": "3249:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3260:7:12",
														"nodeType": "YulTypedName",
														"src": "3260:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3272:6:12",
														"nodeType": "YulTypedName",
														"src": "3272:6:12",
														"type": ""
													}
												],
												"src": "3213:329:12"
											},
											{
												"body": {
													"nativeSrc": "3607:40:12",
													"nodeType": "YulBlock",
													"src": "3607:40:12",
													"statements": [
														{
															"nativeSrc": "3618:22:12",
															"nodeType": "YulAssignment",
															"src": "3618:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3634:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3628:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:12"
																},
																"nativeSrc": "3628:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3628:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3618:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3548:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3590:5:12",
														"nodeType": "YulTypedName",
														"src": "3590:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3600:6:12",
														"nodeType": "YulTypedName",
														"src": "3600:6:12",
														"type": ""
													}
												],
												"src": "3548:99:12"
											},
											{
												"body": {
													"nativeSrc": "3749:73:12",
													"nodeType": "YulBlock",
													"src": "3749:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3766:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3771:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3759:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:12"
																},
																"nativeSrc": "3759:19:12",
																"nodeType": "YulFunctionCall",
																"src": "3759:19:12"
															},
															"nativeSrc": "3759:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:12"
														},
														{
															"nativeSrc": "3787:29:12",
															"nodeType": "YulAssignment",
															"src": "3787:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3806:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3811:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3802:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:12"
																},
																"nativeSrc": "3802:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3802:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3787:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3653:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3721:3:12",
														"nodeType": "YulTypedName",
														"src": "3721:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3726:6:12",
														"nodeType": "YulTypedName",
														"src": "3726:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3737:11:12",
														"nodeType": "YulTypedName",
														"src": "3737:11:12",
														"type": ""
													}
												],
												"src": "3653:169:12"
											},
											{
												"body": {
													"nativeSrc": "3890:77:12",
													"nodeType": "YulBlock",
													"src": "3890:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3907:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3907:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3912:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3912:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3917:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3917:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3901:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3901:5:12"
																},
																"nativeSrc": "3901:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3901:23:12"
															},
															"nativeSrc": "3901:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "3901:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3944:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3944:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3949:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3949:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3940:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3940:3:12"
																		},
																		"nativeSrc": "3940:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3940:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3958:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3958:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3933:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3933:6:12"
																},
																"nativeSrc": "3933:27:12",
																"nodeType": "YulFunctionCall",
																"src": "3933:27:12"
															},
															"nativeSrc": "3933:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "3933:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3828:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3872:3:12",
														"nodeType": "YulTypedName",
														"src": "3872:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3877:3:12",
														"nodeType": "YulTypedName",
														"src": "3877:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3882:6:12",
														"nodeType": "YulTypedName",
														"src": "3882:6:12",
														"type": ""
													}
												],
												"src": "3828:139:12"
											},
											{
												"body": {
													"nativeSrc": "4021:54:12",
													"nodeType": "YulBlock",
													"src": "4021:54:12",
													"statements": [
														{
															"nativeSrc": "4031:38:12",
															"nodeType": "YulAssignment",
															"src": "4031:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4049:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4049:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4056:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4056:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4045:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4045:3:12"
																		},
																		"nativeSrc": "4045:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4045:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4065:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4065:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4061:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4061:3:12"
																		},
																		"nativeSrc": "4061:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4041:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4041:3:12"
																},
																"nativeSrc": "4041:28:12",
																"nodeType": "YulFunctionCall",
																"src": "4041:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4031:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4031:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3973:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4004:5:12",
														"nodeType": "YulTypedName",
														"src": "4004:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4014:6:12",
														"nodeType": "YulTypedName",
														"src": "4014:6:12",
														"type": ""
													}
												],
												"src": "3973:102:12"
											},
											{
												"body": {
													"nativeSrc": "4173:285:12",
													"nodeType": "YulBlock",
													"src": "4173:285:12",
													"statements": [
														{
															"nativeSrc": "4183:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4183:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4230:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4230:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4197:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "4197:32:12"
																},
																"nativeSrc": "4197:39:12",
																"nodeType": "YulFunctionCall",
																"src": "4197:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4187:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4187:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4245:78:12",
															"nodeType": "YulAssignment",
															"src": "4245:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4311:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4311:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4316:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4316:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4252:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "4252:58:12"
																},
																"nativeSrc": "4252:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4252:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4245:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4245:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4371:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4371:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4378:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4378:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4367:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4367:3:12"
																		},
																		"nativeSrc": "4367:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4367:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4385:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4385:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4390:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4390:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4332:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "4332:34:12"
																},
																"nativeSrc": "4332:65:12",
																"nodeType": "YulFunctionCall",
																"src": "4332:65:12"
															},
															"nativeSrc": "4332:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "4332:65:12"
														},
														{
															"nativeSrc": "4406:46:12",
															"nodeType": "YulAssignment",
															"src": "4406:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4417:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4417:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4444:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4444:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4422:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "4422:21:12"
																		},
																		"nativeSrc": "4422:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4422:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4413:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4413:3:12"
																},
																"nativeSrc": "4413:39:12",
																"nodeType": "YulFunctionCall",
																"src": "4413:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4406:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4406:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4081:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4154:5:12",
														"nodeType": "YulTypedName",
														"src": "4154:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4161:3:12",
														"nodeType": "YulTypedName",
														"src": "4161:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4169:3:12",
														"nodeType": "YulTypedName",
														"src": "4169:3:12",
														"type": ""
													}
												],
												"src": "4081:377:12"
											},
											{
												"body": {
													"nativeSrc": "4582:195:12",
													"nodeType": "YulBlock",
													"src": "4582:195:12",
													"statements": [
														{
															"nativeSrc": "4592:26:12",
															"nodeType": "YulAssignment",
															"src": "4592:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4604:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4604:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4615:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4615:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4600:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4600:3:12"
																},
																"nativeSrc": "4600:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4600:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4592:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4592:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4639:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4639:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4650:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4650:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4635:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4635:3:12"
																		},
																		"nativeSrc": "4635:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4635:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4658:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4658:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4664:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4664:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4654:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4654:3:12"
																		},
																		"nativeSrc": "4654:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4654:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4628:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:12"
																},
																"nativeSrc": "4628:47:12",
																"nodeType": "YulFunctionCall",
																"src": "4628:47:12"
															},
															"nativeSrc": "4628:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "4628:47:12"
														},
														{
															"nativeSrc": "4684:86:12",
															"nodeType": "YulAssignment",
															"src": "4684:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4756:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4756:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4765:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4692:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "4692:63:12"
																},
																"nativeSrc": "4692:78:12",
																"nodeType": "YulFunctionCall",
																"src": "4692:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4684:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4684:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4464:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4554:9:12",
														"nodeType": "YulTypedName",
														"src": "4554:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4566:6:12",
														"nodeType": "YulTypedName",
														"src": "4566:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4577:4:12",
														"nodeType": "YulTypedName",
														"src": "4577:4:12",
														"type": ""
													}
												],
												"src": "4464:313:12"
											},
											{
												"body": {
													"nativeSrc": "4872:28:12",
													"nodeType": "YulBlock",
													"src": "4872:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4889:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4889:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4892:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4892:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4882:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:12"
																},
																"nativeSrc": "4882:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4882:12:12"
															},
															"nativeSrc": "4882:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "4882:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4783:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4783:117:12"
											},
											{
												"body": {
													"nativeSrc": "4934:152:12",
													"nodeType": "YulBlock",
													"src": "4934:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4951:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4951:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4954:77:12",
																		"nodeType": "YulLiteral",
																		"src": "4954:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4944:6:12"
																},
																"nativeSrc": "4944:88:12",
																"nodeType": "YulFunctionCall",
																"src": "4944:88:12"
															},
															"nativeSrc": "4944:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "4944:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5048:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5048:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5051:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5051:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5041:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5041:6:12"
																},
																"nativeSrc": "5041:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5041:15:12"
															},
															"nativeSrc": "5041:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5041:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5072:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5072:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5075:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5075:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5065:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5065:6:12"
																},
																"nativeSrc": "5065:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5065:15:12"
															},
															"nativeSrc": "5065:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5065:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4906:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4906:180:12"
											},
											{
												"body": {
													"nativeSrc": "5135:238:12",
													"nodeType": "YulBlock",
													"src": "5135:238:12",
													"statements": [
														{
															"nativeSrc": "5145:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5145:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5167:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5167:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5197:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5175:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "5175:21:12"
																		},
																		"nativeSrc": "5175:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5175:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5163:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5163:3:12"
																},
																"nativeSrc": "5163:40:12",
																"nodeType": "YulFunctionCall",
																"src": "5163:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5149:10:12",
																	"nodeType": "YulTypedName",
																	"src": "5149:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5314:22:12",
																"nodeType": "YulBlock",
																"src": "5314:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5316:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5316:16:12"
																			},
																			"nativeSrc": "5316:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5316:18:12"
																		},
																		"nativeSrc": "5316:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5316:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5257:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5257:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5269:18:12",
																				"nodeType": "YulLiteral",
																				"src": "5269:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5254:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5254:2:12"
																		},
																		"nativeSrc": "5254:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5254:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5293:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "5293:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5305:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5305:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5290:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5290:2:12"
																		},
																		"nativeSrc": "5290:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5290:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5251:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5251:2:12"
																},
																"nativeSrc": "5251:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5251:62:12"
															},
															"nativeSrc": "5248:88:12",
															"nodeType": "YulIf",
															"src": "5248:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5352:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5352:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5356:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "5356:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5345:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:12"
																},
																"nativeSrc": "5345:22:12",
																"nodeType": "YulFunctionCall",
																"src": "5345:22:12"
															},
															"nativeSrc": "5345:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "5345:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5092:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5121:6:12",
														"nodeType": "YulTypedName",
														"src": "5121:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5129:4:12",
														"nodeType": "YulTypedName",
														"src": "5129:4:12",
														"type": ""
													}
												],
												"src": "5092:281:12"
											},
											{
												"body": {
													"nativeSrc": "5420:88:12",
													"nodeType": "YulBlock",
													"src": "5420:88:12",
													"statements": [
														{
															"nativeSrc": "5430:30:12",
															"nodeType": "YulAssignment",
															"src": "5430:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5440:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5440:18:12"
																},
																"nativeSrc": "5440:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5440:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5430:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5430:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5489:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5489:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5497:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5497:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5469:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "5469:19:12"
																},
																"nativeSrc": "5469:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5469:33:12"
															},
															"nativeSrc": "5469:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5469:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5379:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5404:4:12",
														"nodeType": "YulTypedName",
														"src": "5404:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5413:6:12",
														"nodeType": "YulTypedName",
														"src": "5413:6:12",
														"type": ""
													}
												],
												"src": "5379:129:12"
											},
											{
												"body": {
													"nativeSrc": "5596:229:12",
													"nodeType": "YulBlock",
													"src": "5596:229:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5701:22:12",
																"nodeType": "YulBlock",
																"src": "5701:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5703:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5703:16:12"
																			},
																			"nativeSrc": "5703:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5703:18:12"
																		},
																		"nativeSrc": "5703:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5703:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5673:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5673:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5681:18:12",
																		"nodeType": "YulLiteral",
																		"src": "5681:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5670:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5670:2:12"
																},
																"nativeSrc": "5670:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5670:30:12"
															},
															"nativeSrc": "5667:56:12",
															"nodeType": "YulIf",
															"src": "5667:56:12"
														},
														{
															"nativeSrc": "5733:25:12",
															"nodeType": "YulAssignment",
															"src": "5733:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5745:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5745:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5753:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5753:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5741:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5741:3:12"
																},
																"nativeSrc": "5741:17:12",
																"nodeType": "YulFunctionCall",
																"src": "5741:17:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5733:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5733:4:12"
																}
															]
														},
														{
															"nativeSrc": "5795:23:12",
															"nodeType": "YulAssignment",
															"src": "5795:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5807:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5807:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5813:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5803:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5803:3:12"
																},
																"nativeSrc": "5803:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5803:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5795:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5795:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5514:311:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5580:6:12",
														"nodeType": "YulTypedName",
														"src": "5580:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5591:4:12",
														"nodeType": "YulTypedName",
														"src": "5591:4:12",
														"type": ""
													}
												],
												"src": "5514:311:12"
											},
											{
												"body": {
													"nativeSrc": "5920:28:12",
													"nodeType": "YulBlock",
													"src": "5920:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5937:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5937:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5940:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5940:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5930:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5930:6:12"
																},
																"nativeSrc": "5930:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5930:12:12"
															},
															"nativeSrc": "5930:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "5930:12:12"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5831:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5831:117:12"
											},
											{
												"body": {
													"nativeSrc": "6073:608:12",
													"nodeType": "YulBlock",
													"src": "6073:608:12",
													"statements": [
														{
															"nativeSrc": "6083:90:12",
															"nodeType": "YulAssignment",
															"src": "6083:90:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6165:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6165:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "6108:56:12",
																			"nodeType": "YulIdentifier",
																			"src": "6108:56:12"
																		},
																		"nativeSrc": "6108:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6108:64:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6092:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "6092:15:12"
																},
																"nativeSrc": "6092:81:12",
																"nodeType": "YulFunctionCall",
																"src": "6092:81:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6083:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6083:5:12"
																}
															]
														},
														{
															"nativeSrc": "6182:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6182:16:12",
															"value": {
																"name": "array",
																"nativeSrc": "6193:5:12",
																"nodeType": "YulIdentifier",
																"src": "6193:5:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6186:3:12",
																	"nodeType": "YulTypedName",
																	"src": "6186:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6215:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6215:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6222:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6222:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6208:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:12"
																},
																"nativeSrc": "6208:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6208:21:12"
															},
															"nativeSrc": "6208:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6208:21:12"
														},
														{
															"nativeSrc": "6238:23:12",
															"nodeType": "YulAssignment",
															"src": "6238:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6249:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6249:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6256:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6256:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6245:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6245:3:12"
																},
																"nativeSrc": "6245:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6245:16:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6238:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6238:3:12"
																}
															]
														},
														{
															"nativeSrc": "6271:44:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6271:44:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6289:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6289:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6301:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6301:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6309:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6309:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6297:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6297:3:12"
																		},
																		"nativeSrc": "6297:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6297:17:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6285:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6285:3:12"
																},
																"nativeSrc": "6285:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6285:30:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6275:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6275:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6343:103:12",
																"nodeType": "YulBlock",
																"src": "6343:103:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6357:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6357:77:12"
																			},
																			"nativeSrc": "6357:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6357:79:12"
																		},
																		"nativeSrc": "6357:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6357:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6330:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6330:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6338:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6338:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6327:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6327:2:12"
																},
																"nativeSrc": "6327:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6327:15:12"
															},
															"nativeSrc": "6324:122:12",
															"nodeType": "YulIf",
															"src": "6324:122:12"
														},
														{
															"body": {
																"nativeSrc": "6531:144:12",
																"nodeType": "YulBlock",
																"src": "6531:144:12",
																"statements": [
																	{
																		"nativeSrc": "6546:21:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6546:21:12",
																		"value": {
																			"name": "src",
																			"nativeSrc": "6564:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6564:3:12"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "6550:10:12",
																				"nodeType": "YulTypedName",
																				"src": "6550:10:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6588:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6588:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "6614:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "6614:10:12"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "6626:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6626:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "6593:20:12",
																						"nodeType": "YulIdentifier",
																						"src": "6593:20:12"
																					},
																					"nativeSrc": "6593:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6593:37:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6581:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6581:6:12"
																			},
																			"nativeSrc": "6581:50:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6581:50:12"
																		},
																		"nativeSrc": "6581:50:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6581:50:12"
																	},
																	{
																		"nativeSrc": "6644:21:12",
																		"nodeType": "YulAssignment",
																		"src": "6644:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6655:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6655:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6660:4:12",
																					"nodeType": "YulLiteral",
																					"src": "6660:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6651:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6651:3:12"
																			},
																			"nativeSrc": "6651:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6651:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6644:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6644:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6484:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6484:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6489:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6489:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6481:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6481:2:12"
																},
																"nativeSrc": "6481:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6481:15:12"
															},
															"nativeSrc": "6455:220:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6497:25:12",
																"nodeType": "YulBlock",
																"src": "6497:25:12",
																"statements": [
																	{
																		"nativeSrc": "6499:21:12",
																		"nodeType": "YulAssignment",
																		"src": "6499:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6510:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6510:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6515:4:12",
																					"nodeType": "YulLiteral",
																					"src": "6515:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6506:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6506:3:12"
																			},
																			"nativeSrc": "6506:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6506:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6499:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6499:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6459:21:12",
																"nodeType": "YulBlock",
																"src": "6459:21:12",
																"statements": [
																	{
																		"nativeSrc": "6461:17:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6461:17:12",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "6472:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6472:6:12"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "6465:3:12",
																				"nodeType": "YulTypedName",
																				"src": "6465:3:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6455:220:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5971:710:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6043:6:12",
														"nodeType": "YulTypedName",
														"src": "6043:6:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6051:6:12",
														"nodeType": "YulTypedName",
														"src": "6051:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6059:3:12",
														"nodeType": "YulTypedName",
														"src": "6059:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6067:5:12",
														"nodeType": "YulTypedName",
														"src": "6067:5:12",
														"type": ""
													}
												],
												"src": "5971:710:12"
											},
											{
												"body": {
													"nativeSrc": "6781:293:12",
													"nodeType": "YulBlock",
													"src": "6781:293:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6830:83:12",
																"nodeType": "YulBlock",
																"src": "6830:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6832:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6832:77:12"
																			},
																			"nativeSrc": "6832:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6832:79:12"
																		},
																		"nativeSrc": "6832:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6832:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6809:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6809:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6817:4:12",
																						"nodeType": "YulLiteral",
																						"src": "6817:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6805:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6805:3:12"
																				},
																				"nativeSrc": "6805:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6805:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6824:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6824:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6801:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6801:3:12"
																		},
																		"nativeSrc": "6801:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6801:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6794:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6794:6:12"
																},
																"nativeSrc": "6794:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6794:35:12"
															},
															"nativeSrc": "6791:122:12",
															"nodeType": "YulIf",
															"src": "6791:122:12"
														},
														{
															"nativeSrc": "6922:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6922:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6949:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6949:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6936:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "6936:12:12"
																},
																"nativeSrc": "6936:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6936:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6926:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6926:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6965:103:12",
															"nodeType": "YulAssignment",
															"src": "6965:103:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7041:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7041:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7049:4:12",
																				"nodeType": "YulLiteral",
																				"src": "7049:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7037:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7037:3:12"
																		},
																		"nativeSrc": "7037:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7037:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7056:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7056:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7064:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7064:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "6974:62:12",
																	"nodeType": "YulIdentifier",
																	"src": "6974:62:12"
																},
																"nativeSrc": "6974:94:12",
																"nodeType": "YulFunctionCall",
																"src": "6974:94:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6965:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6965:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6704:370:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6759:6:12",
														"nodeType": "YulTypedName",
														"src": "6759:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6767:3:12",
														"nodeType": "YulTypedName",
														"src": "6767:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6775:5:12",
														"nodeType": "YulTypedName",
														"src": "6775:5:12",
														"type": ""
													}
												],
												"src": "6704:370:12"
											},
											{
												"body": {
													"nativeSrc": "7169:28:12",
													"nodeType": "YulBlock",
													"src": "7169:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7186:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7186:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7189:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7189:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7179:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7179:6:12"
																},
																"nativeSrc": "7179:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7179:12:12"
															},
															"nativeSrc": "7179:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "7179:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7080:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7080:117:12"
											},
											{
												"body": {
													"nativeSrc": "7269:241:12",
													"nodeType": "YulBlock",
													"src": "7269:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7374:22:12",
																"nodeType": "YulBlock",
																"src": "7374:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7376:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7376:16:12"
																			},
																			"nativeSrc": "7376:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7376:18:12"
																		},
																		"nativeSrc": "7376:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7376:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7346:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7346:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7354:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7354:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7343:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7343:2:12"
																},
																"nativeSrc": "7343:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7343:30:12"
															},
															"nativeSrc": "7340:56:12",
															"nodeType": "YulIf",
															"src": "7340:56:12"
														},
														{
															"nativeSrc": "7406:37:12",
															"nodeType": "YulAssignment",
															"src": "7406:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7436:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7436:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7414:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "7414:21:12"
																},
																"nativeSrc": "7414:29:12",
																"nodeType": "YulFunctionCall",
																"src": "7414:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7406:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7406:4:12"
																}
															]
														},
														{
															"nativeSrc": "7480:23:12",
															"nodeType": "YulAssignment",
															"src": "7480:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7492:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7492:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7498:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7498:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7488:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:12"
																},
																"nativeSrc": "7488:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7488:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7480:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7480:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7203:307:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7253:6:12",
														"nodeType": "YulTypedName",
														"src": "7253:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7264:4:12",
														"nodeType": "YulTypedName",
														"src": "7264:4:12",
														"type": ""
													}
												],
												"src": "7203:307:12"
											},
											{
												"body": {
													"nativeSrc": "7580:84:12",
													"nodeType": "YulBlock",
													"src": "7580:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7604:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7604:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7609:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7609:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7614:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7614:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7591:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7591:12:12"
																},
																"nativeSrc": "7591:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7591:30:12"
															},
															"nativeSrc": "7591:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7591:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7641:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7641:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7646:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7646:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7637:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7637:3:12"
																		},
																		"nativeSrc": "7637:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7655:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7655:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7630:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7630:6:12"
																},
																"nativeSrc": "7630:27:12",
																"nodeType": "YulFunctionCall",
																"src": "7630:27:12"
															},
															"nativeSrc": "7630:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "7630:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7516:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7562:3:12",
														"nodeType": "YulTypedName",
														"src": "7562:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7567:3:12",
														"nodeType": "YulTypedName",
														"src": "7567:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7572:6:12",
														"nodeType": "YulTypedName",
														"src": "7572:6:12",
														"type": ""
													}
												],
												"src": "7516:148:12"
											},
											{
												"body": {
													"nativeSrc": "7753:340:12",
													"nodeType": "YulBlock",
													"src": "7753:340:12",
													"statements": [
														{
															"nativeSrc": "7763:74:12",
															"nodeType": "YulAssignment",
															"src": "7763:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7829:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7829:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "7788:40:12",
																			"nodeType": "YulIdentifier",
																			"src": "7788:40:12"
																		},
																		"nativeSrc": "7788:48:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7788:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7772:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "7772:15:12"
																},
																"nativeSrc": "7772:65:12",
																"nodeType": "YulFunctionCall",
																"src": "7772:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7763:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7763:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7853:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7853:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7860:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7860:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7846:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7846:6:12"
																},
																"nativeSrc": "7846:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7846:21:12"
															},
															"nativeSrc": "7846:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7846:21:12"
														},
														{
															"nativeSrc": "7876:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7876:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7891:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7891:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7898:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7898:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7887:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7887:3:12"
																},
																"nativeSrc": "7887:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7887:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7880:3:12",
																	"nodeType": "YulTypedName",
																	"src": "7880:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7941:83:12",
																"nodeType": "YulBlock",
																"src": "7941:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7943:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7943:77:12"
																			},
																			"nativeSrc": "7943:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7943:79:12"
																		},
																		"nativeSrc": "7943:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7943:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7922:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7922:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7927:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7927:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7918:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7918:3:12"
																		},
																		"nativeSrc": "7918:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7918:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7936:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7936:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7915:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7915:2:12"
																},
																"nativeSrc": "7915:25:12",
																"nodeType": "YulFunctionCall",
																"src": "7915:25:12"
															},
															"nativeSrc": "7912:112:12",
															"nodeType": "YulIf",
															"src": "7912:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8070:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8070:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8075:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8075:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8080:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8080:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8033:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "8033:36:12"
																},
																"nativeSrc": "8033:54:12",
																"nodeType": "YulFunctionCall",
																"src": "8033:54:12"
															},
															"nativeSrc": "8033:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "8033:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "7670:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7726:3:12",
														"nodeType": "YulTypedName",
														"src": "7726:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7731:6:12",
														"nodeType": "YulTypedName",
														"src": "7731:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7739:3:12",
														"nodeType": "YulTypedName",
														"src": "7739:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7747:5:12",
														"nodeType": "YulTypedName",
														"src": "7747:5:12",
														"type": ""
													}
												],
												"src": "7670:423:12"
											},
											{
												"body": {
													"nativeSrc": "8173:277:12",
													"nodeType": "YulBlock",
													"src": "8173:277:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8222:83:12",
																"nodeType": "YulBlock",
																"src": "8222:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8224:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8224:77:12"
																			},
																			"nativeSrc": "8224:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8224:79:12"
																		},
																		"nativeSrc": "8224:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8224:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8201:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8201:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8209:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8209:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8197:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8197:3:12"
																				},
																				"nativeSrc": "8197:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8197:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8216:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8216:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8193:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8193:3:12"
																		},
																		"nativeSrc": "8193:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8193:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8186:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8186:6:12"
																},
																"nativeSrc": "8186:35:12",
																"nodeType": "YulFunctionCall",
																"src": "8186:35:12"
															},
															"nativeSrc": "8183:122:12",
															"nodeType": "YulIf",
															"src": "8183:122:12"
														},
														{
															"nativeSrc": "8314:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8314:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8341:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8328:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8328:12:12"
																},
																"nativeSrc": "8328:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8328:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8318:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8318:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8357:87:12",
															"nodeType": "YulAssignment",
															"src": "8357:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8417:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8417:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8425:4:12",
																				"nodeType": "YulLiteral",
																				"src": "8425:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8413:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8413:3:12"
																		},
																		"nativeSrc": "8413:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8413:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8432:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8432:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8440:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8440:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8366:46:12",
																	"nodeType": "YulIdentifier",
																	"src": "8366:46:12"
																},
																"nativeSrc": "8366:78:12",
																"nodeType": "YulFunctionCall",
																"src": "8366:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8357:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8357:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8112:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8151:6:12",
														"nodeType": "YulTypedName",
														"src": "8151:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8159:3:12",
														"nodeType": "YulTypedName",
														"src": "8159:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8167:5:12",
														"nodeType": "YulTypedName",
														"src": "8167:5:12",
														"type": ""
													}
												],
												"src": "8112:338:12"
											},
											{
												"body": {
													"nativeSrc": "8649:1316:12",
													"nodeType": "YulBlock",
													"src": "8649:1316:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8696:83:12",
																"nodeType": "YulBlock",
																"src": "8696:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8698:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8698:77:12"
																			},
																			"nativeSrc": "8698:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8698:79:12"
																		},
																		"nativeSrc": "8698:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8698:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8670:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8670:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8679:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8679:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8666:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8666:3:12"
																		},
																		"nativeSrc": "8666:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8666:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8691:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8691:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8662:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8662:3:12"
																},
																"nativeSrc": "8662:33:12",
																"nodeType": "YulFunctionCall",
																"src": "8662:33:12"
															},
															"nativeSrc": "8659:120:12",
															"nodeType": "YulIf",
															"src": "8659:120:12"
														},
														{
															"nativeSrc": "8789:117:12",
															"nodeType": "YulBlock",
															"src": "8789:117:12",
															"statements": [
																{
																	"nativeSrc": "8804:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8804:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8818:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8818:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8808:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8808:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8833:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8833:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8868:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8868:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8879:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8879:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8864:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8864:3:12"
																				},
																				"nativeSrc": "8864:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8864:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8888:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8888:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8843:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8843:20:12"
																		},
																		"nativeSrc": "8843:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8843:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8833:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8833:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8916:118:12",
															"nodeType": "YulBlock",
															"src": "8916:118:12",
															"statements": [
																{
																	"nativeSrc": "8931:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8931:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8945:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8945:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8935:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8935:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8961:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8961:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8996:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8996:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9007:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9007:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8992:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8992:3:12"
																				},
																				"nativeSrc": "8992:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8992:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9016:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9016:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8971:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8971:20:12"
																		},
																		"nativeSrc": "8971:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8971:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8961:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8961:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9044:303:12",
															"nodeType": "YulBlock",
															"src": "9044:303:12",
															"statements": [
																{
																	"nativeSrc": "9059:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9059:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9090:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9090:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9101:2:12",
																						"nodeType": "YulLiteral",
																						"src": "9101:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9086:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9086:3:12"
																				},
																				"nativeSrc": "9086:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9086:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9073:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "9073:12:12"
																		},
																		"nativeSrc": "9073:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9073:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9063:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9063:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9152:83:12",
																		"nodeType": "YulBlock",
																		"src": "9152:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9154:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "9154:77:12"
																					},
																					"nativeSrc": "9154:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9154:79:12"
																				},
																				"nativeSrc": "9154:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9154:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9124:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9124:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9132:18:12",
																				"nodeType": "YulLiteral",
																				"src": "9132:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9121:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9121:2:12"
																		},
																		"nativeSrc": "9121:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9121:30:12"
																	},
																	"nativeSrc": "9118:117:12",
																	"nodeType": "YulIf",
																	"src": "9118:117:12"
																},
																{
																	"nativeSrc": "9249:88:12",
																	"nodeType": "YulAssignment",
																	"src": "9249:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9309:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9309:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9320:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9320:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9305:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9305:3:12"
																				},
																				"nativeSrc": "9305:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9305:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9329:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9329:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "9259:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "9259:45:12"
																		},
																		"nativeSrc": "9259:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9259:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9249:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9249:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9357:303:12",
															"nodeType": "YulBlock",
															"src": "9357:303:12",
															"statements": [
																{
																	"nativeSrc": "9372:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9372:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9403:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9403:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9414:2:12",
																						"nodeType": "YulLiteral",
																						"src": "9414:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9399:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9399:3:12"
																				},
																				"nativeSrc": "9399:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9399:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9386:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "9386:12:12"
																		},
																		"nativeSrc": "9386:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9386:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9376:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9376:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9465:83:12",
																		"nodeType": "YulBlock",
																		"src": "9465:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9467:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "9467:77:12"
																					},
																					"nativeSrc": "9467:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9467:79:12"
																				},
																				"nativeSrc": "9467:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9467:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9437:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9437:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9445:18:12",
																				"nodeType": "YulLiteral",
																				"src": "9445:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9434:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9434:2:12"
																		},
																		"nativeSrc": "9434:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9434:30:12"
																	},
																	"nativeSrc": "9431:117:12",
																	"nodeType": "YulIf",
																	"src": "9431:117:12"
																},
																{
																	"nativeSrc": "9562:88:12",
																	"nodeType": "YulAssignment",
																	"src": "9562:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9622:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9622:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9633:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9633:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9618:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9618:3:12"
																				},
																				"nativeSrc": "9618:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9618:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9642:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9642:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "9572:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "9572:45:12"
																		},
																		"nativeSrc": "9572:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9572:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9562:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9562:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9670:288:12",
															"nodeType": "YulBlock",
															"src": "9670:288:12",
															"statements": [
																{
																	"nativeSrc": "9685:47:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9685:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9716:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9716:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9727:3:12",
																						"nodeType": "YulLiteral",
																						"src": "9727:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9712:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9712:3:12"
																				},
																				"nativeSrc": "9712:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9712:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9699:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "9699:12:12"
																		},
																		"nativeSrc": "9699:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9699:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9689:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9689:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9779:83:12",
																		"nodeType": "YulBlock",
																		"src": "9779:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9781:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "9781:77:12"
																					},
																					"nativeSrc": "9781:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9781:79:12"
																				},
																				"nativeSrc": "9781:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9781:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9751:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9751:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9759:18:12",
																				"nodeType": "YulLiteral",
																				"src": "9759:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9748:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9748:2:12"
																		},
																		"nativeSrc": "9748:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9748:30:12"
																	},
																	"nativeSrc": "9745:117:12",
																	"nodeType": "YulIf",
																	"src": "9745:117:12"
																},
																{
																	"nativeSrc": "9876:72:12",
																	"nodeType": "YulAssignment",
																	"src": "9876:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9920:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9920:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9931:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9931:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9916:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9916:3:12"
																				},
																				"nativeSrc": "9916:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9916:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9940:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9940:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9886:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "9886:29:12"
																		},
																		"nativeSrc": "9886:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9886:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "9876:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9876:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "8456:1509:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8587:9:12",
														"nodeType": "YulTypedName",
														"src": "8587:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8598:7:12",
														"nodeType": "YulTypedName",
														"src": "8598:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8610:6:12",
														"nodeType": "YulTypedName",
														"src": "8610:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8618:6:12",
														"nodeType": "YulTypedName",
														"src": "8618:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8626:6:12",
														"nodeType": "YulTypedName",
														"src": "8626:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8634:6:12",
														"nodeType": "YulTypedName",
														"src": "8634:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8642:6:12",
														"nodeType": "YulTypedName",
														"src": "8642:6:12",
														"type": ""
													}
												],
												"src": "8456:1509:12"
											},
											{
												"body": {
													"nativeSrc": "10053:229:12",
													"nodeType": "YulBlock",
													"src": "10053:229:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10158:22:12",
																"nodeType": "YulBlock",
																"src": "10158:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10160:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10160:16:12"
																			},
																			"nativeSrc": "10160:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10160:18:12"
																		},
																		"nativeSrc": "10160:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10160:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10130:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10130:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10138:18:12",
																		"nodeType": "YulLiteral",
																		"src": "10138:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10127:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10127:2:12"
																},
																"nativeSrc": "10127:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10127:30:12"
															},
															"nativeSrc": "10124:56:12",
															"nodeType": "YulIf",
															"src": "10124:56:12"
														},
														{
															"nativeSrc": "10190:25:12",
															"nodeType": "YulAssignment",
															"src": "10190:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10202:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10202:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10210:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10210:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10198:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10198:3:12"
																},
																"nativeSrc": "10198:17:12",
																"nodeType": "YulFunctionCall",
																"src": "10198:17:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10190:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10190:4:12"
																}
															]
														},
														{
															"nativeSrc": "10252:23:12",
															"nodeType": "YulAssignment",
															"src": "10252:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10264:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10264:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10270:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10270:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10260:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10260:3:12"
																},
																"nativeSrc": "10260:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10260:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10252:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10252:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "9971:311:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10037:6:12",
														"nodeType": "YulTypedName",
														"src": "10037:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10048:4:12",
														"nodeType": "YulTypedName",
														"src": "10048:4:12",
														"type": ""
													}
												],
												"src": "9971:311:12"
											},
											{
												"body": {
													"nativeSrc": "10407:608:12",
													"nodeType": "YulBlock",
													"src": "10407:608:12",
													"statements": [
														{
															"nativeSrc": "10417:90:12",
															"nodeType": "YulAssignment",
															"src": "10417:90:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10499:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10499:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "10442:56:12",
																			"nodeType": "YulIdentifier",
																			"src": "10442:56:12"
																		},
																		"nativeSrc": "10442:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10442:64:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10426:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "10426:15:12"
																},
																"nativeSrc": "10426:81:12",
																"nodeType": "YulFunctionCall",
																"src": "10426:81:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10417:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10417:5:12"
																}
															]
														},
														{
															"nativeSrc": "10516:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10516:16:12",
															"value": {
																"name": "array",
																"nativeSrc": "10527:5:12",
																"nodeType": "YulIdentifier",
																"src": "10527:5:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10520:3:12",
																	"nodeType": "YulTypedName",
																	"src": "10520:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10549:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10549:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10556:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10556:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10542:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10542:6:12"
																},
																"nativeSrc": "10542:21:12",
																"nodeType": "YulFunctionCall",
																"src": "10542:21:12"
															},
															"nativeSrc": "10542:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "10542:21:12"
														},
														{
															"nativeSrc": "10572:23:12",
															"nodeType": "YulAssignment",
															"src": "10572:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10583:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10583:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10590:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10590:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10579:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10579:3:12"
																},
																"nativeSrc": "10579:16:12",
																"nodeType": "YulFunctionCall",
																"src": "10579:16:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "10572:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10572:3:12"
																}
															]
														},
														{
															"nativeSrc": "10605:44:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10605:44:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10623:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10623:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10635:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10635:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10643:4:12",
																				"nodeType": "YulLiteral",
																				"src": "10643:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "10631:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10631:3:12"
																		},
																		"nativeSrc": "10631:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10631:17:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10619:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10619:3:12"
																},
																"nativeSrc": "10619:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10619:30:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "10609:6:12",
																	"nodeType": "YulTypedName",
																	"src": "10609:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10677:103:12",
																"nodeType": "YulBlock",
																"src": "10677:103:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10691:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10691:77:12"
																			},
																			"nativeSrc": "10691:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10691:79:12"
																		},
																		"nativeSrc": "10691:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10691:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10664:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10664:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10672:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10672:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10661:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10661:2:12"
																},
																"nativeSrc": "10661:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10661:15:12"
															},
															"nativeSrc": "10658:122:12",
															"nodeType": "YulIf",
															"src": "10658:122:12"
														},
														{
															"body": {
																"nativeSrc": "10865:144:12",
																"nodeType": "YulBlock",
																"src": "10865:144:12",
																"statements": [
																	{
																		"nativeSrc": "10880:21:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10880:21:12",
																		"value": {
																			"name": "src",
																			"nativeSrc": "10898:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10898:3:12"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "10884:10:12",
																				"nodeType": "YulTypedName",
																				"src": "10884:10:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10922:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10922:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "10948:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "10948:10:12"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "10960:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "10960:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "10927:20:12",
																						"nodeType": "YulIdentifier",
																						"src": "10927:20:12"
																					},
																					"nativeSrc": "10927:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "10927:37:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10915:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10915:6:12"
																			},
																			"nativeSrc": "10915:50:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10915:50:12"
																		},
																		"nativeSrc": "10915:50:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10915:50:12"
																	},
																	{
																		"nativeSrc": "10978:21:12",
																		"nodeType": "YulAssignment",
																		"src": "10978:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10989:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10989:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10994:4:12",
																					"nodeType": "YulLiteral",
																					"src": "10994:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10985:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10985:3:12"
																			},
																			"nativeSrc": "10985:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10985:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "10978:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10978:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10818:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10818:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10823:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10823:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10815:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10815:2:12"
																},
																"nativeSrc": "10815:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10815:15:12"
															},
															"nativeSrc": "10789:220:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10831:25:12",
																"nodeType": "YulBlock",
																"src": "10831:25:12",
																"statements": [
																	{
																		"nativeSrc": "10833:21:12",
																		"nodeType": "YulAssignment",
																		"src": "10833:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "10844:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10844:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10849:4:12",
																					"nodeType": "YulLiteral",
																					"src": "10849:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10840:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10840:3:12"
																			},
																			"nativeSrc": "10840:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10840:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "10833:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10833:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10793:21:12",
																"nodeType": "YulBlock",
																"src": "10793:21:12",
																"statements": [
																	{
																		"nativeSrc": "10795:17:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10795:17:12",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "10806:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10806:6:12"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "10799:3:12",
																				"nodeType": "YulTypedName",
																				"src": "10799:3:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10789:220:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "10305:710:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10377:6:12",
														"nodeType": "YulTypedName",
														"src": "10377:6:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10385:6:12",
														"nodeType": "YulTypedName",
														"src": "10385:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10393:3:12",
														"nodeType": "YulTypedName",
														"src": "10393:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10401:5:12",
														"nodeType": "YulTypedName",
														"src": "10401:5:12",
														"type": ""
													}
												],
												"src": "10305:710:12"
											},
											{
												"body": {
													"nativeSrc": "11115:293:12",
													"nodeType": "YulBlock",
													"src": "11115:293:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11164:83:12",
																"nodeType": "YulBlock",
																"src": "11164:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11166:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "11166:77:12"
																			},
																			"nativeSrc": "11166:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11166:79:12"
																		},
																		"nativeSrc": "11166:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11166:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11143:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11143:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11151:4:12",
																						"nodeType": "YulLiteral",
																						"src": "11151:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11139:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11139:3:12"
																				},
																				"nativeSrc": "11139:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11139:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11158:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11158:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11135:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11135:3:12"
																		},
																		"nativeSrc": "11135:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11135:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11128:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11128:6:12"
																},
																"nativeSrc": "11128:35:12",
																"nodeType": "YulFunctionCall",
																"src": "11128:35:12"
															},
															"nativeSrc": "11125:122:12",
															"nodeType": "YulIf",
															"src": "11125:122:12"
														},
														{
															"nativeSrc": "11256:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11256:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11283:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11283:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11270:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "11270:12:12"
																},
																"nativeSrc": "11270:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11270:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11260:6:12",
																	"nodeType": "YulTypedName",
																	"src": "11260:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11299:103:12",
															"nodeType": "YulAssignment",
															"src": "11299:103:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11375:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11375:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11383:4:12",
																				"nodeType": "YulLiteral",
																				"src": "11383:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11371:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11371:3:12"
																		},
																		"nativeSrc": "11371:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11371:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11390:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11390:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11398:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11398:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "11308:62:12",
																	"nodeType": "YulIdentifier",
																	"src": "11308:62:12"
																},
																"nativeSrc": "11308:94:12",
																"nodeType": "YulFunctionCall",
																"src": "11308:94:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11299:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11299:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11038:370:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11093:6:12",
														"nodeType": "YulTypedName",
														"src": "11093:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11101:3:12",
														"nodeType": "YulTypedName",
														"src": "11101:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11109:5:12",
														"nodeType": "YulTypedName",
														"src": "11109:5:12",
														"type": ""
													}
												],
												"src": "11038:370:12"
											},
											{
												"body": {
													"nativeSrc": "11547:761:12",
													"nodeType": "YulBlock",
													"src": "11547:761:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11593:83:12",
																"nodeType": "YulBlock",
																"src": "11593:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11595:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "11595:77:12"
																			},
																			"nativeSrc": "11595:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11595:79:12"
																		},
																		"nativeSrc": "11595:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11595:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11568:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11568:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11577:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11577:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11564:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11564:3:12"
																		},
																		"nativeSrc": "11564:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11564:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11589:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11589:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11560:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11560:3:12"
																},
																"nativeSrc": "11560:32:12",
																"nodeType": "YulFunctionCall",
																"src": "11560:32:12"
															},
															"nativeSrc": "11557:119:12",
															"nodeType": "YulIf",
															"src": "11557:119:12"
														},
														{
															"nativeSrc": "11686:302:12",
															"nodeType": "YulBlock",
															"src": "11686:302:12",
															"statements": [
																{
																	"nativeSrc": "11701:45:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11701:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11732:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11732:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11743:1:12",
																						"nodeType": "YulLiteral",
																						"src": "11743:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11728:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11728:3:12"
																				},
																				"nativeSrc": "11728:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11728:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11715:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "11715:12:12"
																		},
																		"nativeSrc": "11715:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11715:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11705:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11705:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11793:83:12",
																		"nodeType": "YulBlock",
																		"src": "11793:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11795:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "11795:77:12"
																					},
																					"nativeSrc": "11795:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "11795:79:12"
																				},
																				"nativeSrc": "11795:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "11795:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11765:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11765:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11773:18:12",
																				"nodeType": "YulLiteral",
																				"src": "11773:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11762:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11762:2:12"
																		},
																		"nativeSrc": "11762:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11762:30:12"
																	},
																	"nativeSrc": "11759:117:12",
																	"nodeType": "YulIf",
																	"src": "11759:117:12"
																},
																{
																	"nativeSrc": "11890:88:12",
																	"nodeType": "YulAssignment",
																	"src": "11890:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11950:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11950:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11961:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11961:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11946:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11946:3:12"
																				},
																				"nativeSrc": "11946:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11946:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11970:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11970:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "11900:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "11900:45:12"
																		},
																		"nativeSrc": "11900:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11900:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11890:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11890:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11998:303:12",
															"nodeType": "YulBlock",
															"src": "11998:303:12",
															"statements": [
																{
																	"nativeSrc": "12013:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12013:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12044:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12044:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12055:2:12",
																						"nodeType": "YulLiteral",
																						"src": "12055:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12040:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12040:3:12"
																				},
																				"nativeSrc": "12040:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12040:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12027:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "12027:12:12"
																		},
																		"nativeSrc": "12027:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12027:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12017:6:12",
																			"nodeType": "YulTypedName",
																			"src": "12017:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12106:83:12",
																		"nodeType": "YulBlock",
																		"src": "12106:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12108:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "12108:77:12"
																					},
																					"nativeSrc": "12108:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12108:79:12"
																				},
																				"nativeSrc": "12108:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "12108:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12078:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12078:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12086:18:12",
																				"nodeType": "YulLiteral",
																				"src": "12086:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12075:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "12075:2:12"
																		},
																		"nativeSrc": "12075:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12075:30:12"
																	},
																	"nativeSrc": "12072:117:12",
																	"nodeType": "YulIf",
																	"src": "12072:117:12"
																},
																{
																	"nativeSrc": "12203:88:12",
																	"nodeType": "YulAssignment",
																	"src": "12203:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12263:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12263:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12274:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12274:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12259:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12259:3:12"
																				},
																				"nativeSrc": "12259:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12259:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12283:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12283:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "12213:45:12",
																			"nodeType": "YulIdentifier",
																			"src": "12213:45:12"
																		},
																		"nativeSrc": "12213:78:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12213:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12203:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12203:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11414:894:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11509:9:12",
														"nodeType": "YulTypedName",
														"src": "11509:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11520:7:12",
														"nodeType": "YulTypedName",
														"src": "11520:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11532:6:12",
														"nodeType": "YulTypedName",
														"src": "11532:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11540:6:12",
														"nodeType": "YulTypedName",
														"src": "11540:6:12",
														"type": ""
													}
												],
												"src": "11414:894:12"
											},
											{
												"body": {
													"nativeSrc": "12388:40:12",
													"nodeType": "YulBlock",
													"src": "12388:40:12",
													"statements": [
														{
															"nativeSrc": "12399:22:12",
															"nodeType": "YulAssignment",
															"src": "12399:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12415:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12415:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12409:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12409:5:12"
																},
																"nativeSrc": "12409:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12409:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12399:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12399:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12314:114:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12371:5:12",
														"nodeType": "YulTypedName",
														"src": "12371:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12381:6:12",
														"nodeType": "YulTypedName",
														"src": "12381:6:12",
														"type": ""
													}
												],
												"src": "12314:114:12"
											},
											{
												"body": {
													"nativeSrc": "12545:73:12",
													"nodeType": "YulBlock",
													"src": "12545:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12562:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12562:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12567:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12567:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12555:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12555:6:12"
																},
																"nativeSrc": "12555:19:12",
																"nodeType": "YulFunctionCall",
																"src": "12555:19:12"
															},
															"nativeSrc": "12555:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "12555:19:12"
														},
														{
															"nativeSrc": "12583:29:12",
															"nodeType": "YulAssignment",
															"src": "12583:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12602:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12602:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12607:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12607:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12598:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12598:3:12"
																},
																"nativeSrc": "12598:14:12",
																"nodeType": "YulFunctionCall",
																"src": "12598:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12583:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "12583:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "12434:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12517:3:12",
														"nodeType": "YulTypedName",
														"src": "12517:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12522:6:12",
														"nodeType": "YulTypedName",
														"src": "12522:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12533:11:12",
														"nodeType": "YulTypedName",
														"src": "12533:11:12",
														"type": ""
													}
												],
												"src": "12434:184:12"
											},
											{
												"body": {
													"nativeSrc": "12696:60:12",
													"nodeType": "YulBlock",
													"src": "12696:60:12",
													"statements": [
														{
															"nativeSrc": "12706:11:12",
															"nodeType": "YulAssignment",
															"src": "12706:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "12714:3:12",
																"nodeType": "YulIdentifier",
																"src": "12714:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12706:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12706:4:12"
																}
															]
														},
														{
															"nativeSrc": "12727:22:12",
															"nodeType": "YulAssignment",
															"src": "12727:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "12739:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12739:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12744:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12744:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12735:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12735:3:12"
																},
																"nativeSrc": "12735:14:12",
																"nodeType": "YulFunctionCall",
																"src": "12735:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12727:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12727:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12624:132:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12683:3:12",
														"nodeType": "YulTypedName",
														"src": "12683:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12691:4:12",
														"nodeType": "YulTypedName",
														"src": "12691:4:12",
														"type": ""
													}
												],
												"src": "12624:132:12"
											},
											{
												"body": {
													"nativeSrc": "12817:53:12",
													"nodeType": "YulBlock",
													"src": "12817:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12834:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12834:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12857:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12857:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12839:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "12839:17:12"
																		},
																		"nativeSrc": "12839:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12839:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12827:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12827:6:12"
																},
																"nativeSrc": "12827:37:12",
																"nodeType": "YulFunctionCall",
																"src": "12827:37:12"
															},
															"nativeSrc": "12827:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "12827:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "12762:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12805:5:12",
														"nodeType": "YulTypedName",
														"src": "12805:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12812:3:12",
														"nodeType": "YulTypedName",
														"src": "12812:3:12",
														"type": ""
													}
												],
												"src": "12762:108:12"
											},
											{
												"body": {
													"nativeSrc": "12956:99:12",
													"nodeType": "YulBlock",
													"src": "12956:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13000:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13000:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13008:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13008:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "12966:33:12",
																	"nodeType": "YulIdentifier",
																	"src": "12966:33:12"
																},
																"nativeSrc": "12966:46:12",
																"nodeType": "YulFunctionCall",
																"src": "12966:46:12"
															},
															"nativeSrc": "12966:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "12966:46:12"
														},
														{
															"nativeSrc": "13021:28:12",
															"nodeType": "YulAssignment",
															"src": "13021:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13039:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13039:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13044:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13044:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13035:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13035:3:12"
																},
																"nativeSrc": "13035:14:12",
																"nodeType": "YulFunctionCall",
																"src": "13035:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "13021:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "13021:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "12876:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "12929:6:12",
														"nodeType": "YulTypedName",
														"src": "12929:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12937:3:12",
														"nodeType": "YulTypedName",
														"src": "12937:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "12945:10:12",
														"nodeType": "YulTypedName",
														"src": "12945:10:12",
														"type": ""
													}
												],
												"src": "12876:179:12"
											},
											{
												"body": {
													"nativeSrc": "13136:38:12",
													"nodeType": "YulBlock",
													"src": "13136:38:12",
													"statements": [
														{
															"nativeSrc": "13146:22:12",
															"nodeType": "YulAssignment",
															"src": "13146:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13158:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13158:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13163:4:12",
																		"nodeType": "YulLiteral",
																		"src": "13163:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13154:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13154:3:12"
																},
																"nativeSrc": "13154:14:12",
																"nodeType": "YulFunctionCall",
																"src": "13154:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "13146:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13146:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13061:113:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13123:3:12",
														"nodeType": "YulTypedName",
														"src": "13123:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "13131:4:12",
														"nodeType": "YulTypedName",
														"src": "13131:4:12",
														"type": ""
													}
												],
												"src": "13061:113:12"
											},
											{
												"body": {
													"nativeSrc": "13334:608:12",
													"nodeType": "YulBlock",
													"src": "13334:608:12",
													"statements": [
														{
															"nativeSrc": "13344:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13344:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13406:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13406:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "13358:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "13358:47:12"
																},
																"nativeSrc": "13358:54:12",
																"nodeType": "YulFunctionCall",
																"src": "13358:54:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13348:6:12",
																	"nodeType": "YulTypedName",
																	"src": "13348:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13421:93:12",
															"nodeType": "YulAssignment",
															"src": "13421:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13502:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13502:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13507:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13507:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "13428:73:12",
																	"nodeType": "YulIdentifier",
																	"src": "13428:73:12"
																},
																"nativeSrc": "13428:86:12",
																"nodeType": "YulFunctionCall",
																"src": "13428:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13421:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13421:3:12"
																}
															]
														},
														{
															"nativeSrc": "13523:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13523:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13588:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13588:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "13538:49:12",
																	"nodeType": "YulIdentifier",
																	"src": "13538:49:12"
																},
																"nativeSrc": "13538:56:12",
																"nodeType": "YulFunctionCall",
																"src": "13538:56:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "13527:7:12",
																	"nodeType": "YulTypedName",
																	"src": "13527:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13603:21:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13603:21:12",
															"value": {
																"name": "baseRef",
																"nativeSrc": "13617:7:12",
																"nodeType": "YulIdentifier",
																"src": "13617:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "13607:6:12",
																	"nodeType": "YulTypedName",
																	"src": "13607:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13693:224:12",
																"nodeType": "YulBlock",
																"src": "13693:224:12",
																"statements": [
																	{
																		"nativeSrc": "13707:34:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13707:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "13734:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "13734:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "13728:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13728:5:12"
																			},
																			"nativeSrc": "13728:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13728:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "13711:13:12",
																				"nodeType": "YulTypedName",
																				"src": "13711:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13754:70:12",
																		"nodeType": "YulAssignment",
																		"src": "13754:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "13805:13:12",
																					"nodeType": "YulIdentifier",
																					"src": "13805:13:12"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "13820:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13820:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "13761:43:12",
																				"nodeType": "YulIdentifier",
																				"src": "13761:43:12"
																			},
																			"nativeSrc": "13761:63:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13761:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "13754:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "13754:3:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "13837:70:12",
																		"nodeType": "YulAssignment",
																		"src": "13837:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "13900:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "13900:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "13847:52:12",
																				"nodeType": "YulIdentifier",
																				"src": "13847:52:12"
																			},
																			"nativeSrc": "13847:60:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13847:60:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "13837:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13837:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "13655:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13655:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13658:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13658:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13652:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "13652:2:12"
																},
																"nativeSrc": "13652:13:12",
																"nodeType": "YulFunctionCall",
																"src": "13652:13:12"
															},
															"nativeSrc": "13633:284:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13666:18:12",
																"nodeType": "YulBlock",
																"src": "13666:18:12",
																"statements": [
																	{
																		"nativeSrc": "13668:14:12",
																		"nodeType": "YulAssignment",
																		"src": "13668:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "13677:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "13677:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13680:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13673:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "13673:3:12"
																			},
																			"nativeSrc": "13673:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13673:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "13668:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "13668:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13637:14:12",
																"nodeType": "YulBlock",
																"src": "13637:14:12",
																"statements": [
																	{
																		"nativeSrc": "13639:10:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13639:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "13648:1:12",
																			"nodeType": "YulLiteral",
																			"src": "13648:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "13643:1:12",
																				"nodeType": "YulTypedName",
																				"src": "13643:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13633:284:12"
														},
														{
															"nativeSrc": "13926:10:12",
															"nodeType": "YulAssignment",
															"src": "13926:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "13933:3:12",
																"nodeType": "YulIdentifier",
																"src": "13933:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13926:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13926:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13210:732:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13313:5:12",
														"nodeType": "YulTypedName",
														"src": "13313:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13320:3:12",
														"nodeType": "YulTypedName",
														"src": "13320:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13329:3:12",
														"nodeType": "YulTypedName",
														"src": "13329:3:12",
														"type": ""
													}
												],
												"src": "13210:732:12"
											},
											{
												"body": {
													"nativeSrc": "14096:225:12",
													"nodeType": "YulBlock",
													"src": "14096:225:12",
													"statements": [
														{
															"nativeSrc": "14106:26:12",
															"nodeType": "YulAssignment",
															"src": "14106:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14118:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14118:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14129:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14129:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14114:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14114:3:12"
																},
																"nativeSrc": "14114:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14114:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14106:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14106:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14153:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14153:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14164:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14164:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14149:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14149:3:12"
																		},
																		"nativeSrc": "14149:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14149:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14172:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14172:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14178:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14178:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14168:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14168:3:12"
																		},
																		"nativeSrc": "14168:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14168:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14142:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14142:6:12"
																},
																"nativeSrc": "14142:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14142:47:12"
															},
															"nativeSrc": "14142:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14142:47:12"
														},
														{
															"nativeSrc": "14198:116:12",
															"nodeType": "YulAssignment",
															"src": "14198:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14300:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14300:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14309:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14309:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14206:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "14206:93:12"
																},
																"nativeSrc": "14206:108:12",
																"nodeType": "YulFunctionCall",
																"src": "14206:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14198:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14198:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "13948:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14068:9:12",
														"nodeType": "YulTypedName",
														"src": "14068:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14080:6:12",
														"nodeType": "YulTypedName",
														"src": "14080:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14091:4:12",
														"nodeType": "YulTypedName",
														"src": "14091:4:12",
														"type": ""
													}
												],
												"src": "13948:373:12"
											},
											{
												"body": {
													"nativeSrc": "14367:76:12",
													"nodeType": "YulBlock",
													"src": "14367:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "14421:16:12",
																"nodeType": "YulBlock",
																"src": "14421:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14430:1:12",
																					"nodeType": "YulLiteral",
																					"src": "14430:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14433:1:12",
																					"nodeType": "YulLiteral",
																					"src": "14433:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14423:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14423:6:12"
																			},
																			"nativeSrc": "14423:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14423:12:12"
																		},
																		"nativeSrc": "14423:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14423:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14390:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "14390:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14412:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "14412:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14397:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "14397:14:12"
																				},
																				"nativeSrc": "14397:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14397:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14387:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "14387:2:12"
																		},
																		"nativeSrc": "14387:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14387:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14380:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14380:6:12"
																},
																"nativeSrc": "14380:40:12",
																"nodeType": "YulFunctionCall",
																"src": "14380:40:12"
															},
															"nativeSrc": "14377:60:12",
															"nodeType": "YulIf",
															"src": "14377:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14327:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14360:5:12",
														"nodeType": "YulTypedName",
														"src": "14360:5:12",
														"type": ""
													}
												],
												"src": "14327:116:12"
											},
											{
												"body": {
													"nativeSrc": "14498:84:12",
													"nodeType": "YulBlock",
													"src": "14498:84:12",
													"statements": [
														{
															"nativeSrc": "14508:29:12",
															"nodeType": "YulAssignment",
															"src": "14508:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14530:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14530:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "14517:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "14517:12:12"
																},
																"nativeSrc": "14517:20:12",
																"nodeType": "YulFunctionCall",
																"src": "14517:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14508:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "14508:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14570:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "14570:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14546:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "14546:23:12"
																},
																"nativeSrc": "14546:30:12",
																"nodeType": "YulFunctionCall",
																"src": "14546:30:12"
															},
															"nativeSrc": "14546:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "14546:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "14449:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14476:6:12",
														"nodeType": "YulTypedName",
														"src": "14476:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14484:3:12",
														"nodeType": "YulTypedName",
														"src": "14484:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14492:5:12",
														"nodeType": "YulTypedName",
														"src": "14492:5:12",
														"type": ""
													}
												],
												"src": "14449:133:12"
											},
											{
												"body": {
													"nativeSrc": "14668:388:12",
													"nodeType": "YulBlock",
													"src": "14668:388:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "14714:83:12",
																"nodeType": "YulBlock",
																"src": "14714:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14716:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "14716:77:12"
																			},
																			"nativeSrc": "14716:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14716:79:12"
																		},
																		"nativeSrc": "14716:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14716:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14689:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "14689:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14698:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14698:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14685:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14685:3:12"
																		},
																		"nativeSrc": "14685:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14685:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14710:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14710:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14681:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14681:3:12"
																},
																"nativeSrc": "14681:32:12",
																"nodeType": "YulFunctionCall",
																"src": "14681:32:12"
															},
															"nativeSrc": "14678:119:12",
															"nodeType": "YulIf",
															"src": "14678:119:12"
														},
														{
															"nativeSrc": "14807:117:12",
															"nodeType": "YulBlock",
															"src": "14807:117:12",
															"statements": [
																{
																	"nativeSrc": "14822:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14822:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14836:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14836:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14826:6:12",
																			"nodeType": "YulTypedName",
																			"src": "14826:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14851:63:12",
																	"nodeType": "YulAssignment",
																	"src": "14851:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14886:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "14886:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14897:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "14897:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14882:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "14882:3:12"
																				},
																				"nativeSrc": "14882:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14882:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14906:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "14906:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14861:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "14861:20:12"
																		},
																		"nativeSrc": "14861:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14861:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14851:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "14851:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14934:115:12",
															"nodeType": "YulBlock",
															"src": "14934:115:12",
															"statements": [
																{
																	"nativeSrc": "14949:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14949:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14963:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14963:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14953:6:12",
																			"nodeType": "YulTypedName",
																			"src": "14953:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14979:60:12",
																	"nodeType": "YulAssignment",
																	"src": "14979:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15011:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "15011:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15022:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "15022:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15007:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "15007:3:12"
																				},
																				"nativeSrc": "15007:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "15007:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15031:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15031:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "14989:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "14989:17:12"
																		},
																		"nativeSrc": "14989:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14989:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14979:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "14979:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "14588:468:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14630:9:12",
														"nodeType": "YulTypedName",
														"src": "14630:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14641:7:12",
														"nodeType": "YulTypedName",
														"src": "14641:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14653:6:12",
														"nodeType": "YulTypedName",
														"src": "14653:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14661:6:12",
														"nodeType": "YulTypedName",
														"src": "14661:6:12",
														"type": ""
													}
												],
												"src": "14588:468:12"
											},
											{
												"body": {
													"nativeSrc": "15145:391:12",
													"nodeType": "YulBlock",
													"src": "15145:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "15191:83:12",
																"nodeType": "YulBlock",
																"src": "15191:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15193:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "15193:77:12"
																			},
																			"nativeSrc": "15193:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15193:79:12"
																		},
																		"nativeSrc": "15193:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15193:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15166:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15166:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15175:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15175:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15162:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15162:3:12"
																		},
																		"nativeSrc": "15162:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15162:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15187:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15187:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15158:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15158:3:12"
																},
																"nativeSrc": "15158:32:12",
																"nodeType": "YulFunctionCall",
																"src": "15158:32:12"
															},
															"nativeSrc": "15155:119:12",
															"nodeType": "YulIf",
															"src": "15155:119:12"
														},
														{
															"nativeSrc": "15284:117:12",
															"nodeType": "YulBlock",
															"src": "15284:117:12",
															"statements": [
																{
																	"nativeSrc": "15299:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15299:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15313:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15313:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15303:6:12",
																			"nodeType": "YulTypedName",
																			"src": "15303:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15328:63:12",
																	"nodeType": "YulAssignment",
																	"src": "15328:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15363:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "15363:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15374:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "15374:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15359:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "15359:3:12"
																				},
																				"nativeSrc": "15359:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "15359:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15383:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15383:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15338:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "15338:20:12"
																		},
																		"nativeSrc": "15338:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15338:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15328:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "15328:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15411:118:12",
															"nodeType": "YulBlock",
															"src": "15411:118:12",
															"statements": [
																{
																	"nativeSrc": "15426:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15426:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15440:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15440:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15430:6:12",
																			"nodeType": "YulTypedName",
																			"src": "15430:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15456:63:12",
																	"nodeType": "YulAssignment",
																	"src": "15456:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15491:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "15491:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15502:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "15502:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15487:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "15487:3:12"
																				},
																				"nativeSrc": "15487:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "15487:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15511:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15511:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15466:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "15466:20:12"
																		},
																		"nativeSrc": "15466:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15466:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15456:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "15456:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "15062:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15107:9:12",
														"nodeType": "YulTypedName",
														"src": "15107:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15118:7:12",
														"nodeType": "YulTypedName",
														"src": "15118:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15130:6:12",
														"nodeType": "YulTypedName",
														"src": "15130:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15138:6:12",
														"nodeType": "YulTypedName",
														"src": "15138:6:12",
														"type": ""
													}
												],
												"src": "15062:474:12"
											},
											{
												"body": {
													"nativeSrc": "15685:946:12",
													"nodeType": "YulBlock",
													"src": "15685:946:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "15732:83:12",
																"nodeType": "YulBlock",
																"src": "15732:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15734:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "15734:77:12"
																			},
																			"nativeSrc": "15734:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15734:79:12"
																		},
																		"nativeSrc": "15734:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15734:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15706:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15706:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15715:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15715:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15702:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15702:3:12"
																		},
																		"nativeSrc": "15702:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15702:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15727:3:12",
																		"nodeType": "YulLiteral",
																		"src": "15727:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15698:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15698:3:12"
																},
																"nativeSrc": "15698:33:12",
																"nodeType": "YulFunctionCall",
																"src": "15698:33:12"
															},
															"nativeSrc": "15695:120:12",
															"nodeType": "YulIf",
															"src": "15695:120:12"
														},
														{
															"nativeSrc": "15825:117:12",
															"nodeType": "YulBlock",
															"src": "15825:117:12",
															"statements": [
																{
																	"nativeSrc": "15840:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15840:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15854:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15844:6:12",
																			"nodeType": "YulTypedName",
																			"src": "15844:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15869:63:12",
																	"nodeType": "YulAssignment",
																	"src": "15869:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15904:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "15904:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15915:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "15915:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15900:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "15900:3:12"
																				},
																				"nativeSrc": "15900:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "15900:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15924:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15924:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15879:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "15879:20:12"
																		},
																		"nativeSrc": "15879:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15879:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15869:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "15869:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15952:118:12",
															"nodeType": "YulBlock",
															"src": "15952:118:12",
															"statements": [
																{
																	"nativeSrc": "15967:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15967:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15981:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15981:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15971:6:12",
																			"nodeType": "YulTypedName",
																			"src": "15971:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15997:63:12",
																	"nodeType": "YulAssignment",
																	"src": "15997:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16032:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16032:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16043:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16043:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16028:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16028:3:12"
																				},
																				"nativeSrc": "16028:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16028:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16052:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16052:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16007:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "16007:20:12"
																		},
																		"nativeSrc": "16007:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16007:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15997:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "15997:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16080:118:12",
															"nodeType": "YulBlock",
															"src": "16080:118:12",
															"statements": [
																{
																	"nativeSrc": "16095:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16095:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16109:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16109:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16099:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16099:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16125:63:12",
																	"nodeType": "YulAssignment",
																	"src": "16125:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16160:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16160:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16171:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16171:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16156:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16156:3:12"
																				},
																				"nativeSrc": "16156:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16156:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16180:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16180:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16135:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "16135:20:12"
																		},
																		"nativeSrc": "16135:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16135:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16125:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16125:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16208:118:12",
															"nodeType": "YulBlock",
															"src": "16208:118:12",
															"statements": [
																{
																	"nativeSrc": "16223:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16223:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16237:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16237:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16227:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16227:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16253:63:12",
																	"nodeType": "YulAssignment",
																	"src": "16253:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16288:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16288:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16299:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16299:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16284:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16284:3:12"
																				},
																				"nativeSrc": "16284:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16284:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16308:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16308:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16263:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "16263:20:12"
																		},
																		"nativeSrc": "16263:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16263:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "16253:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16253:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16336:288:12",
															"nodeType": "YulBlock",
															"src": "16336:288:12",
															"statements": [
																{
																	"nativeSrc": "16351:47:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16351:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16382:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16382:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16393:3:12",
																						"nodeType": "YulLiteral",
																						"src": "16393:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16378:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16378:3:12"
																				},
																				"nativeSrc": "16378:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16378:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "16365:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "16365:12:12"
																		},
																		"nativeSrc": "16365:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16365:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16355:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16355:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "16445:83:12",
																		"nodeType": "YulBlock",
																		"src": "16445:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "16447:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "16447:77:12"
																					},
																					"nativeSrc": "16447:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "16447:79:12"
																				},
																				"nativeSrc": "16447:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "16447:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16417:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16417:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16425:18:12",
																				"nodeType": "YulLiteral",
																				"src": "16425:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16414:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "16414:2:12"
																		},
																		"nativeSrc": "16414:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16414:30:12"
																	},
																	"nativeSrc": "16411:117:12",
																	"nodeType": "YulIf",
																	"src": "16411:117:12"
																},
																{
																	"nativeSrc": "16542:72:12",
																	"nodeType": "YulAssignment",
																	"src": "16542:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16586:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16586:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16597:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16597:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16582:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16582:3:12"
																				},
																				"nativeSrc": "16582:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16582:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16606:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16606:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "16552:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "16552:29:12"
																		},
																		"nativeSrc": "16552:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16552:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "16542:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16542:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "15542:1089:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15623:9:12",
														"nodeType": "YulTypedName",
														"src": "15623:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15634:7:12",
														"nodeType": "YulTypedName",
														"src": "15634:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15646:6:12",
														"nodeType": "YulTypedName",
														"src": "15646:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15654:6:12",
														"nodeType": "YulTypedName",
														"src": "15654:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15662:6:12",
														"nodeType": "YulTypedName",
														"src": "15662:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15670:6:12",
														"nodeType": "YulTypedName",
														"src": "15670:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15678:6:12",
														"nodeType": "YulTypedName",
														"src": "15678:6:12",
														"type": ""
													}
												],
												"src": "15542:1089:12"
											},
											{
												"body": {
													"nativeSrc": "16665:152:12",
													"nodeType": "YulBlock",
													"src": "16665:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16682:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16682:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16685:77:12",
																		"nodeType": "YulLiteral",
																		"src": "16685:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16675:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16675:6:12"
																},
																"nativeSrc": "16675:88:12",
																"nodeType": "YulFunctionCall",
																"src": "16675:88:12"
															},
															"nativeSrc": "16675:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "16675:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16779:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16779:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16782:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16782:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16772:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16772:6:12"
																},
																"nativeSrc": "16772:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16772:15:12"
															},
															"nativeSrc": "16772:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "16772:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16803:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16803:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16806:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16806:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16796:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16796:6:12"
																},
																"nativeSrc": "16796:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16796:15:12"
															},
															"nativeSrc": "16796:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "16796:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "16637:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "16637:180:12"
											},
											{
												"body": {
													"nativeSrc": "16874:269:12",
													"nodeType": "YulBlock",
													"src": "16874:269:12",
													"statements": [
														{
															"nativeSrc": "16884:22:12",
															"nodeType": "YulAssignment",
															"src": "16884:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16898:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16898:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16904:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16904:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16894:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16894:3:12"
																},
																"nativeSrc": "16894:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16894:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "16884:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16884:6:12"
																}
															]
														},
														{
															"nativeSrc": "16915:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16915:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16945:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16945:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16951:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16951:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16941:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16941:3:12"
																},
																"nativeSrc": "16941:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16941:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "16919:18:12",
																	"nodeType": "YulTypedName",
																	"src": "16919:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16992:51:12",
																"nodeType": "YulBlock",
																"src": "16992:51:12",
																"statements": [
																	{
																		"nativeSrc": "17006:27:12",
																		"nodeType": "YulAssignment",
																		"src": "17006:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "17020:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "17020:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17028:4:12",
																					"nodeType": "YulLiteral",
																					"src": "17028:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "17016:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "17016:3:12"
																			},
																			"nativeSrc": "17016:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17016:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "17006:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17006:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "16972:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "16972:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16965:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16965:6:12"
																},
																"nativeSrc": "16965:26:12",
																"nodeType": "YulFunctionCall",
																"src": "16965:26:12"
															},
															"nativeSrc": "16962:81:12",
															"nodeType": "YulIf",
															"src": "16962:81:12"
														},
														{
															"body": {
																"nativeSrc": "17095:42:12",
																"nodeType": "YulBlock",
																"src": "17095:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "17109:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "17109:16:12"
																			},
																			"nativeSrc": "17109:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17109:18:12"
																		},
																		"nativeSrc": "17109:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17109:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "17059:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "17059:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "17082:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17082:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17090:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17090:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "17079:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "17079:2:12"
																		},
																		"nativeSrc": "17079:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17079:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17056:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17056:2:12"
																},
																"nativeSrc": "17056:38:12",
																"nodeType": "YulFunctionCall",
																"src": "17056:38:12"
															},
															"nativeSrc": "17053:84:12",
															"nodeType": "YulIf",
															"src": "17053:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "16823:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16858:4:12",
														"nodeType": "YulTypedName",
														"src": "16858:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "16867:6:12",
														"nodeType": "YulTypedName",
														"src": "16867:6:12",
														"type": ""
													}
												],
												"src": "16823:320:12"
											},
											{
												"body": {
													"nativeSrc": "17214:53:12",
													"nodeType": "YulBlock",
													"src": "17214:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17231:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17231:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17254:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "17254:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "17236:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "17236:17:12"
																		},
																		"nativeSrc": "17236:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17236:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17224:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17224:6:12"
																},
																"nativeSrc": "17224:37:12",
																"nodeType": "YulFunctionCall",
																"src": "17224:37:12"
															},
															"nativeSrc": "17224:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "17224:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "17149:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17202:5:12",
														"nodeType": "YulTypedName",
														"src": "17202:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17209:3:12",
														"nodeType": "YulTypedName",
														"src": "17209:3:12",
														"type": ""
													}
												],
												"src": "17149:118:12"
											},
											{
												"body": {
													"nativeSrc": "17399:206:12",
													"nodeType": "YulBlock",
													"src": "17399:206:12",
													"statements": [
														{
															"nativeSrc": "17409:26:12",
															"nodeType": "YulAssignment",
															"src": "17409:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17421:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17421:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17432:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17432:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17417:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17417:3:12"
																},
																"nativeSrc": "17417:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17417:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17409:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17409:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17489:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17489:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17502:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17502:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17513:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17513:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17498:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17498:3:12"
																		},
																		"nativeSrc": "17498:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17498:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17445:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17445:43:12"
																},
																"nativeSrc": "17445:71:12",
																"nodeType": "YulFunctionCall",
																"src": "17445:71:12"
															},
															"nativeSrc": "17445:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "17445:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17570:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17570:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17583:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17583:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17594:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17594:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17579:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17579:3:12"
																		},
																		"nativeSrc": "17579:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17579:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17526:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17526:43:12"
																},
																"nativeSrc": "17526:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17526:72:12"
															},
															"nativeSrc": "17526:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17526:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "17273:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17363:9:12",
														"nodeType": "YulTypedName",
														"src": "17363:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17375:6:12",
														"nodeType": "YulTypedName",
														"src": "17375:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17383:6:12",
														"nodeType": "YulTypedName",
														"src": "17383:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17394:4:12",
														"nodeType": "YulTypedName",
														"src": "17394:4:12",
														"type": ""
													}
												],
												"src": "17273:332:12"
											},
											{
												"body": {
													"nativeSrc": "17737:206:12",
													"nodeType": "YulBlock",
													"src": "17737:206:12",
													"statements": [
														{
															"nativeSrc": "17747:26:12",
															"nodeType": "YulAssignment",
															"src": "17747:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17759:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17759:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17770:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17770:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17755:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17755:3:12"
																},
																"nativeSrc": "17755:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17755:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17747:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17747:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17827:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17827:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17840:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17840:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17851:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17851:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17836:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17836:3:12"
																		},
																		"nativeSrc": "17836:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17836:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17783:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17783:43:12"
																},
																"nativeSrc": "17783:71:12",
																"nodeType": "YulFunctionCall",
																"src": "17783:71:12"
															},
															"nativeSrc": "17783:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "17783:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17908:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17908:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17921:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17921:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17932:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17932:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17917:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17917:3:12"
																		},
																		"nativeSrc": "17917:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17917:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17864:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17864:43:12"
																},
																"nativeSrc": "17864:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17864:72:12"
															},
															"nativeSrc": "17864:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17864:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17611:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17701:9:12",
														"nodeType": "YulTypedName",
														"src": "17701:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17713:6:12",
														"nodeType": "YulTypedName",
														"src": "17713:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17721:6:12",
														"nodeType": "YulTypedName",
														"src": "17721:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17732:4:12",
														"nodeType": "YulTypedName",
														"src": "17732:4:12",
														"type": ""
													}
												],
												"src": "17611:332:12"
											},
											{
												"body": {
													"nativeSrc": "17977:152:12",
													"nodeType": "YulBlock",
													"src": "17977:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17994:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17994:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17997:77:12",
																		"nodeType": "YulLiteral",
																		"src": "17997:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17987:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17987:6:12"
																},
																"nativeSrc": "17987:88:12",
																"nodeType": "YulFunctionCall",
																"src": "17987:88:12"
															},
															"nativeSrc": "17987:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "17987:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18091:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18091:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18094:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18094:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18084:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18084:6:12"
																},
																"nativeSrc": "18084:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18084:15:12"
															},
															"nativeSrc": "18084:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18084:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18115:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18115:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18118:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18118:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18108:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18108:6:12"
																},
																"nativeSrc": "18108:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18108:15:12"
															},
															"nativeSrc": "18108:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18108:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17949:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "17949:180:12"
											},
											{
												"body": {
													"nativeSrc": "18233:124:12",
													"nodeType": "YulBlock",
													"src": "18233:124:12",
													"statements": [
														{
															"nativeSrc": "18243:26:12",
															"nodeType": "YulAssignment",
															"src": "18243:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18255:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18255:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18266:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18266:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18251:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18251:3:12"
																},
																"nativeSrc": "18251:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18251:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18243:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18243:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18323:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18323:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18336:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18336:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18347:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18347:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18332:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18332:3:12"
																		},
																		"nativeSrc": "18332:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18332:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18279:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18279:43:12"
																},
																"nativeSrc": "18279:71:12",
																"nodeType": "YulFunctionCall",
																"src": "18279:71:12"
															},
															"nativeSrc": "18279:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "18279:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "18135:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18205:9:12",
														"nodeType": "YulTypedName",
														"src": "18205:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18217:6:12",
														"nodeType": "YulTypedName",
														"src": "18217:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18228:4:12",
														"nodeType": "YulTypedName",
														"src": "18228:4:12",
														"type": ""
													}
												],
												"src": "18135:222:12"
											},
											{
												"body": {
													"nativeSrc": "18545:371:12",
													"nodeType": "YulBlock",
													"src": "18545:371:12",
													"statements": [
														{
															"nativeSrc": "18555:27:12",
															"nodeType": "YulAssignment",
															"src": "18555:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18567:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18567:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18578:3:12",
																		"nodeType": "YulLiteral",
																		"src": "18578:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18563:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18563:3:12"
																},
																"nativeSrc": "18563:19:12",
																"nodeType": "YulFunctionCall",
																"src": "18563:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18555:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18555:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18636:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18636:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18649:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18649:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18660:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18660:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18645:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18645:3:12"
																		},
																		"nativeSrc": "18645:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18645:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18592:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18592:43:12"
																},
																"nativeSrc": "18592:71:12",
																"nodeType": "YulFunctionCall",
																"src": "18592:71:12"
															},
															"nativeSrc": "18592:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "18592:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18717:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18717:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18730:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18730:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18741:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18741:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18726:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18726:3:12"
																		},
																		"nativeSrc": "18726:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18726:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18673:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18673:43:12"
																},
																"nativeSrc": "18673:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18673:72:12"
															},
															"nativeSrc": "18673:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18673:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18799:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18799:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18812:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18812:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18823:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18823:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18808:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18808:3:12"
																		},
																		"nativeSrc": "18808:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18808:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18755:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18755:43:12"
																},
																"nativeSrc": "18755:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18755:72:12"
															},
															"nativeSrc": "18755:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18755:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "18881:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18881:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18894:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18894:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18905:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18905:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18890:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18890:3:12"
																		},
																		"nativeSrc": "18890:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18890:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18837:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18837:43:12"
																},
																"nativeSrc": "18837:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18837:72:12"
															},
															"nativeSrc": "18837:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18837:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18363:553:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18493:9:12",
														"nodeType": "YulTypedName",
														"src": "18493:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18505:6:12",
														"nodeType": "YulTypedName",
														"src": "18505:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18513:6:12",
														"nodeType": "YulTypedName",
														"src": "18513:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18521:6:12",
														"nodeType": "YulTypedName",
														"src": "18521:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18529:6:12",
														"nodeType": "YulTypedName",
														"src": "18529:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18540:4:12",
														"nodeType": "YulTypedName",
														"src": "18540:4:12",
														"type": ""
													}
												],
												"src": "18363:553:12"
											},
											{
												"body": {
													"nativeSrc": "18950:152:12",
													"nodeType": "YulBlock",
													"src": "18950:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18967:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18967:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18970:77:12",
																		"nodeType": "YulLiteral",
																		"src": "18970:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18960:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18960:6:12"
																},
																"nativeSrc": "18960:88:12",
																"nodeType": "YulFunctionCall",
																"src": "18960:88:12"
															},
															"nativeSrc": "18960:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "18960:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19064:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19064:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19067:4:12",
																		"nodeType": "YulLiteral",
																		"src": "19067:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19057:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19057:6:12"
																},
																"nativeSrc": "19057:15:12",
																"nodeType": "YulFunctionCall",
																"src": "19057:15:12"
															},
															"nativeSrc": "19057:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "19057:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19088:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19088:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19091:4:12",
																		"nodeType": "YulLiteral",
																		"src": "19091:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19081:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19081:6:12"
																},
																"nativeSrc": "19081:15:12",
																"nodeType": "YulFunctionCall",
																"src": "19081:15:12"
															},
															"nativeSrc": "19081:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "19081:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "18922:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "18922:180:12"
											},
											{
												"body": {
													"nativeSrc": "19152:147:12",
													"nodeType": "YulBlock",
													"src": "19152:147:12",
													"statements": [
														{
															"nativeSrc": "19162:25:12",
															"nodeType": "YulAssignment",
															"src": "19162:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19185:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19185:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19167:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19167:17:12"
																},
																"nativeSrc": "19167:20:12",
																"nodeType": "YulFunctionCall",
																"src": "19167:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19162:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19162:1:12"
																}
															]
														},
														{
															"nativeSrc": "19196:25:12",
															"nodeType": "YulAssignment",
															"src": "19196:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19219:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19219:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19201:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19201:17:12"
																},
																"nativeSrc": "19201:20:12",
																"nodeType": "YulFunctionCall",
																"src": "19201:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19196:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19196:1:12"
																}
															]
														},
														{
															"nativeSrc": "19230:16:12",
															"nodeType": "YulAssignment",
															"src": "19230:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19241:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19241:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19244:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19244:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19237:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19237:3:12"
																},
																"nativeSrc": "19237:9:12",
																"nodeType": "YulFunctionCall",
																"src": "19237:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "19230:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19230:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19270:22:12",
																"nodeType": "YulBlock",
																"src": "19270:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19272:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "19272:16:12"
																			},
																			"nativeSrc": "19272:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "19272:18:12"
																		},
																		"nativeSrc": "19272:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "19272:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19262:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19262:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "19265:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19265:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19259:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "19259:2:12"
																},
																"nativeSrc": "19259:10:12",
																"nodeType": "YulFunctionCall",
																"src": "19259:10:12"
															},
															"nativeSrc": "19256:36:12",
															"nodeType": "YulIf",
															"src": "19256:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "19108:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19139:1:12",
														"nodeType": "YulTypedName",
														"src": "19139:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19142:1:12",
														"nodeType": "YulTypedName",
														"src": "19142:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "19148:3:12",
														"nodeType": "YulTypedName",
														"src": "19148:3:12",
														"type": ""
													}
												],
												"src": "19108:191:12"
											},
											{
												"body": {
													"nativeSrc": "19531:408:12",
													"nodeType": "YulBlock",
													"src": "19531:408:12",
													"statements": [
														{
															"nativeSrc": "19541:26:12",
															"nodeType": "YulAssignment",
															"src": "19541:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19553:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19553:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19564:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19564:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19549:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19549:3:12"
																},
																"nativeSrc": "19549:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19549:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19541:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19541:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19588:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19588:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19599:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19599:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19584:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19584:3:12"
																		},
																		"nativeSrc": "19584:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19584:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19607:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19607:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19613:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19613:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19603:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19603:3:12"
																		},
																		"nativeSrc": "19603:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19603:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19577:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19577:6:12"
																},
																"nativeSrc": "19577:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19577:47:12"
															},
															"nativeSrc": "19577:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19577:47:12"
														},
														{
															"nativeSrc": "19633:116:12",
															"nodeType": "YulAssignment",
															"src": "19633:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19735:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19735:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19744:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19744:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "19641:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "19641:93:12"
																},
																"nativeSrc": "19641:108:12",
																"nodeType": "YulFunctionCall",
																"src": "19641:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19633:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19633:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19770:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19770:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19781:2:12",
																				"nodeType": "YulLiteral",
																				"src": "19781:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19766:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19766:3:12"
																		},
																		"nativeSrc": "19766:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19766:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19790:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19790:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19796:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19796:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19786:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19786:3:12"
																		},
																		"nativeSrc": "19786:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19786:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19759:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19759:6:12"
																},
																"nativeSrc": "19759:48:12",
																"nodeType": "YulFunctionCall",
																"src": "19759:48:12"
															},
															"nativeSrc": "19759:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "19759:48:12"
														},
														{
															"nativeSrc": "19816:116:12",
															"nodeType": "YulAssignment",
															"src": "19816:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19918:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19918:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19927:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19927:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "19824:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "19824:93:12"
																},
																"nativeSrc": "19824:108:12",
																"nodeType": "YulFunctionCall",
																"src": "19824:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19816:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19816:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "19305:634:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19495:9:12",
														"nodeType": "YulTypedName",
														"src": "19495:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19507:6:12",
														"nodeType": "YulTypedName",
														"src": "19507:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19515:6:12",
														"nodeType": "YulTypedName",
														"src": "19515:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19526:4:12",
														"nodeType": "YulTypedName",
														"src": "19526:4:12",
														"type": ""
													}
												],
												"src": "19305:634:12"
											},
											{
												"body": {
													"nativeSrc": "20003:40:12",
													"nodeType": "YulBlock",
													"src": "20003:40:12",
													"statements": [
														{
															"nativeSrc": "20014:22:12",
															"nodeType": "YulAssignment",
															"src": "20014:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20030:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "20030:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20024:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "20024:5:12"
																},
																"nativeSrc": "20024:12:12",
																"nodeType": "YulFunctionCall",
																"src": "20024:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20014:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20014:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "19945:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19986:5:12",
														"nodeType": "YulTypedName",
														"src": "19986:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "19996:6:12",
														"nodeType": "YulTypedName",
														"src": "19996:6:12",
														"type": ""
													}
												],
												"src": "19945:98:12"
											},
											{
												"body": {
													"nativeSrc": "20144:73:12",
													"nodeType": "YulBlock",
													"src": "20144:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20161:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20161:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20166:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20166:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20154:6:12"
																},
																"nativeSrc": "20154:19:12",
																"nodeType": "YulFunctionCall",
																"src": "20154:19:12"
															},
															"nativeSrc": "20154:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "20154:19:12"
														},
														{
															"nativeSrc": "20182:29:12",
															"nodeType": "YulAssignment",
															"src": "20182:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20201:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20201:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20206:4:12",
																		"nodeType": "YulLiteral",
																		"src": "20206:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20197:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20197:3:12"
																},
																"nativeSrc": "20197:14:12",
																"nodeType": "YulFunctionCall",
																"src": "20197:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20182:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "20182:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20049:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20116:3:12",
														"nodeType": "YulTypedName",
														"src": "20116:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20121:6:12",
														"nodeType": "YulTypedName",
														"src": "20121:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20132:11:12",
														"nodeType": "YulTypedName",
														"src": "20132:11:12",
														"type": ""
													}
												],
												"src": "20049:168:12"
											},
											{
												"body": {
													"nativeSrc": "20313:283:12",
													"nodeType": "YulBlock",
													"src": "20313:283:12",
													"statements": [
														{
															"nativeSrc": "20323:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "20323:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20369:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "20369:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "20337:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "20337:31:12"
																},
																"nativeSrc": "20337:38:12",
																"nodeType": "YulFunctionCall",
																"src": "20337:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20327:6:12",
																	"nodeType": "YulTypedName",
																	"src": "20327:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20384:77:12",
															"nodeType": "YulAssignment",
															"src": "20384:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20449:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20449:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20454:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20454:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20391:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "20391:57:12"
																},
																"nativeSrc": "20391:70:12",
																"nodeType": "YulFunctionCall",
																"src": "20391:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20384:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20384:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20509:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "20509:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20516:4:12",
																				"nodeType": "YulLiteral",
																				"src": "20516:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20505:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20505:3:12"
																		},
																		"nativeSrc": "20505:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20505:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20523:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20523:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20528:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20528:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "20470:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "20470:34:12"
																},
																"nativeSrc": "20470:65:12",
																"nodeType": "YulFunctionCall",
																"src": "20470:65:12"
															},
															"nativeSrc": "20470:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "20470:65:12"
														},
														{
															"nativeSrc": "20544:46:12",
															"nodeType": "YulAssignment",
															"src": "20544:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20555:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20555:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "20582:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20582:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "20560:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "20560:21:12"
																		},
																		"nativeSrc": "20560:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20560:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20551:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20551:3:12"
																},
																"nativeSrc": "20551:39:12",
																"nodeType": "YulFunctionCall",
																"src": "20551:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20544:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20544:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20223:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20294:5:12",
														"nodeType": "YulTypedName",
														"src": "20294:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20301:3:12",
														"nodeType": "YulTypedName",
														"src": "20301:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20309:3:12",
														"nodeType": "YulTypedName",
														"src": "20309:3:12",
														"type": ""
													}
												],
												"src": "20223:373:12"
											},
											{
												"body": {
													"nativeSrc": "20830:523:12",
													"nodeType": "YulBlock",
													"src": "20830:523:12",
													"statements": [
														{
															"nativeSrc": "20840:27:12",
															"nodeType": "YulAssignment",
															"src": "20840:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20852:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20852:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20863:3:12",
																		"nodeType": "YulLiteral",
																		"src": "20863:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20848:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20848:3:12"
																},
																"nativeSrc": "20848:19:12",
																"nodeType": "YulFunctionCall",
																"src": "20848:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20840:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20840:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20921:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20921:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20934:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20934:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20945:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20945:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20930:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20930:3:12"
																		},
																		"nativeSrc": "20930:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20930:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20877:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20877:43:12"
																},
																"nativeSrc": "20877:71:12",
																"nodeType": "YulFunctionCall",
																"src": "20877:71:12"
															},
															"nativeSrc": "20877:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "20877:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21002:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21002:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21015:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21015:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21026:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21026:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21011:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21011:3:12"
																		},
																		"nativeSrc": "21011:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21011:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20958:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20958:43:12"
																},
																"nativeSrc": "20958:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20958:72:12"
															},
															"nativeSrc": "20958:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20958:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21084:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21084:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21097:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21097:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21108:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21108:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21093:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21093:3:12"
																		},
																		"nativeSrc": "21093:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21093:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21040:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21040:43:12"
																},
																"nativeSrc": "21040:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21040:72:12"
															},
															"nativeSrc": "21040:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21040:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21166:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21166:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21179:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21179:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21190:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21190:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21175:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21175:3:12"
																		},
																		"nativeSrc": "21175:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21175:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21122:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21122:43:12"
																},
																"nativeSrc": "21122:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21122:72:12"
															},
															"nativeSrc": "21122:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21122:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21215:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21215:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21226:3:12",
																				"nodeType": "YulLiteral",
																				"src": "21226:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21211:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21211:3:12"
																		},
																		"nativeSrc": "21211:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21211:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21236:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21236:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21242:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21242:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21232:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21232:3:12"
																		},
																		"nativeSrc": "21232:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21232:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21204:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21204:6:12"
																},
																"nativeSrc": "21204:49:12",
																"nodeType": "YulFunctionCall",
																"src": "21204:49:12"
															},
															"nativeSrc": "21204:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "21204:49:12"
														},
														{
															"nativeSrc": "21262:84:12",
															"nodeType": "YulAssignment",
															"src": "21262:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "21332:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21332:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21341:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21341:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21270:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "21270:61:12"
																},
																"nativeSrc": "21270:76:12",
																"nodeType": "YulFunctionCall",
																"src": "21270:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21262:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21262:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "20602:751:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20770:9:12",
														"nodeType": "YulTypedName",
														"src": "20770:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "20782:6:12",
														"nodeType": "YulTypedName",
														"src": "20782:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20790:6:12",
														"nodeType": "YulTypedName",
														"src": "20790:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20798:6:12",
														"nodeType": "YulTypedName",
														"src": "20798:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20806:6:12",
														"nodeType": "YulTypedName",
														"src": "20806:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20814:6:12",
														"nodeType": "YulTypedName",
														"src": "20814:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20825:4:12",
														"nodeType": "YulTypedName",
														"src": "20825:4:12",
														"type": ""
													}
												],
												"src": "20602:751:12"
											},
											{
												"body": {
													"nativeSrc": "21421:79:12",
													"nodeType": "YulBlock",
													"src": "21421:79:12",
													"statements": [
														{
															"nativeSrc": "21431:22:12",
															"nodeType": "YulAssignment",
															"src": "21431:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21446:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21446:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21440:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "21440:5:12"
																},
																"nativeSrc": "21440:13:12",
																"nodeType": "YulFunctionCall",
																"src": "21440:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21431:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "21431:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21488:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "21488:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "21462:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "21462:25:12"
																},
																"nativeSrc": "21462:32:12",
																"nodeType": "YulFunctionCall",
																"src": "21462:32:12"
															},
															"nativeSrc": "21462:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "21462:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "21359:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21399:6:12",
														"nodeType": "YulTypedName",
														"src": "21399:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21407:3:12",
														"nodeType": "YulTypedName",
														"src": "21407:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21415:5:12",
														"nodeType": "YulTypedName",
														"src": "21415:5:12",
														"type": ""
													}
												],
												"src": "21359:141:12"
											},
											{
												"body": {
													"nativeSrc": "21582:273:12",
													"nodeType": "YulBlock",
													"src": "21582:273:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "21628:83:12",
																"nodeType": "YulBlock",
																"src": "21628:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21630:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "21630:77:12"
																			},
																			"nativeSrc": "21630:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "21630:79:12"
																		},
																		"nativeSrc": "21630:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "21630:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21603:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "21603:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21612:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21612:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21599:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21599:3:12"
																		},
																		"nativeSrc": "21599:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21599:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21624:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21624:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21595:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21595:3:12"
																},
																"nativeSrc": "21595:32:12",
																"nodeType": "YulFunctionCall",
																"src": "21595:32:12"
															},
															"nativeSrc": "21592:119:12",
															"nodeType": "YulIf",
															"src": "21592:119:12"
														},
														{
															"nativeSrc": "21721:127:12",
															"nodeType": "YulBlock",
															"src": "21721:127:12",
															"statements": [
																{
																	"nativeSrc": "21736:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21736:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21750:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21750:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21740:6:12",
																			"nodeType": "YulTypedName",
																			"src": "21740:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21765:73:12",
																	"nodeType": "YulAssignment",
																	"src": "21765:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21810:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "21810:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21821:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "21821:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21806:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "21806:3:12"
																				},
																				"nativeSrc": "21806:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "21806:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21830:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "21830:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "21775:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "21775:30:12"
																		},
																		"nativeSrc": "21775:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21775:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21765:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "21765:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "21506:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21552:9:12",
														"nodeType": "YulTypedName",
														"src": "21552:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21563:7:12",
														"nodeType": "YulTypedName",
														"src": "21563:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21575:6:12",
														"nodeType": "YulTypedName",
														"src": "21575:6:12",
														"type": ""
													}
												],
												"src": "21506:349:12"
											},
											{
												"body": {
													"nativeSrc": "22189:725:12",
													"nodeType": "YulBlock",
													"src": "22189:725:12",
													"statements": [
														{
															"nativeSrc": "22199:27:12",
															"nodeType": "YulAssignment",
															"src": "22199:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22211:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22211:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22222:3:12",
																		"nodeType": "YulLiteral",
																		"src": "22222:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22207:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22207:3:12"
																},
																"nativeSrc": "22207:19:12",
																"nodeType": "YulFunctionCall",
																"src": "22207:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22199:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22199:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22280:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22280:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22293:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22293:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22304:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22304:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22289:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22289:3:12"
																		},
																		"nativeSrc": "22289:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22289:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22236:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "22236:43:12"
																},
																"nativeSrc": "22236:71:12",
																"nodeType": "YulFunctionCall",
																"src": "22236:71:12"
															},
															"nativeSrc": "22236:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "22236:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22361:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22361:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22374:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22374:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22385:2:12",
																				"nodeType": "YulLiteral",
																				"src": "22385:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22370:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22370:3:12"
																		},
																		"nativeSrc": "22370:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22370:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22317:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "22317:43:12"
																},
																"nativeSrc": "22317:72:12",
																"nodeType": "YulFunctionCall",
																"src": "22317:72:12"
															},
															"nativeSrc": "22317:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "22317:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22410:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22410:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22421:2:12",
																				"nodeType": "YulLiteral",
																				"src": "22421:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22406:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22406:3:12"
																		},
																		"nativeSrc": "22406:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22406:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22430:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22430:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22436:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22436:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22426:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22426:3:12"
																		},
																		"nativeSrc": "22426:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22426:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22399:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22399:6:12"
																},
																"nativeSrc": "22399:48:12",
																"nodeType": "YulFunctionCall",
																"src": "22399:48:12"
															},
															"nativeSrc": "22399:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "22399:48:12"
														},
														{
															"nativeSrc": "22456:116:12",
															"nodeType": "YulAssignment",
															"src": "22456:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22558:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22558:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22567:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22567:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "22464:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "22464:93:12"
																},
																"nativeSrc": "22464:108:12",
																"nodeType": "YulFunctionCall",
																"src": "22464:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22456:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22456:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22593:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22593:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22604:2:12",
																				"nodeType": "YulLiteral",
																				"src": "22604:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22589:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22589:3:12"
																		},
																		"nativeSrc": "22589:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22589:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22613:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22613:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22619:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22619:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22609:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22609:3:12"
																		},
																		"nativeSrc": "22609:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22609:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22582:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22582:6:12"
																},
																"nativeSrc": "22582:48:12",
																"nodeType": "YulFunctionCall",
																"src": "22582:48:12"
															},
															"nativeSrc": "22582:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "22582:48:12"
														},
														{
															"nativeSrc": "22639:116:12",
															"nodeType": "YulAssignment",
															"src": "22639:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "22741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22741:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22750:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22750:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "22647:93:12",
																	"nodeType": "YulIdentifier",
																	"src": "22647:93:12"
																},
																"nativeSrc": "22647:108:12",
																"nodeType": "YulFunctionCall",
																"src": "22647:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22639:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22639:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22776:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22776:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22787:3:12",
																				"nodeType": "YulLiteral",
																				"src": "22787:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22772:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22772:3:12"
																		},
																		"nativeSrc": "22772:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22772:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22797:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22797:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22803:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22803:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22793:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22793:3:12"
																		},
																		"nativeSrc": "22793:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22793:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22765:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22765:6:12"
																},
																"nativeSrc": "22765:49:12",
																"nodeType": "YulFunctionCall",
																"src": "22765:49:12"
															},
															"nativeSrc": "22765:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "22765:49:12"
														},
														{
															"nativeSrc": "22823:84:12",
															"nodeType": "YulAssignment",
															"src": "22823:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "22893:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22893:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22902:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22902:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22831:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "22831:61:12"
																},
																"nativeSrc": "22831:76:12",
																"nodeType": "YulFunctionCall",
																"src": "22831:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22823:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22823:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "21861:1053:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22129:9:12",
														"nodeType": "YulTypedName",
														"src": "22129:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "22141:6:12",
														"nodeType": "YulTypedName",
														"src": "22141:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "22149:6:12",
														"nodeType": "YulTypedName",
														"src": "22149:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22157:6:12",
														"nodeType": "YulTypedName",
														"src": "22157:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22165:6:12",
														"nodeType": "YulTypedName",
														"src": "22165:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22173:6:12",
														"nodeType": "YulTypedName",
														"src": "22173:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22184:4:12",
														"nodeType": "YulTypedName",
														"src": "22184:4:12",
														"type": ""
													}
												],
												"src": "21861:1053:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610085575f3560e01c80634e1273f4116100595780634e1273f414610135578063a22cb46514610165578063e985e9c514610181578063f242432a146101b157610085565b8062fdd58e1461008957806301ffc9a7146100b95780630e89341c146100e95780632eb2c2d614610119575b5f80fd5b6100a3600480360381019061009e91906112ef565b6101cd565b6040516100b0919061133c565b60405180910390f35b6100d360048036038101906100ce91906113aa565b610222565b6040516100e091906113ef565b60405180910390f35b61010360048036038101906100fe9190611408565b610303565b60405161011091906114a3565b60405180910390f35b610133600480360381019061012e91906116b3565b610395565b005b61014f600480360381019061014a919061183e565b61043c565b60405161015c919061196b565b60405180910390f35b61017f600480360381019061017a91906119b5565b610543565b005b61019b600480360381019061019691906119f3565b610559565b6040516101a891906113ef565b60405180910390f35b6101cb60048036038101906101c69190611a31565b6105e7565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102ec57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806102fc57506102fb8261068e565b5b9050919050565b60606002805461031290611af1565b80601f016020809104026020016040519081016040528092919081815260200182805461033e90611af1565b80156103895780601f1061036057610100808354040283529160200191610389565b820191905f5260205f20905b81548152906001019060200180831161036c57829003601f168201915b50505050509050919050565b5f61039e6106f7565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156103e357506103e18682610559565b155b156104275780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161041e929190611b30565b60405180910390fd5b61043486868686866106fe565b505050505050565b6060815183511461048857815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161047f929190611b57565b60405180910390fd5b5f835167ffffffffffffffff8111156104a4576104a36114c7565b5b6040519080825280602002602001820160405280156104d25781602001602082028036833780820191505090505b5090505f5b84518110156105385761050e6104f682876107f290919063ffffffff16565b610509838761080590919063ffffffff16565b6101cd565b82828151811061052157610520611b7e565b5b6020026020010181815250508060010190506104d7565b508091505092915050565b61055561054e6106f7565b8383610818565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6105f06106f7565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561063557506106338682610559565b155b156106795780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610670929190611b30565b60405180910390fd5b6106868686868686610981565b505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361076e575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016107659190611bab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036107de575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016107d59190611bab565b60405180910390fd5b6107eb8585858585610a87565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610888575f6040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161087f9190611bab565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161097491906113ef565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109f1575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109e89190611bab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a61575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610a589190611bab565b60405180910390fd5b5f80610a6d8585610b33565b91509150610a7e8787848487610a87565b50505050505050565b610a9385858585610b63565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610b2c575f610acf6106f7565b90506001845103610b1b575f610aee5f8661080590919063ffffffff16565b90505f610b045f8661080590919063ffffffff16565b9050610b14838989858589610ef3565b5050610b2a565b610b298187878787876110a2565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610bad57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610ba4929190611b57565b60405180910390fd5b5f610bb66106f7565b90505f5b8351811015610db2575f610bd7828661080590919063ffffffff16565b90505f610bed838661080590919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610d10575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610cbc57888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610cb39493929190611bc4565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610da557805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d9d9190611c34565b925050819055505b5050806001019050610bba565b506001835103610e6d575f610dd05f8561080590919063ffffffff16565b90505f610de65f8561080590919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610e5e929190611b57565b60405180910390a45050610eec565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610ee3929190611c67565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561109a578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401610f53959493929190611cee565b6020604051808303815f875af1925050508015610f8e57506040513d601f19601f82011682018060405250810190610f8b9190611d5a565b60015b61100f573d805f8114610fbc576040519150601f19603f3d011682016040523d82523d5f602084013e610fc1565b606091505b505f81510361100757846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610ffe9190611bab565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461109857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161108f9190611bab565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611249578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611102959493929190611d85565b6020604051808303815f875af192505050801561113d57506040513d601f19601f8201168201806040525081019061113a9190611d5a565b60015b6111be573d805f811461116b576040519150601f19603f3d011682016040523d82523d5f602084013e611170565b606091505b505f8151036111b657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111ad9190611bab565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461124757846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161123e9190611bab565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61128b82611262565b9050919050565b61129b81611281565b81146112a5575f80fd5b50565b5f813590506112b681611292565b92915050565b5f819050919050565b6112ce816112bc565b81146112d8575f80fd5b50565b5f813590506112e9816112c5565b92915050565b5f80604083850312156113055761130461125a565b5b5f611312858286016112a8565b9250506020611323858286016112db565b9150509250929050565b611336816112bc565b82525050565b5f60208201905061134f5f83018461132d565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61138981611355565b8114611393575f80fd5b50565b5f813590506113a481611380565b92915050565b5f602082840312156113bf576113be61125a565b5b5f6113cc84828501611396565b91505092915050565b5f8115159050919050565b6113e9816113d5565b82525050565b5f6020820190506114025f8301846113e0565b92915050565b5f6020828403121561141d5761141c61125a565b5b5f61142a848285016112db565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61147582611433565b61147f818561143d565b935061148f81856020860161144d565b6114988161145b565b840191505092915050565b5f6020820190508181035f8301526114bb818461146b565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6114fd8261145b565b810181811067ffffffffffffffff8211171561151c5761151b6114c7565b5b80604052505050565b5f61152e611251565b905061153a82826114f4565b919050565b5f67ffffffffffffffff821115611559576115586114c7565b5b602082029050602081019050919050565b5f80fd5b5f61158061157b8461153f565b611525565b905080838252602082019050602084028301858111156115a3576115a261156a565b5b835b818110156115cc57806115b888826112db565b8452602084019350506020810190506115a5565b5050509392505050565b5f82601f8301126115ea576115e96114c3565b5b81356115fa84826020860161156e565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115611621576116206114c7565b5b61162a8261145b565b9050602081019050919050565b828183375f83830152505050565b5f61165761165284611607565b611525565b90508281526020810184848401111561167357611672611603565b5b61167e848285611637565b509392505050565b5f82601f83011261169a576116996114c3565b5b81356116aa848260208601611645565b91505092915050565b5f805f805f60a086880312156116cc576116cb61125a565b5b5f6116d9888289016112a8565b95505060206116ea888289016112a8565b945050604086013567ffffffffffffffff81111561170b5761170a61125e565b5b611717888289016115d6565b935050606086013567ffffffffffffffff8111156117385761173761125e565b5b611744888289016115d6565b925050608086013567ffffffffffffffff8111156117655761176461125e565b5b61177188828901611686565b9150509295509295909350565b5f67ffffffffffffffff821115611798576117976114c7565b5b602082029050602081019050919050565b5f6117bb6117b68461177e565b611525565b905080838252602082019050602084028301858111156117de576117dd61156a565b5b835b8181101561180757806117f388826112a8565b8452602084019350506020810190506117e0565b5050509392505050565b5f82601f830112611825576118246114c3565b5b81356118358482602086016117a9565b91505092915050565b5f80604083850312156118545761185361125a565b5b5f83013567ffffffffffffffff8111156118715761187061125e565b5b61187d85828601611811565b925050602083013567ffffffffffffffff81111561189e5761189d61125e565b5b6118aa858286016115d6565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6118e6816112bc565b82525050565b5f6118f783836118dd565b60208301905092915050565b5f602082019050919050565b5f611919826118b4565b61192381856118be565b935061192e836118ce565b805f5b8381101561195e57815161194588826118ec565b975061195083611903565b925050600181019050611931565b5085935050505092915050565b5f6020820190508181035f830152611983818461190f565b905092915050565b611994816113d5565b811461199e575f80fd5b50565b5f813590506119af8161198b565b92915050565b5f80604083850312156119cb576119ca61125a565b5b5f6119d8858286016112a8565b92505060206119e9858286016119a1565b9150509250929050565b5f8060408385031215611a0957611a0861125a565b5b5f611a16858286016112a8565b9250506020611a27858286016112a8565b9150509250929050565b5f805f805f60a08688031215611a4a57611a4961125a565b5b5f611a57888289016112a8565b9550506020611a68888289016112a8565b9450506040611a79888289016112db565b9350506060611a8a888289016112db565b925050608086013567ffffffffffffffff811115611aab57611aaa61125e565b5b611ab788828901611686565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611b0857607f821691505b602082108103611b1b57611b1a611ac4565b5b50919050565b611b2a81611281565b82525050565b5f604082019050611b435f830185611b21565b611b506020830184611b21565b9392505050565b5f604082019050611b6a5f83018561132d565b611b77602083018461132d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082019050611bbe5f830184611b21565b92915050565b5f608082019050611bd75f830187611b21565b611be4602083018661132d565b611bf1604083018561132d565b611bfe606083018461132d565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c3e826112bc565b9150611c49836112bc565b9250828201905080821115611c6157611c60611c07565b5b92915050565b5f6040820190508181035f830152611c7f818561190f565b90508181036020830152611c93818461190f565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611cc082611c9c565b611cca8185611ca6565b9350611cda81856020860161144d565b611ce38161145b565b840191505092915050565b5f60a082019050611d015f830188611b21565b611d0e6020830187611b21565b611d1b604083018661132d565b611d28606083018561132d565b8181036080830152611d3a8184611cb6565b90509695505050505050565b5f81519050611d5481611380565b92915050565b5f60208284031215611d6f57611d6e61125a565b5b5f611d7c84828501611d46565b91505092915050565b5f60a082019050611d985f830188611b21565b611da56020830187611b21565b8181036040830152611db7818661190f565b90508181036060830152611dcb818561190f565b90508181036080830152611ddf8184611cb6565b9050969550505050505056fea2646970667358221220368dcdf2ee5b5a84ff73fec02e4848000b79263954324fd7c51a47e738f3aca164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B1 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x119 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x12EF JUMP JUMPDEST PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x19B5 JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2EC JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x2FC JUMPI POP PUSH2 0x2FB DUP3 PUSH2 0x68E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x312 SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33E SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x360 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x389 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x39E PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3E3 JUMPI POP PUSH2 0x3E1 DUP7 DUP3 PUSH2 0x559 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x427 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41E SWAP3 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x434 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x6FE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x488 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP3 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A4 JUMPI PUSH2 0x4A3 PUSH2 0x14C7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4D2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x538 JUMPI PUSH2 0x50E PUSH2 0x4F6 DUP3 DUP8 PUSH2 0x7F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x509 DUP4 DUP8 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CD JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x521 JUMPI PUSH2 0x520 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x4D7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x555 PUSH2 0x54E PUSH2 0x6F7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x818 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5F0 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x635 JUMPI POP PUSH2 0x633 DUP7 DUP3 PUSH2 0x559 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x679 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP3 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x686 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x981 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x76E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7EB DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA87 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x888 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA61 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xA6D DUP6 DUP6 PUSH2 0xB33 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xA7E DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xA87 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA93 DUP6 DUP6 DUP6 DUP6 PUSH2 0xB63 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB2C JUMPI PUSH0 PUSH2 0xACF PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xB1B JUMPI PUSH0 PUSH2 0xAEE PUSH0 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB04 PUSH0 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB14 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEF3 JUMP JUMPDEST POP POP PUSH2 0xB2A JUMP JUMPDEST PUSH2 0xB29 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x10A2 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xBAD JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBB6 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xDB2 JUMPI PUSH0 PUSH2 0xBD7 DUP3 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBED DUP4 DUP7 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD10 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCBC JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xBBA JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0xE6D JUMPI PUSH0 PUSH2 0xDD0 PUSH0 DUP6 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDE6 PUSH0 DUP6 PUSH2 0x805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE5E SWAP3 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0xEEC JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xEE3 SWAP3 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x109A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF8E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF8B SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x100F JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFC1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1007 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1098 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108F SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1249 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1102 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x113D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x113A SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11BE JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1170 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x11B6 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AD SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1247 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123E SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x128B DUP3 PUSH2 0x1262 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129B DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B6 DUP2 PUSH2 0x1292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12CE DUP2 PUSH2 0x12BC JUMP JUMPDEST DUP2 EQ PUSH2 0x12D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E9 DUP2 PUSH2 0x12C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1305 JUMPI PUSH2 0x1304 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1312 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1323 DUP6 DUP3 DUP7 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1336 DUP2 PUSH2 0x12BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x134F PUSH0 DUP4 ADD DUP5 PUSH2 0x132D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1389 DUP2 PUSH2 0x1355 JUMP JUMPDEST DUP2 EQ PUSH2 0x1393 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13A4 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13BF JUMPI PUSH2 0x13BE PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13CC DUP5 DUP3 DUP6 ADD PUSH2 0x1396 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E9 DUP2 PUSH2 0x13D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1402 PUSH0 DUP4 ADD DUP5 PUSH2 0x13E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141D JUMPI PUSH2 0x141C PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x142A DUP5 DUP3 DUP6 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1475 DUP3 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x147F DUP2 DUP6 PUSH2 0x143D JUMP JUMPDEST SWAP4 POP PUSH2 0x148F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144D JUMP JUMPDEST PUSH2 0x1498 DUP2 PUSH2 0x145B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14BB DUP2 DUP5 PUSH2 0x146B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x14FD DUP3 PUSH2 0x145B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x151C JUMPI PUSH2 0x151B PUSH2 0x14C7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x152E PUSH2 0x1251 JUMP JUMPDEST SWAP1 POP PUSH2 0x153A DUP3 DUP3 PUSH2 0x14F4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1559 JUMPI PUSH2 0x1558 PUSH2 0x14C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1580 PUSH2 0x157B DUP5 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x15A3 JUMPI PUSH2 0x15A2 PUSH2 0x156A JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15CC JUMPI DUP1 PUSH2 0x15B8 DUP9 DUP3 PUSH2 0x12DB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15A5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15EA JUMPI PUSH2 0x15E9 PUSH2 0x14C3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15FA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x156E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1621 JUMPI PUSH2 0x1620 PUSH2 0x14C7 JUMP JUMPDEST JUMPDEST PUSH2 0x162A DUP3 PUSH2 0x145B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1657 PUSH2 0x1652 DUP5 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH2 0x167E DUP5 DUP3 DUP6 PUSH2 0x1637 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x169A JUMPI PUSH2 0x1699 PUSH2 0x14C3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16AA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1645 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16CC JUMPI PUSH2 0x16CB PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D9 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x16EA DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1717 DUP9 DUP3 DUP10 ADD PUSH2 0x15D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1738 JUMPI PUSH2 0x1737 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1744 DUP9 DUP3 DUP10 ADD PUSH2 0x15D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1765 JUMPI PUSH2 0x1764 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1771 DUP9 DUP3 DUP10 ADD PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x14C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17BB PUSH2 0x17B6 DUP5 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x17DE JUMPI PUSH2 0x17DD PUSH2 0x156A JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1807 JUMPI DUP1 PUSH2 0x17F3 DUP9 DUP3 PUSH2 0x12A8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17E0 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1825 JUMPI PUSH2 0x1824 PUSH2 0x14C3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1835 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1853 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1871 JUMPI PUSH2 0x1870 PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x187D DUP6 DUP3 DUP7 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x189E JUMPI PUSH2 0x189D PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x18AA DUP6 DUP3 DUP7 ADD PUSH2 0x15D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E6 DUP2 PUSH2 0x12BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18F7 DUP4 DUP4 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1919 DUP3 PUSH2 0x18B4 JUMP JUMPDEST PUSH2 0x1923 DUP2 DUP6 PUSH2 0x18BE JUMP JUMPDEST SWAP4 POP PUSH2 0x192E DUP4 PUSH2 0x18CE JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x195E JUMPI DUP2 MLOAD PUSH2 0x1945 DUP9 DUP3 PUSH2 0x18EC JUMP JUMPDEST SWAP8 POP PUSH2 0x1950 DUP4 PUSH2 0x1903 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1931 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1983 DUP2 DUP5 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1994 DUP2 PUSH2 0x13D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x199E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19AF DUP2 PUSH2 0x198B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19CB JUMPI PUSH2 0x19CA PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D8 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E9 DUP6 DUP3 DUP7 ADD PUSH2 0x19A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A16 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A4A JUMPI PUSH2 0x1A49 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A57 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1A68 DUP9 DUP3 DUP10 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1A79 DUP9 DUP3 DUP10 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1A8A DUP9 DUP3 DUP10 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AAB JUMPI PUSH2 0x1AAA PUSH2 0x125E JUMP JUMPDEST JUMPDEST PUSH2 0x1AB7 DUP9 DUP3 DUP10 ADD PUSH2 0x1686 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B08 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B1B JUMPI PUSH2 0x1B1A PUSH2 0x1AC4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B2A DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B43 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B21 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B6A PUSH0 DUP4 ADD DUP6 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1B77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x132D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBE PUSH0 DUP4 ADD DUP5 PUSH2 0x1B21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1BD7 PUSH0 DUP4 ADD DUP8 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1BE4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1BF1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1BFE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x132D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C3E DUP3 PUSH2 0x12BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C49 DUP4 PUSH2 0x12BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C61 JUMPI PUSH2 0x1C60 PUSH2 0x1C07 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C7F DUP2 DUP6 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C93 DUP2 DUP5 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC0 DUP3 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x1CCA DUP2 DUP6 PUSH2 0x1CA6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CDA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144D JUMP JUMPDEST PUSH2 0x1CE3 DUP2 PUSH2 0x145B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D01 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1D0E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1D1B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x1D28 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x132D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1D3A DUP2 DUP5 PUSH2 0x1CB6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D54 DUP2 PUSH2 0x1380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7C DUP5 DUP3 DUP6 ADD PUSH2 0x1D46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D98 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1DA5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B21 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1DB7 DUP2 DUP7 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1DCB DUP2 DUP6 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1DDF DUP2 DUP5 PUSH2 0x1CB6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE DUP14 0xCD CALLCODE 0xEE JUMPDEST GAS DUP5 SELFDESTRUCT PUSH20 0xFEC02E4848000B79263954324FD7C51A47E738F3 0xAC LOG1 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "119:373:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4014:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3156:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3367:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;2084:103::-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;4014:429::-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;3156:144::-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;3367:157::-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;9015:445:1:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:5:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;13268:315:1:-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:974::-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:139::-;3917:6;3912:3;3907;3901:23;3958:1;3949:6;3944:3;3940:16;3933:27;3828:139;;;:::o;3973:102::-;4014:6;4065:2;4061:7;4056:2;4049:5;4045:14;4041:28;4031:38;;3973:102;;;:::o;4081:377::-;4169:3;4197:39;4230:5;4197:39;:::i;:::-;4252:71;4316:6;4311:3;4252:71;:::i;:::-;4245:78;;4332:65;4390:6;4385:3;4378:4;4371:5;4367:16;4332:65;:::i;:::-;4422:29;4444:6;4422:29;:::i;:::-;4417:3;4413:39;4406:46;;4173:285;4081:377;;;;:::o;4464:313::-;4577:4;4615:2;4604:9;4600:18;4592:26;;4664:9;4658:4;4654:20;4650:1;4639:9;4635:17;4628:47;4692:78;4765:4;4756:6;4692:78;:::i;:::-;4684:86;;4464:313;;;;:::o;4783:117::-;4892:1;4889;4882:12;4906:180;4954:77;4951:1;4944:88;5051:4;5048:1;5041:15;5075:4;5072:1;5065:15;5092:281;5175:27;5197:4;5175:27;:::i;:::-;5167:6;5163:40;5305:6;5293:10;5290:22;5269:18;5257:10;5254:34;5251:62;5248:88;;;5316:18;;:::i;:::-;5248:88;5356:10;5352:2;5345:22;5135:238;5092:281;;:::o;5379:129::-;5413:6;5440:20;;:::i;:::-;5430:30;;5469:33;5497:4;5489:6;5469:33;:::i;:::-;5379:129;;;:::o;5514:311::-;5591:4;5681:18;5673:6;5670:30;5667:56;;;5703:18;;:::i;:::-;5667:56;5753:4;5745:6;5741:17;5733:25;;5813:4;5807;5803:15;5795:23;;5514:311;;;:::o;5831:117::-;5940:1;5937;5930:12;5971:710;6067:5;6092:81;6108:64;6165:6;6108:64;:::i;:::-;6092:81;:::i;:::-;6083:90;;6193:5;6222:6;6215:5;6208:21;6256:4;6249:5;6245:16;6238:23;;6309:4;6301:6;6297:17;6289:6;6285:30;6338:3;6330:6;6327:15;6324:122;;;6357:79;;:::i;:::-;6324:122;6472:6;6455:220;6489:6;6484:3;6481:15;6455:220;;;6564:3;6593:37;6626:3;6614:10;6593:37;:::i;:::-;6588:3;6581:50;6660:4;6655:3;6651:14;6644:21;;6531:144;6515:4;6510:3;6506:14;6499:21;;6455:220;;;6459:21;6073:608;;5971:710;;;;;:::o;6704:370::-;6775:5;6824:3;6817:4;6809:6;6805:17;6801:27;6791:122;;6832:79;;:::i;:::-;6791:122;6949:6;6936:20;6974:94;7064:3;7056:6;7049:4;7041:6;7037:17;6974:94;:::i;:::-;6965:103;;6781:293;6704:370;;;;:::o;7080:117::-;7189:1;7186;7179:12;7203:307;7264:4;7354:18;7346:6;7343:30;7340:56;;;7376:18;;:::i;:::-;7340:56;7414:29;7436:6;7414:29;:::i;:::-;7406:37;;7498:4;7492;7488:15;7480:23;;7203:307;;;:::o;7516:148::-;7614:6;7609:3;7604;7591:30;7655:1;7646:6;7641:3;7637:16;7630:27;7516:148;;;:::o;7670:423::-;7747:5;7772:65;7788:48;7829:6;7788:48;:::i;:::-;7772:65;:::i;:::-;7763:74;;7860:6;7853:5;7846:21;7898:4;7891:5;7887:16;7936:3;7927:6;7922:3;7918:16;7915:25;7912:112;;;7943:79;;:::i;:::-;7912:112;8033:54;8080:6;8075:3;8070;8033:54;:::i;:::-;7753:340;7670:423;;;;;:::o;8112:338::-;8167:5;8216:3;8209:4;8201:6;8197:17;8193:27;8183:122;;8224:79;;:::i;:::-;8183:122;8341:6;8328:20;8366:78;8440:3;8432:6;8425:4;8417:6;8413:17;8366:78;:::i;:::-;8357:87;;8173:277;8112:338;;;;:::o;8456:1509::-;8610:6;8618;8626;8634;8642;8691:3;8679:9;8670:7;8666:23;8662:33;8659:120;;;8698:79;;:::i;:::-;8659:120;8818:1;8843:53;8888:7;8879:6;8868:9;8864:22;8843:53;:::i;:::-;8833:63;;8789:117;8945:2;8971:53;9016:7;9007:6;8996:9;8992:22;8971:53;:::i;:::-;8961:63;;8916:118;9101:2;9090:9;9086:18;9073:32;9132:18;9124:6;9121:30;9118:117;;;9154:79;;:::i;:::-;9118:117;9259:78;9329:7;9320:6;9309:9;9305:22;9259:78;:::i;:::-;9249:88;;9044:303;9414:2;9403:9;9399:18;9386:32;9445:18;9437:6;9434:30;9431:117;;;9467:79;;:::i;:::-;9431:117;9572:78;9642:7;9633:6;9622:9;9618:22;9572:78;:::i;:::-;9562:88;;9357:303;9727:3;9716:9;9712:19;9699:33;9759:18;9751:6;9748:30;9745:117;;;9781:79;;:::i;:::-;9745:117;9886:62;9940:7;9931:6;9920:9;9916:22;9886:62;:::i;:::-;9876:72;;9670:288;8456:1509;;;;;;;;:::o;9971:311::-;10048:4;10138:18;10130:6;10127:30;10124:56;;;10160:18;;:::i;:::-;10124:56;10210:4;10202:6;10198:17;10190:25;;10270:4;10264;10260:15;10252:23;;9971:311;;;:::o;10305:710::-;10401:5;10426:81;10442:64;10499:6;10442:64;:::i;:::-;10426:81;:::i;:::-;10417:90;;10527:5;10556:6;10549:5;10542:21;10590:4;10583:5;10579:16;10572:23;;10643:4;10635:6;10631:17;10623:6;10619:30;10672:3;10664:6;10661:15;10658:122;;;10691:79;;:::i;:::-;10658:122;10806:6;10789:220;10823:6;10818:3;10815:15;10789:220;;;10898:3;10927:37;10960:3;10948:10;10927:37;:::i;:::-;10922:3;10915:50;10994:4;10989:3;10985:14;10978:21;;10865:144;10849:4;10844:3;10840:14;10833:21;;10789:220;;;10793:21;10407:608;;10305:710;;;;;:::o;11038:370::-;11109:5;11158:3;11151:4;11143:6;11139:17;11135:27;11125:122;;11166:79;;:::i;:::-;11125:122;11283:6;11270:20;11308:94;11398:3;11390:6;11383:4;11375:6;11371:17;11308:94;:::i;:::-;11299:103;;11115:293;11038:370;;;;:::o;11414:894::-;11532:6;11540;11589:2;11577:9;11568:7;11564:23;11560:32;11557:119;;;11595:79;;:::i;:::-;11557:119;11743:1;11732:9;11728:17;11715:31;11773:18;11765:6;11762:30;11759:117;;;11795:79;;:::i;:::-;11759:117;11900:78;11970:7;11961:6;11950:9;11946:22;11900:78;:::i;:::-;11890:88;;11686:302;12055:2;12044:9;12040:18;12027:32;12086:18;12078:6;12075:30;12072:117;;;12108:79;;:::i;:::-;12072:117;12213:78;12283:7;12274:6;12263:9;12259:22;12213:78;:::i;:::-;12203:88;;11998:303;11414:894;;;;;:::o;12314:114::-;12381:6;12415:5;12409:12;12399:22;;12314:114;;;:::o;12434:184::-;12533:11;12567:6;12562:3;12555:19;12607:4;12602:3;12598:14;12583:29;;12434:184;;;;:::o;12624:132::-;12691:4;12714:3;12706:11;;12744:4;12739:3;12735:14;12727:22;;12624:132;;;:::o;12762:108::-;12839:24;12857:5;12839:24;:::i;:::-;12834:3;12827:37;12762:108;;:::o;12876:179::-;12945:10;12966:46;13008:3;13000:6;12966:46;:::i;:::-;13044:4;13039:3;13035:14;13021:28;;12876:179;;;;:::o;13061:113::-;13131:4;13163;13158:3;13154:14;13146:22;;13061:113;;;:::o;13210:732::-;13329:3;13358:54;13406:5;13358:54;:::i;:::-;13428:86;13507:6;13502:3;13428:86;:::i;:::-;13421:93;;13538:56;13588:5;13538:56;:::i;:::-;13617:7;13648:1;13633:284;13658:6;13655:1;13652:13;13633:284;;;13734:6;13728:13;13761:63;13820:3;13805:13;13761:63;:::i;:::-;13754:70;;13847:60;13900:6;13847:60;:::i;:::-;13837:70;;13693:224;13680:1;13677;13673:9;13668:14;;13633:284;;;13637:14;13933:3;13926:10;;13334:608;;;13210:732;;;;:::o;13948:373::-;14091:4;14129:2;14118:9;14114:18;14106:26;;14178:9;14172:4;14168:20;14164:1;14153:9;14149:17;14142:47;14206:108;14309:4;14300:6;14206:108;:::i;:::-;14198:116;;13948:373;;;;:::o;14327:116::-;14397:21;14412:5;14397:21;:::i;:::-;14390:5;14387:32;14377:60;;14433:1;14430;14423:12;14377:60;14327:116;:::o;14449:133::-;14492:5;14530:6;14517:20;14508:29;;14546:30;14570:5;14546:30;:::i;:::-;14449:133;;;;:::o;14588:468::-;14653:6;14661;14710:2;14698:9;14689:7;14685:23;14681:32;14678:119;;;14716:79;;:::i;:::-;14678:119;14836:1;14861:53;14906:7;14897:6;14886:9;14882:22;14861:53;:::i;:::-;14851:63;;14807:117;14963:2;14989:50;15031:7;15022:6;15011:9;15007:22;14989:50;:::i;:::-;14979:60;;14934:115;14588:468;;;;;:::o;15062:474::-;15130:6;15138;15187:2;15175:9;15166:7;15162:23;15158:32;15155:119;;;15193:79;;:::i;:::-;15155:119;15313:1;15338:53;15383:7;15374:6;15363:9;15359:22;15338:53;:::i;:::-;15328:63;;15284:117;15440:2;15466:53;15511:7;15502:6;15491:9;15487:22;15466:53;:::i;:::-;15456:63;;15411:118;15062:474;;;;;:::o;15542:1089::-;15646:6;15654;15662;15670;15678;15727:3;15715:9;15706:7;15702:23;15698:33;15695:120;;;15734:79;;:::i;:::-;15695:120;15854:1;15879:53;15924:7;15915:6;15904:9;15900:22;15879:53;:::i;:::-;15869:63;;15825:117;15981:2;16007:53;16052:7;16043:6;16032:9;16028:22;16007:53;:::i;:::-;15997:63;;15952:118;16109:2;16135:53;16180:7;16171:6;16160:9;16156:22;16135:53;:::i;:::-;16125:63;;16080:118;16237:2;16263:53;16308:7;16299:6;16288:9;16284:22;16263:53;:::i;:::-;16253:63;;16208:118;16393:3;16382:9;16378:19;16365:33;16425:18;16417:6;16414:30;16411:117;;;16447:79;;:::i;:::-;16411:117;16552:62;16606:7;16597:6;16586:9;16582:22;16552:62;:::i;:::-;16542:72;;16336:288;15542:1089;;;;;;;;:::o;16637:180::-;16685:77;16682:1;16675:88;16782:4;16779:1;16772:15;16806:4;16803:1;16796:15;16823:320;16867:6;16904:1;16898:4;16894:12;16884:22;;16951:1;16945:4;16941:12;16972:18;16962:81;;17028:4;17020:6;17016:17;17006:27;;16962:81;17090:2;17082:6;17079:14;17059:18;17056:38;17053:84;;17109:18;;:::i;:::-;17053:84;16874:269;16823:320;;;:::o;17149:118::-;17236:24;17254:5;17236:24;:::i;:::-;17231:3;17224:37;17149:118;;:::o;17273:332::-;17394:4;17432:2;17421:9;17417:18;17409:26;;17445:71;17513:1;17502:9;17498:17;17489:6;17445:71;:::i;:::-;17526:72;17594:2;17583:9;17579:18;17570:6;17526:72;:::i;:::-;17273:332;;;;;:::o;17611:::-;17732:4;17770:2;17759:9;17755:18;17747:26;;17783:71;17851:1;17840:9;17836:17;17827:6;17783:71;:::i;:::-;17864:72;17932:2;17921:9;17917:18;17908:6;17864:72;:::i;:::-;17611:332;;;;;:::o;17949:180::-;17997:77;17994:1;17987:88;18094:4;18091:1;18084:15;18118:4;18115:1;18108:15;18135:222;18228:4;18266:2;18255:9;18251:18;18243:26;;18279:71;18347:1;18336:9;18332:17;18323:6;18279:71;:::i;:::-;18135:222;;;;:::o;18363:553::-;18540:4;18578:3;18567:9;18563:19;18555:27;;18592:71;18660:1;18649:9;18645:17;18636:6;18592:71;:::i;:::-;18673:72;18741:2;18730:9;18726:18;18717:6;18673:72;:::i;:::-;18755;18823:2;18812:9;18808:18;18799:6;18755:72;:::i;:::-;18837;18905:2;18894:9;18890:18;18881:6;18837:72;:::i;:::-;18363:553;;;;;;;:::o;18922:180::-;18970:77;18967:1;18960:88;19067:4;19064:1;19057:15;19091:4;19088:1;19081:15;19108:191;19148:3;19167:20;19185:1;19167:20;:::i;:::-;19162:25;;19201:20;19219:1;19201:20;:::i;:::-;19196:25;;19244:1;19241;19237:9;19230:16;;19265:3;19262:1;19259:10;19256:36;;;19272:18;;:::i;:::-;19256:36;19108:191;;;;:::o;19305:634::-;19526:4;19564:2;19553:9;19549:18;19541:26;;19613:9;19607:4;19603:20;19599:1;19588:9;19584:17;19577:47;19641:108;19744:4;19735:6;19641:108;:::i;:::-;19633:116;;19796:9;19790:4;19786:20;19781:2;19770:9;19766:18;19759:48;19824:108;19927:4;19918:6;19824:108;:::i;:::-;19816:116;;19305:634;;;;;:::o;19945:98::-;19996:6;20030:5;20024:12;20014:22;;19945:98;;;:::o;20049:168::-;20132:11;20166:6;20161:3;20154:19;20206:4;20201:3;20197:14;20182:29;;20049:168;;;;:::o;20223:373::-;20309:3;20337:38;20369:5;20337:38;:::i;:::-;20391:70;20454:6;20449:3;20391:70;:::i;:::-;20384:77;;20470:65;20528:6;20523:3;20516:4;20509:5;20505:16;20470:65;:::i;:::-;20560:29;20582:6;20560:29;:::i;:::-;20555:3;20551:39;20544:46;;20313:283;20223:373;;;;:::o;20602:751::-;20825:4;20863:3;20852:9;20848:19;20840:27;;20877:71;20945:1;20934:9;20930:17;20921:6;20877:71;:::i;:::-;20958:72;21026:2;21015:9;21011:18;21002:6;20958:72;:::i;:::-;21040;21108:2;21097:9;21093:18;21084:6;21040:72;:::i;:::-;21122;21190:2;21179:9;21175:18;21166:6;21122:72;:::i;:::-;21242:9;21236:4;21232:20;21226:3;21215:9;21211:19;21204:49;21270:76;21341:4;21332:6;21270:76;:::i;:::-;21262:84;;20602:751;;;;;;;;:::o;21359:141::-;21415:5;21446:6;21440:13;21431:22;;21462:32;21488:5;21462:32;:::i;:::-;21359:141;;;;:::o;21506:349::-;21575:6;21624:2;21612:9;21603:7;21599:23;21595:32;21592:119;;;21630:79;;:::i;:::-;21592:119;21750:1;21775:63;21830:7;21821:6;21810:9;21806:22;21775:63;:::i;:::-;21765:73;;21721:127;21506:349;;;;:::o;21861:1053::-;22184:4;22222:3;22211:9;22207:19;22199:27;;22236:71;22304:1;22293:9;22289:17;22280:6;22236:71;:::i;:::-;22317:72;22385:2;22374:9;22370:18;22361:6;22317:72;:::i;:::-;22436:9;22430:4;22426:20;22421:2;22410:9;22406:18;22399:48;22464:108;22567:4;22558:6;22464:108;:::i;:::-;22456:116;;22619:9;22613:4;22609:20;22604:2;22593:9;22589:18;22582:48;22647:108;22750:4;22741:6;22647:108;:::i;:::-;22639:116;;22803:9;22797:4;22793:20;22787:3;22776:9;22772:19;22765:49;22831:76;22902:4;22893:6;22831:76;:::i;:::-;22823:84;;21861:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1542600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "786",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 119,
									"end": 492,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 119,
									"end": 492,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 119,
									"end": 492,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 160,
									"end": 490,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 160,
									"end": 490,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 160,
									"end": 490,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 160,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 160,
									"end": 490,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 160,
									"end": 490,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 160,
									"end": 490,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 160,
									"end": 490,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 160,
									"end": 490,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 160,
									"end": 490,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 160,
									"end": 490,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "4B"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH data",
									"source": 1,
									"value": "EAE80A2C7BF2C9D096E554E5E4405CF6AEFA68F606389F34D4CDA8A311083DED"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "4B"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 277,
									"end": 287,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 289,
									"end": 290,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 309,
									"end": 311,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 271,
									"end": 331,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 271,
									"end": 276,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 271,
									"end": 276,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 271,
									"end": 276,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 271,
									"end": 331,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 271,
									"end": 331,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 347,
									"end": 357,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 359,
									"end": 360,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 387,
									"end": 389,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 341,
									"end": 409,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 341,
									"end": 346,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 341,
									"end": 346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 341,
									"end": 346,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 341,
									"end": 409,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 341,
									"end": 409,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 425,
									"end": 435,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 437,
									"end": 438,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 461,
									"end": 463,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 419,
									"end": 483,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 419,
									"end": 424,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 419,
									"end": 424,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 419,
									"end": 424,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 419,
									"end": 483,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 419,
									"end": 483,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 119,
									"end": 492,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 119,
									"end": 492,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10856,
									"end": 10857,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 10842,
									"end": 10844,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 10842,
									"end": 10858,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 10838,
									"end": 10926,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 10838,
									"end": 10926,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10912,
									"end": 10913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH",
									"source": 1,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 10881,
									"end": 10915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10881,
									"end": 10915,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 10838,
									"end": 10926,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 10838,
									"end": 10926,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10936,
									"end": 10956,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10958,
									"end": 10981,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11004,
									"end": 11006,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 11008,
									"end": 11013,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 10985,
									"end": 11003,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 10985,
									"end": 11003,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10985,
									"end": 11003,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 10985,
									"end": 11014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10985,
									"end": 11014,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10935,
									"end": 11014,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10935,
									"end": 11014,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10935,
									"end": 11014,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10935,
									"end": 11014,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 11059,
									"end": 11060,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11063,
									"end": 11065,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 11067,
									"end": 11070,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11072,
									"end": 11078,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11080,
									"end": 11084,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 11024,
									"end": 11050,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 11024,
									"end": 11050,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11024,
									"end": 11050,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 11024,
									"end": 11085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 11024,
									"end": 11085,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10828,
									"end": 11092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10828,
									"end": 11092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 11092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 11092,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 16188,
									"end": 16211,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 16213,
									"end": 16236,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 16374,
									"end": 16378,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16368,
									"end": 16379,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 16358,
									"end": 16379,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 16358,
									"end": 16379,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16444,
									"end": 16445,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 16436,
									"end": 16442,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 16429,
									"end": 16446,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16582,
									"end": 16590,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 16575,
									"end": 16579,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16567,
									"end": 16573,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 16563,
									"end": 16580,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16556,
									"end": 16591,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16704,
									"end": 16708,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16696,
									"end": 16702,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 16692,
									"end": 16709,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16682,
									"end": 16709,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 16682,
									"end": 16709,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16737,
									"end": 16738,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 16729,
									"end": 16735,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16722,
									"end": 16739,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16778,
									"end": 16786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 16771,
									"end": 16775,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 16763,
									"end": 16769,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 16759,
									"end": 16776,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16752,
									"end": 16787,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16907,
									"end": 16911,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16899,
									"end": 16905,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 16895,
									"end": 16912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 16889,
									"end": 16893,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 16882,
									"end": 16913,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 16080,
									"end": 16929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7213,
									"end": 7217,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7219,
									"end": 7221,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7223,
									"end": 7226,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7228,
									"end": 7234,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7212,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7205,
									"end": 7212,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7205,
									"end": 7212,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7205,
									"end": 7235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7263,
									"end": 7264,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7249,
									"end": 7251,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7249,
									"end": 7265,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7245,
									"end": 7688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7245,
									"end": 7688,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7281,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 7300,
									"end": 7310,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7300,
									"end": 7310,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7300,
									"end": 7310,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 7300,
									"end": 7312,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7281,
									"end": 7312,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7281,
									"end": 7312,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7344,
									"end": 7345,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7330,
									"end": 7333,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7340,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7345,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7375,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 7401,
									"end": 7402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7378,
									"end": 7381,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7400,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7378,
									"end": 7400,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7378,
									"end": 7400,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7400,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 7378,
									"end": 7403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7421,
									"end": 7434,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7463,
									"end": 7464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7437,
									"end": 7443,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7437,
									"end": 7462,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7437,
									"end": 7462,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7462,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7437,
									"end": 7465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7421,
									"end": 7465,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7421,
									"end": 7465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7514,
									"end": 7522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7524,
									"end": 7528,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 7530,
									"end": 7532,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 7534,
									"end": 7536,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7538,
									"end": 7543,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7545,
									"end": 7549,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 7483,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 7483,
									"end": 7513,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7483,
									"end": 7513,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7483,
									"end": 7550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7483,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7347,
									"end": 7565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7347,
									"end": 7565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 7625,
									"end": 7633,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7635,
									"end": 7639,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7641,
									"end": 7643,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7645,
									"end": 7648,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7650,
									"end": 7656,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7658,
									"end": 7662,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7624,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 7589,
									"end": 7624,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7589,
									"end": 7624,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 7589,
									"end": 7663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7326,
									"end": 7678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7267,
									"end": 7688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7245,
									"end": 7688,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7245,
									"end": 7688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5279,
									"end": 5285,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5279,
									"end": 5292,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5265,
									"end": 5268,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5265,
									"end": 5275,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5265,
									"end": 5292,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 5261,
									"end": 5378,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5341,
									"end": 5344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5341,
									"end": 5351,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5353,
									"end": 5359,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5353,
									"end": 5366,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH",
									"source": 1,
									"value": "5B05999100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 5315,
									"end": 5367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5367,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5378,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 5261,
									"end": 5378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5388,
									"end": 5404,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 5407,
									"end": 5417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 5407,
									"end": 5417,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5407,
									"end": 5417,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5407,
									"end": 5419,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 5407,
									"end": 5419,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5388,
									"end": 5419,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5388,
									"end": 5419,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5435,
									"end": 5444,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5454,
									"end": 5457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5454,
									"end": 5464,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5451,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5464,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5495,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 5521,
									"end": 5522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5501,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 5498,
									"end": 5520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5498,
									"end": 5520,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 5498,
									"end": 5523,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5550,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 5579,
									"end": 5580,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5559,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 5553,
									"end": 5581,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5581,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5616,
									"end": 5617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5618,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 6016,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 5596,
									"end": 6016,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5638,
									"end": 5657,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5660,
									"end": 5669,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5670,
									"end": 5672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5660,
									"end": 5673,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5674,
									"end": 5678,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5679,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5638,
									"end": 5679,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5638,
									"end": 5679,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5715,
									"end": 5720,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5701,
									"end": 5712,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5701,
									"end": 5720,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5778,
									"end": 5782,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 5784,
									"end": 5795,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5797,
									"end": 5802,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5804,
									"end": 5806,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH",
									"source": 1,
									"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 5751,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5751,
									"end": 5807,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 5697,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5978,
									"end": 5983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5964,
									"end": 5975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5964,
									"end": 5983,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5952,
									"end": 5954,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5942,
									"end": 5955,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5956,
									"end": 5960,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5942,
									"end": 5961,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5620,
									"end": 6016,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 6016,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 5596,
									"end": 6016,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6034,
									"end": 6036,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6034,
									"end": 6050,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 6030,
									"end": 6111,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6091,
									"end": 6096,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6079,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6080,
									"end": 6082,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6070,
									"end": 6083,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6084,
									"end": 6086,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6087,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 6070,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6070,
									"end": 6096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6111,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 6030,
									"end": 6111,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5471,
									"end": 6121,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5471,
									"end": 6121,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5466,
									"end": 5469,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5430,
									"end": 6121,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6150,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6135,
									"end": 6138,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6135,
									"end": 6145,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6135,
									"end": 6150,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6166,
									"end": 6176,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 6202,
									"end": 6203,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6179,
									"end": 6182,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6179,
									"end": 6201,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6179,
									"end": 6201,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6201,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6166,
									"end": 6204,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6166,
									"end": 6204,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6218,
									"end": 6231,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 6260,
									"end": 6261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6234,
									"end": 6240,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6234,
									"end": 6259,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6234,
									"end": 6259,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6259,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 6234,
									"end": 6262,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6218,
									"end": 6262,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6218,
									"end": 6262,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6312,
									"end": 6314,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6306,
									"end": 6310,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6304,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 1,
									"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
								},
								{
									"begin": 6316,
									"end": 6318,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6320,
									"end": 6325,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 6281,
									"end": 6326,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6326,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6152,
									"end": 6337,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6152,
									"end": 6337,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6394,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6390,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6376,
									"end": 6384,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 1,
									"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
								},
								{
									"begin": 6396,
									"end": 6399,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6401,
									"end": 6407,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 6362,
									"end": 6408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6362,
									"end": 6408,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 6131,
									"end": 6419,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5251,
									"end": 6425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 6425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 6425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4290,
									"end": 4301,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4378,
									"end": 4382,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4373,
									"end": 4376,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4369,
									"end": 4383,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 4362,
									"end": 4366,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4357,
									"end": 4360,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4353,
									"end": 4367,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4349,
									"end": 4384,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4343,
									"end": 4385,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4336,
									"end": 4385,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4336,
									"end": 4385,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4204,
									"end": 4401,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4204,
									"end": 4401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13984,
									"end": 13985,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13967,
									"end": 13969,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 13967,
									"end": 13981,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13967,
									"end": 13981,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13967,
									"end": 13981,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 13967,
									"end": 13985,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14022,
									"end": 14024,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14043,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14005,
									"end": 14043,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14043,
									"name": "PUSH",
									"source": 1,
									"value": "F23A6E61"
								},
								{
									"begin": 14044,
									"end": 14052,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 14054,
									"end": 14058,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 14060,
									"end": 14062,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 14064,
									"end": 14069,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 14071,
									"end": 14075,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFF"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 14005,
									"end": 14076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "CALL",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 14005,
									"end": 14076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 14005,
									"end": 14076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "RETURNDATACOPY",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14377,
									"end": 14378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 14360,
									"end": 14366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14360,
									"end": 14373,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14360,
									"end": 14378,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 14356,
									"end": 14705,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 14356,
									"end": 14705,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14487,
									"end": 14489,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH",
									"source": 1,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 14464,
									"end": 14490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14464,
									"end": 14490,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 14356,
									"end": 14705,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 14356,
									"end": 14705,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14657,
									"end": 14663,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14651,
									"end": 14664,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14642,
									"end": 14648,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14638,
									"end": 14640,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14634,
									"end": 14649,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14627,
									"end": 14665,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 14001,
									"end": 14719,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14137,
									"end": 14180,
									"name": "PUSH",
									"source": 1,
									"value": "F23A6E61"
								},
								{
									"begin": 14137,
									"end": 14180,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 14137,
									"end": 14180,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14125,
									"end": 14133,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 14125,
									"end": 14180,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 14121,
									"end": 14295,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 14121,
									"end": 14295,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 14273,
									"end": 14275,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH",
									"source": 1,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 14250,
									"end": 14276,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14250,
									"end": 14276,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 14121,
									"end": 14295,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 14121,
									"end": 14295,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14077,
									"end": 14309,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 13963,
									"end": 14729,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13761,
									"end": 14735,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15171,
									"end": 15172,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15154,
									"end": 15156,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 15154,
									"end": 15168,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15154,
									"end": 15168,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15154,
									"end": 15168,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 15154,
									"end": 15172,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15209,
									"end": 15211,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15235,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15192,
									"end": 15235,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15235,
									"name": "PUSH",
									"source": 1,
									"value": "BC197C81"
								},
								{
									"begin": 15236,
									"end": 15244,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 15246,
									"end": 15250,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 15252,
									"end": 15255,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 15257,
									"end": 15263,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 15265,
									"end": 15269,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFF"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 15192,
									"end": 15270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "CALL",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 15192,
									"end": 15270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 15192,
									"end": 15270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "RETURNDATACOPY",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15606,
									"end": 15607,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15589,
									"end": 15595,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15589,
									"end": 15602,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15589,
									"end": 15607,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 15585,
									"end": 15934,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 15585,
									"end": 15934,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15716,
									"end": 15718,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH",
									"source": 1,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 15693,
									"end": 15719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15693,
									"end": 15719,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 15585,
									"end": 15934,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 15585,
									"end": 15934,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15886,
									"end": 15892,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15880,
									"end": 15893,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15871,
									"end": 15877,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15867,
									"end": 15869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15863,
									"end": 15878,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15856,
									"end": 15894,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 15188,
									"end": 15948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15361,
									"end": 15409,
									"name": "PUSH",
									"source": 1,
									"value": "BC197C81"
								},
								{
									"begin": 15361,
									"end": 15409,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 15361,
									"end": 15409,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15349,
									"end": 15357,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 15349,
									"end": 15409,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 15345,
									"end": 15524,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 15345,
									"end": 15524,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15502,
									"end": 15504,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH",
									"source": 1,
									"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 15479,
									"end": 15505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15479,
									"end": 15505,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 15345,
									"end": 15524,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 15345,
									"end": 15524,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15271,
									"end": 15538,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 15150,
									"end": 15958,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14923,
									"end": 15964,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "158"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 12,
									"value": "158"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "164"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "165"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "165"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 12,
									"value": "164"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 12,
									"value": "163"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "169"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "170"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 12,
									"value": "170"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 12,
									"value": "169"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "174"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 12,
									"value": "174"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "178"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "179"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "179"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "176"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "178"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "182"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 12,
									"value": "182"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "183"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 12,
									"value": "183"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "185"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "186"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 12,
									"value": "186"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 12,
									"value": "185"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "193"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 12,
									"value": "193"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "194"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "195"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 12,
									"value": "195"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 12,
									"value": "194"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "196"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 12,
									"value": "196"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "197"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 12,
									"value": "197"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "200"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 12,
									"value": "200"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "201"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 12,
									"value": "201"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "198"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "202"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 12,
									"value": "202"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "203"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "203"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "206"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "207"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 12,
									"value": "207"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 12,
									"value": "206"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 12,
									"value": "198"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "212"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 12,
									"value": "212"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5820,
									"end": 5938,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 5820,
									"end": 5938,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5907,
									"end": 5931,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "216"
								},
								{
									"begin": 5925,
									"end": 5930,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5907,
									"end": 5931,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5907,
									"end": 5931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5907,
									"end": 5931,
									"name": "tag",
									"source": 12,
									"value": "216"
								},
								{
									"begin": 5907,
									"end": 5931,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5902,
									"end": 5905,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5895,
									"end": 5932,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5820,
									"end": 5938,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5820,
									"end": 5938,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5820,
									"end": 5938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6065,
									"end": 6069,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6103,
									"end": 6105,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6092,
									"end": 6101,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6088,
									"end": 6106,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6080,
									"end": 6106,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6080,
									"end": 6106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6116,
									"end": 6187,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "218"
								},
								{
									"begin": 6184,
									"end": 6185,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6173,
									"end": 6182,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6169,
									"end": 6186,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6160,
									"end": 6166,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6116,
									"end": 6187,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6116,
									"end": 6187,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6116,
									"end": 6187,
									"name": "tag",
									"source": 12,
									"value": "218"
								},
								{
									"begin": 6116,
									"end": 6187,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6197,
									"end": 6269,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 6265,
									"end": 6267,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6254,
									"end": 6263,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6250,
									"end": 6268,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6241,
									"end": 6247,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6197,
									"end": 6269,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6197,
									"end": 6269,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6197,
									"end": 6269,
									"name": "tag",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 6197,
									"end": 6269,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5944,
									"end": 6276,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6459,
									"end": 6463,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6497,
									"end": 6500,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 6486,
									"end": 6495,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6482,
									"end": 6501,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6474,
									"end": 6501,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6474,
									"end": 6501,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6511,
									"end": 6582,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "221"
								},
								{
									"begin": 6579,
									"end": 6580,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6568,
									"end": 6577,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6564,
									"end": 6581,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 6511,
									"end": 6582,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 6511,
									"end": 6582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6511,
									"end": 6582,
									"name": "tag",
									"source": 12,
									"value": "221"
								},
								{
									"begin": 6511,
									"end": 6582,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6592,
									"end": 6664,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "222"
								},
								{
									"begin": 6660,
									"end": 6662,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6649,
									"end": 6658,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6645,
									"end": 6663,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6636,
									"end": 6642,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6592,
									"end": 6664,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6592,
									"end": 6664,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6592,
									"end": 6664,
									"name": "tag",
									"source": 12,
									"value": "222"
								},
								{
									"begin": 6592,
									"end": 6664,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6674,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "223"
								},
								{
									"begin": 6742,
									"end": 6744,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6731,
									"end": 6740,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6727,
									"end": 6745,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6718,
									"end": 6724,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6674,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6674,
									"end": 6746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6674,
									"end": 6746,
									"name": "tag",
									"source": 12,
									"value": "223"
								},
								{
									"begin": 6674,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6756,
									"end": 6828,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "224"
								},
								{
									"begin": 6824,
									"end": 6826,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 6813,
									"end": 6822,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6809,
									"end": 6827,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6800,
									"end": 6806,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6756,
									"end": 6828,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6756,
									"end": 6828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6756,
									"end": 6828,
									"name": "tag",
									"source": 12,
									"value": "224"
								},
								{
									"begin": 6756,
									"end": 6828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6835,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6841,
									"end": 7021,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6841,
									"end": 7021,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6889,
									"end": 6966,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6886,
									"end": 6887,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6879,
									"end": 6967,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6986,
									"end": 6990,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 6983,
									"end": 6984,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 6976,
									"end": 6991,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 7007,
									"end": 7008,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7000,
									"end": 7015,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 7027,
									"end": 7218,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 7027,
									"end": 7218,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7067,
									"end": 7070,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7086,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "227"
								},
								{
									"begin": 7104,
									"end": 7105,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7086,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 7086,
									"end": 7106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7086,
									"end": 7106,
									"name": "tag",
									"source": 12,
									"value": "227"
								},
								{
									"begin": 7086,
									"end": 7106,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7081,
									"end": 7106,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7081,
									"end": 7106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7120,
									"end": 7140,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "228"
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7120,
									"end": 7140,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 7120,
									"end": 7140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7120,
									"end": 7140,
									"name": "tag",
									"source": 12,
									"value": "228"
								},
								{
									"begin": 7120,
									"end": 7140,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7115,
									"end": 7140,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7115,
									"end": 7140,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7163,
									"end": 7164,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7160,
									"end": 7161,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7156,
									"end": 7165,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7149,
									"end": 7165,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7149,
									"end": 7165,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7184,
									"end": 7187,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 7181,
									"end": 7182,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7178,
									"end": 7188,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7175,
									"end": 7211,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7175,
									"end": 7211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "229"
								},
								{
									"begin": 7175,
									"end": 7211,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7191,
									"end": 7209,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "230"
								},
								{
									"begin": 7191,
									"end": 7209,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 7191,
									"end": 7209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7191,
									"end": 7209,
									"name": "tag",
									"source": 12,
									"value": "230"
								},
								{
									"begin": 7191,
									"end": 7209,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7175,
									"end": 7211,
									"name": "tag",
									"source": 12,
									"value": "229"
								},
								{
									"begin": 7175,
									"end": 7211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7027,
									"end": 7218,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7027,
									"end": 7218,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7027,
									"end": 7218,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7027,
									"end": 7218,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7027,
									"end": 7218,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7224,
									"end": 7338,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 7224,
									"end": 7338,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7291,
									"end": 7297,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7325,
									"end": 7330,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7319,
									"end": 7331,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7331,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7331,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7224,
									"end": 7338,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7224,
									"end": 7338,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7224,
									"end": 7338,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7224,
									"end": 7338,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7344,
									"end": 7528,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7344,
									"end": 7528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7443,
									"end": 7454,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7477,
									"end": 7483,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7472,
									"end": 7475,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7465,
									"end": 7484,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 7517,
									"end": 7521,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7512,
									"end": 7515,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7508,
									"end": 7522,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7493,
									"end": 7522,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7493,
									"end": 7522,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7344,
									"end": 7528,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7344,
									"end": 7528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7344,
									"end": 7528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7344,
									"end": 7528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7344,
									"end": 7528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7534,
									"end": 7666,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 7534,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7601,
									"end": 7605,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7624,
									"end": 7627,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7616,
									"end": 7627,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7616,
									"end": 7627,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7654,
									"end": 7658,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7649,
									"end": 7652,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7645,
									"end": 7659,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7534,
									"end": 7666,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7534,
									"end": 7666,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7534,
									"end": 7666,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7534,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7672,
									"end": 7780,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7672,
									"end": 7780,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7749,
									"end": 7773,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "235"
								},
								{
									"begin": 7767,
									"end": 7772,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7749,
									"end": 7773,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 7749,
									"end": 7773,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7749,
									"end": 7773,
									"name": "tag",
									"source": 12,
									"value": "235"
								},
								{
									"begin": 7749,
									"end": 7773,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7744,
									"end": 7747,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7737,
									"end": 7774,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 7672,
									"end": 7780,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7672,
									"end": 7780,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7672,
									"end": 7780,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7965,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7786,
									"end": 7965,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7855,
									"end": 7865,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7876,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "237"
								},
								{
									"begin": 7918,
									"end": 7921,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7910,
									"end": 7916,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7876,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7876,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7876,
									"end": 7922,
									"name": "tag",
									"source": 12,
									"value": "237"
								},
								{
									"begin": 7876,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7954,
									"end": 7958,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7949,
									"end": 7952,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7945,
									"end": 7959,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7931,
									"end": 7959,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7931,
									"end": 7959,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7965,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7965,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7965,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7965,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7786,
									"end": 7965,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8084,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7971,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8041,
									"end": 8045,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8073,
									"end": 8077,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8068,
									"end": 8071,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8064,
									"end": 8078,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8056,
									"end": 8078,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8056,
									"end": 8078,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8084,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8084,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8084,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8852,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 8120,
									"end": 8852,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8239,
									"end": 8242,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8268,
									"end": 8322,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "240"
								},
								{
									"begin": 8316,
									"end": 8321,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8268,
									"end": 8322,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 8268,
									"end": 8322,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8268,
									"end": 8322,
									"name": "tag",
									"source": 12,
									"value": "240"
								},
								{
									"begin": 8268,
									"end": 8322,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8338,
									"end": 8424,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "241"
								},
								{
									"begin": 8417,
									"end": 8423,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8412,
									"end": 8415,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8338,
									"end": 8424,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 8338,
									"end": 8424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8338,
									"end": 8424,
									"name": "tag",
									"source": 12,
									"value": "241"
								},
								{
									"begin": 8338,
									"end": 8424,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8331,
									"end": 8424,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 8331,
									"end": 8424,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8448,
									"end": 8504,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "242"
								},
								{
									"begin": 8498,
									"end": 8503,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8448,
									"end": 8504,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 8448,
									"end": 8504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8448,
									"end": 8504,
									"name": "tag",
									"source": 12,
									"value": "242"
								},
								{
									"begin": 8448,
									"end": 8504,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8527,
									"end": 8534,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 8558,
									"end": 8559,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "tag",
									"source": 12,
									"value": "243"
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8568,
									"end": 8574,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8565,
									"end": 8566,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8562,
									"end": 8575,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "245"
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8644,
									"end": 8650,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8638,
									"end": 8651,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8671,
									"end": 8734,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "246"
								},
								{
									"begin": 8730,
									"end": 8733,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8715,
									"end": 8728,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8671,
									"end": 8734,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 8671,
									"end": 8734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8671,
									"end": 8734,
									"name": "tag",
									"source": 12,
									"value": "246"
								},
								{
									"begin": 8671,
									"end": 8734,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8664,
									"end": 8734,
									"name": "SWAP8",
									"source": 12
								},
								{
									"begin": 8664,
									"end": 8734,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8757,
									"end": 8817,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "247"
								},
								{
									"begin": 8810,
									"end": 8816,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8757,
									"end": 8817,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 8757,
									"end": 8817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8757,
									"end": 8817,
									"name": "tag",
									"source": 12,
									"value": "247"
								},
								{
									"begin": 8757,
									"end": 8817,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8747,
									"end": 8817,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8747,
									"end": 8817,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8603,
									"end": 8827,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8590,
									"end": 8591,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8587,
									"end": 8588,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8583,
									"end": 8592,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8578,
									"end": 8592,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8578,
									"end": 8592,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "243"
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "tag",
									"source": 12,
									"value": "245"
								},
								{
									"begin": 8543,
									"end": 8827,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8547,
									"end": 8561,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8843,
									"end": 8846,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8836,
									"end": 8846,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 8836,
									"end": 8846,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8852,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8852,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8852,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8852,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8852,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8852,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8852,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8120,
									"end": 8852,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9079,
									"end": 9083,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9117,
									"end": 9119,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 9106,
									"end": 9115,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9102,
									"end": 9120,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9094,
									"end": 9120,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9094,
									"end": 9120,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9166,
									"end": 9175,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9160,
									"end": 9164,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9156,
									"end": 9176,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 9152,
									"end": 9153,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9141,
									"end": 9150,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9137,
									"end": 9154,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9130,
									"end": 9177,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9194,
									"end": 9302,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "249"
								},
								{
									"begin": 9297,
									"end": 9301,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9288,
									"end": 9294,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 9194,
									"end": 9302,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 9194,
									"end": 9302,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9194,
									"end": 9302,
									"name": "tag",
									"source": 12,
									"value": "249"
								},
								{
									"begin": 9194,
									"end": 9302,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9186,
									"end": 9302,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9186,
									"end": 9302,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9349,
									"end": 9358,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9343,
									"end": 9347,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9339,
									"end": 9359,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 9334,
									"end": 9336,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9323,
									"end": 9332,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9319,
									"end": 9337,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9312,
									"end": 9360,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9377,
									"end": 9485,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "250"
								},
								{
									"begin": 9480,
									"end": 9484,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9471,
									"end": 9477,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9377,
									"end": 9485,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 9377,
									"end": 9485,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9377,
									"end": 9485,
									"name": "tag",
									"source": 12,
									"value": "250"
								},
								{
									"begin": 9377,
									"end": 9485,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9369,
									"end": 9485,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9369,
									"end": 9485,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9492,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9498,
									"end": 9596,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 9498,
									"end": 9596,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9549,
									"end": 9555,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9583,
									"end": 9588,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9577,
									"end": 9589,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9567,
									"end": 9589,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9567,
									"end": 9589,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9498,
									"end": 9596,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9498,
									"end": 9596,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9498,
									"end": 9596,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9498,
									"end": 9596,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9770,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 9602,
									"end": 9770,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9685,
									"end": 9696,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9719,
									"end": 9725,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9714,
									"end": 9717,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9707,
									"end": 9726,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9759,
									"end": 9763,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9754,
									"end": 9757,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9750,
									"end": 9764,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9735,
									"end": 9764,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9735,
									"end": 9764,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9770,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9770,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9770,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9770,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9602,
									"end": 9770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9776,
									"end": 9915,
									"name": "tag",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 9776,
									"end": 9915,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9865,
									"end": 9871,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9860,
									"end": 9863,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9855,
									"end": 9858,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9849,
									"end": 9872,
									"name": "MCOPY",
									"source": 12
								},
								{
									"begin": 9906,
									"end": 9907,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9897,
									"end": 9903,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9892,
									"end": 9895,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9888,
									"end": 9904,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9881,
									"end": 9908,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9776,
									"end": 9915,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9776,
									"end": 9915,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9776,
									"end": 9915,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9776,
									"end": 9915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9921,
									"end": 10023,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 9921,
									"end": 10023,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9962,
									"end": 9968,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10013,
									"end": 10015,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 10009,
									"end": 10016,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 10004,
									"end": 10006,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 9997,
									"end": 10002,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9993,
									"end": 10007,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9989,
									"end": 10017,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 9979,
									"end": 10017,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9979,
									"end": 10017,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9921,
									"end": 10023,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9921,
									"end": 10023,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9921,
									"end": 10023,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9921,
									"end": 10023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10029,
									"end": 10402,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 10029,
									"end": 10402,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10115,
									"end": 10118,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10143,
									"end": 10181,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "256"
								},
								{
									"begin": 10175,
									"end": 10180,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10143,
									"end": 10181,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 10143,
									"end": 10181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10143,
									"end": 10181,
									"name": "tag",
									"source": 12,
									"value": "256"
								},
								{
									"begin": 10143,
									"end": 10181,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10197,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "257"
								},
								{
									"begin": 10260,
									"end": 10266,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10255,
									"end": 10258,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 10197,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 10197,
									"end": 10267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10197,
									"end": 10267,
									"name": "tag",
									"source": 12,
									"value": "257"
								},
								{
									"begin": 10197,
									"end": 10267,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10190,
									"end": 10267,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 10190,
									"end": 10267,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10276,
									"end": 10341,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "258"
								},
								{
									"begin": 10334,
									"end": 10340,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10329,
									"end": 10332,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 10322,
									"end": 10326,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10315,
									"end": 10320,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 10311,
									"end": 10327,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10276,
									"end": 10341,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 10276,
									"end": 10341,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10276,
									"end": 10341,
									"name": "tag",
									"source": 12,
									"value": "258"
								},
								{
									"begin": 10276,
									"end": 10341,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10366,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "259"
								},
								{
									"begin": 10388,
									"end": 10394,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10366,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 10366,
									"end": 10395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10366,
									"end": 10395,
									"name": "tag",
									"source": 12,
									"value": "259"
								},
								{
									"begin": 10366,
									"end": 10395,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10361,
									"end": 10364,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10357,
									"end": 10396,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10350,
									"end": 10396,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10350,
									"end": 10396,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10119,
									"end": 10402,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10029,
									"end": 10402,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 10029,
									"end": 10402,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10029,
									"end": 10402,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10029,
									"end": 10402,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10029,
									"end": 10402,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10408,
									"end": 11159,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 10408,
									"end": 11159,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10631,
									"end": 10635,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10669,
									"end": 10672,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 10658,
									"end": 10667,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10654,
									"end": 10673,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10646,
									"end": 10673,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10646,
									"end": 10673,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10683,
									"end": 10754,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "261"
								},
								{
									"begin": 10751,
									"end": 10752,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10740,
									"end": 10749,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10736,
									"end": 10753,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10727,
									"end": 10733,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 10683,
									"end": 10754,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 10683,
									"end": 10754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10683,
									"end": 10754,
									"name": "tag",
									"source": 12,
									"value": "261"
								},
								{
									"begin": 10683,
									"end": 10754,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10764,
									"end": 10836,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "262"
								},
								{
									"begin": 10832,
									"end": 10834,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10821,
									"end": 10830,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10817,
									"end": 10835,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10808,
									"end": 10814,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 10764,
									"end": 10836,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 10764,
									"end": 10836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10764,
									"end": 10836,
									"name": "tag",
									"source": 12,
									"value": "262"
								},
								{
									"begin": 10764,
									"end": 10836,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10846,
									"end": 10918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "263"
								},
								{
									"begin": 10914,
									"end": 10916,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 10903,
									"end": 10912,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10899,
									"end": 10917,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10890,
									"end": 10896,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 10846,
									"end": 10918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 10846,
									"end": 10918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10846,
									"end": 10918,
									"name": "tag",
									"source": 12,
									"value": "263"
								},
								{
									"begin": 10846,
									"end": 10918,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10928,
									"end": 11000,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "264"
								},
								{
									"begin": 10996,
									"end": 10998,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 10985,
									"end": 10994,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10981,
									"end": 10999,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10972,
									"end": 10978,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 10928,
									"end": 11000,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 10928,
									"end": 11000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10928,
									"end": 11000,
									"name": "tag",
									"source": 12,
									"value": "264"
								},
								{
									"begin": 10928,
									"end": 11000,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11048,
									"end": 11057,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11042,
									"end": 11046,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11038,
									"end": 11058,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 11032,
									"end": 11035,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 11021,
									"end": 11030,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 11017,
									"end": 11036,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 11010,
									"end": 11059,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 11076,
									"end": 11152,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "265"
								},
								{
									"begin": 11147,
									"end": 11151,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11138,
									"end": 11144,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 11076,
									"end": 11152,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 11076,
									"end": 11152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11076,
									"end": 11152,
									"name": "tag",
									"source": 12,
									"value": "265"
								},
								{
									"begin": 11076,
									"end": 11152,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11068,
									"end": 11152,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11068,
									"end": 11152,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10408,
									"end": 11159,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 10408,
									"end": 11159,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 10408,
									"end": 11159,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10408,
									"end": 11159,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10408,
									"end": 11159,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10408,
									"end": 11159,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10408,
									"end": 11159,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10408,
									"end": 11159,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10408,
									"end": 11159,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11246,
									"end": 11363,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 11246,
									"end": 11363,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11355,
									"end": 11356,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11352,
									"end": 11353,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 11345,
									"end": 11357,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 11492,
									"end": 11641,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 11492,
									"end": 11641,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11528,
									"end": 11535,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11568,
									"end": 11634,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11561,
									"end": 11566,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 11557,
									"end": 11635,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 11546,
									"end": 11635,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11546,
									"end": 11635,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11492,
									"end": 11641,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11492,
									"end": 11641,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11492,
									"end": 11641,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11492,
									"end": 11641,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11647,
									"end": 11767,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 11647,
									"end": 11767,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11719,
									"end": 11742,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "271"
								},
								{
									"begin": 11736,
									"end": 11741,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11719,
									"end": 11742,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 11719,
									"end": 11742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11719,
									"end": 11742,
									"name": "tag",
									"source": 12,
									"value": "271"
								},
								{
									"begin": 11719,
									"end": 11742,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11712,
									"end": 11717,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11709,
									"end": 11743,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 11699,
									"end": 11761,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "272"
								},
								{
									"begin": 11699,
									"end": 11761,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 11757,
									"end": 11758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11754,
									"end": 11755,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 11747,
									"end": 11759,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 11699,
									"end": 11761,
									"name": "tag",
									"source": 12,
									"value": "272"
								},
								{
									"begin": 11699,
									"end": 11761,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11647,
									"end": 11767,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11647,
									"end": 11767,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11773,
									"end": 11914,
									"name": "tag",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 11773,
									"end": 11914,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11829,
									"end": 11834,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 11860,
									"end": 11866,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11854,
									"end": 11867,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 11845,
									"end": 11867,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 11845,
									"end": 11867,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11876,
									"end": 11908,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "274"
								},
								{
									"begin": 11902,
									"end": 11907,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 11876,
									"end": 11908,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 11876,
									"end": 11908,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11876,
									"end": 11908,
									"name": "tag",
									"source": 12,
									"value": "274"
								},
								{
									"begin": 11876,
									"end": 11908,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11773,
									"end": 11914,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 11773,
									"end": 11914,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11773,
									"end": 11914,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11773,
									"end": 11914,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11773,
									"end": 11914,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 11920,
									"end": 12269,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 11920,
									"end": 12269,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 11989,
									"end": 11995,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12038,
									"end": 12040,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 12026,
									"end": 12035,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 12017,
									"end": 12024,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 12013,
									"end": 12036,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 12009,
									"end": 12041,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 12006,
									"end": 12125,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 12006,
									"end": 12125,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "276"
								},
								{
									"begin": 12006,
									"end": 12125,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 12044,
									"end": 12123,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "277"
								},
								{
									"begin": 12044,
									"end": 12123,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 12044,
									"end": 12123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12044,
									"end": 12123,
									"name": "tag",
									"source": 12,
									"value": "277"
								},
								{
									"begin": 12044,
									"end": 12123,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12006,
									"end": 12125,
									"name": "tag",
									"source": 12,
									"value": "276"
								},
								{
									"begin": 12006,
									"end": 12125,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12164,
									"end": 12165,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12189,
									"end": 12252,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "278"
								},
								{
									"begin": 12244,
									"end": 12251,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 12235,
									"end": 12241,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 12224,
									"end": 12233,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 12220,
									"end": 12242,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12189,
									"end": 12252,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 12189,
									"end": 12252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12189,
									"end": 12252,
									"name": "tag",
									"source": 12,
									"value": "278"
								},
								{
									"begin": 12189,
									"end": 12252,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12179,
									"end": 12252,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 12179,
									"end": 12252,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12135,
									"end": 12262,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11920,
									"end": 12269,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 11920,
									"end": 12269,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 11920,
									"end": 12269,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11920,
									"end": 12269,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 11920,
									"end": 12269,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12275,
									"end": 13328,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 12275,
									"end": 13328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12598,
									"end": 12602,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12636,
									"end": 12639,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 12625,
									"end": 12634,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 12621,
									"end": 12640,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12613,
									"end": 12640,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 12613,
									"end": 12640,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12650,
									"end": 12721,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "280"
								},
								{
									"begin": 12718,
									"end": 12719,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12707,
									"end": 12716,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 12703,
									"end": 12720,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12694,
									"end": 12700,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 12650,
									"end": 12721,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 12650,
									"end": 12721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12650,
									"end": 12721,
									"name": "tag",
									"source": 12,
									"value": "280"
								},
								{
									"begin": 12650,
									"end": 12721,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12731,
									"end": 12803,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "281"
								},
								{
									"begin": 12799,
									"end": 12801,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 12788,
									"end": 12797,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 12784,
									"end": 12802,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12775,
									"end": 12781,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 12731,
									"end": 12803,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 12731,
									"end": 12803,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12731,
									"end": 12803,
									"name": "tag",
									"source": 12,
									"value": "281"
								},
								{
									"begin": 12731,
									"end": 12803,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12850,
									"end": 12859,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 12844,
									"end": 12848,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 12840,
									"end": 12860,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 12835,
									"end": 12837,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 12824,
									"end": 12833,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 12820,
									"end": 12838,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12813,
									"end": 12861,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 12878,
									"end": 12986,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "282"
								},
								{
									"begin": 12981,
									"end": 12985,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 12972,
									"end": 12978,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 12878,
									"end": 12986,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 12878,
									"end": 12986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12878,
									"end": 12986,
									"name": "tag",
									"source": 12,
									"value": "282"
								},
								{
									"begin": 12878,
									"end": 12986,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12870,
									"end": 12986,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 12870,
									"end": 12986,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13033,
									"end": 13042,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13027,
									"end": 13031,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13023,
									"end": 13043,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 13018,
									"end": 13020,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 13007,
									"end": 13016,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 13003,
									"end": 13021,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 12996,
									"end": 13044,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 13061,
									"end": 13169,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "283"
								},
								{
									"begin": 13164,
									"end": 13168,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13155,
									"end": 13161,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 13061,
									"end": 13169,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 13061,
									"end": 13169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13061,
									"end": 13169,
									"name": "tag",
									"source": 12,
									"value": "283"
								},
								{
									"begin": 13061,
									"end": 13169,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13053,
									"end": 13169,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 13053,
									"end": 13169,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13217,
									"end": 13226,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13211,
									"end": 13215,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13207,
									"end": 13227,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 13201,
									"end": 13204,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 13190,
									"end": 13199,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 13186,
									"end": 13205,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 13179,
									"end": 13228,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 13245,
									"end": 13321,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "284"
								},
								{
									"begin": 13316,
									"end": 13320,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13307,
									"end": 13313,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 13245,
									"end": 13321,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 13245,
									"end": 13321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 13245,
									"end": 13321,
									"name": "tag",
									"source": 12,
									"value": "284"
								},
								{
									"begin": 13245,
									"end": 13321,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13237,
									"end": 13321,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 13237,
									"end": 13321,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12275,
									"end": 13328,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 12275,
									"end": 13328,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 12275,
									"end": 13328,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12275,
									"end": 13328,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12275,
									"end": 13328,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12275,
									"end": 13328,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12275,
									"end": 13328,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12275,
									"end": 13328,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 12275,
									"end": 13328,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 119,
									"end": 492,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 119,
									"end": 492,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 119,
									"end": 492,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 492,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 119,
									"end": 492,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 492,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 492,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 119,
									"end": 492,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 492,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220368dcdf2ee5b5a84ff73fec02e4848000b79263954324fd7c51a47e738f3aca164736f6c63430008190033",
									".code": [
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "4E1273F4"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "4E1273F4"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "F242432A"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "FDD58E"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "E89341C"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "2EB2C2D6"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 119,
											"end": 492,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16213,
											"end": 16236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16582,
											"end": 16590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16573,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16704,
											"end": 16708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16737,
											"end": 16738,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16778,
											"end": 16786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 14464,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15156,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15209,
											"end": 15211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15606,
											"end": 15607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15589,
											"end": 15602,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15589,
											"end": 15607,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 15693,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15880,
											"end": 15893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15871,
											"end": 15877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 15869,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15894,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 15479,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15271,
											"end": 15538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3923,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 3915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3907,
											"end": 3910,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3924,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 3958,
											"end": 3959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3944,
											"end": 3947,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 3960,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4014,
											"end": 4020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4067,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4061,
											"end": 4068,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4058,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4054,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4045,
											"end": 4059,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4069,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4031,
											"end": 4069,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4031,
											"end": 4069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3973,
											"end": 4075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4169,
											"end": 4172,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 4197,
											"end": 4236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4316,
											"end": 4322,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4314,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 4252,
											"end": 4323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4245,
											"end": 4323,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4245,
											"end": 4323,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 4390,
											"end": 4396,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4385,
											"end": 4388,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4371,
											"end": 4376,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 4332,
											"end": 4397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 4422,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4417,
											"end": 4420,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4452,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4173,
											"end": 4458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4081,
											"end": 4458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4577,
											"end": 4581,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4617,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4592,
											"end": 4618,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4592,
											"end": 4618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4654,
											"end": 4674,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4648,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4635,
											"end": 4652,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4628,
											"end": 4675,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4756,
											"end": 4762,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4692,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4684,
											"end": 4770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4684,
											"end": 4770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4464,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 4900,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 4783,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4882,
											"end": 4894,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 5086,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 4906,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4954,
											"end": 5031,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 5032,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5055,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 5048,
											"end": 5049,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5041,
											"end": 5056,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5075,
											"end": 5079,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5080,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5092,
											"end": 5373,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 5092,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5175,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 5197,
											"end": 5201,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5175,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5175,
											"end": 5202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5175,
											"end": 5202,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 5175,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5163,
											"end": 5203,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5305,
											"end": 5311,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5293,
											"end": 5303,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5290,
											"end": 5312,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5257,
											"end": 5267,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5254,
											"end": 5288,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5248,
											"end": 5336,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5248,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 5248,
											"end": 5336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 5316,
											"end": 5334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5248,
											"end": 5336,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 5248,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5356,
											"end": 5366,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5352,
											"end": 5354,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5345,
											"end": 5367,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5092,
											"end": 5373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5092,
											"end": 5373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5092,
											"end": 5373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5379,
											"end": 5508,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 5379,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5413,
											"end": 5419,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 5440,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 5440,
											"end": 5460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5440,
											"end": 5460,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 5440,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5469,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 5497,
											"end": 5501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5495,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5469,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 5469,
											"end": 5502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5469,
											"end": 5502,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 5469,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5379,
											"end": 5508,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5379,
											"end": 5508,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5379,
											"end": 5508,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5379,
											"end": 5508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 5825,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 5514,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5673,
											"end": 5679,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 5700,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5667,
											"end": 5723,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5667,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 5667,
											"end": 5723,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 5703,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5667,
											"end": 5723,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 5667,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5753,
											"end": 5757,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5741,
											"end": 5758,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5733,
											"end": 5758,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5733,
											"end": 5758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5807,
											"end": 5811,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5795,
											"end": 5818,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5795,
											"end": 5818,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 5825,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 5825,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 5825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 5825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5831,
											"end": 5948,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 5831,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 5941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5937,
											"end": 5938,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5930,
											"end": 5942,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6067,
											"end": 6072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 6108,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 6165,
											"end": 6171,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6108,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 6108,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6108,
											"end": 6172,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 6108,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6092,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 6092,
											"end": 6173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6092,
											"end": 6173,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 6092,
											"end": 6173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6083,
											"end": 6173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6083,
											"end": 6173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6193,
											"end": 6198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6222,
											"end": 6228,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6220,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6208,
											"end": 6229,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6245,
											"end": 6261,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6238,
											"end": 6261,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6238,
											"end": 6261,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6309,
											"end": 6313,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6301,
											"end": 6307,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6297,
											"end": 6314,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6289,
											"end": 6295,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6285,
											"end": 6315,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6338,
											"end": 6341,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6330,
											"end": 6336,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6327,
											"end": 6342,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6357,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 6357,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 6357,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6357,
											"end": 6436,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 6357,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 6324,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6472,
											"end": 6478,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6489,
											"end": 6495,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6487,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6481,
											"end": 6496,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6564,
											"end": 6567,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6593,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 6626,
											"end": 6629,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6614,
											"end": 6624,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6593,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 6593,
											"end": 6630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6593,
											"end": 6630,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 6593,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6588,
											"end": 6591,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6581,
											"end": 6631,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6664,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6655,
											"end": 6658,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6651,
											"end": 6665,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6644,
											"end": 6665,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6644,
											"end": 6665,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6531,
											"end": 6675,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6515,
											"end": 6519,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6510,
											"end": 6513,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 6455,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6073,
											"end": 6681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6073,
											"end": 6681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5971,
											"end": 6681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6704,
											"end": 7074,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 6704,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6775,
											"end": 6780,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6827,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6809,
											"end": 6815,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6822,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6801,
											"end": 6828,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6791,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6791,
											"end": 6913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6832,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6832,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 6832,
											"end": 6911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6832,
											"end": 6911,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6832,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6791,
											"end": 6913,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6791,
											"end": 6913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6949,
											"end": 6955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6936,
											"end": 6956,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6974,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 7064,
											"end": 7067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7049,
											"end": 7053,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7041,
											"end": 7047,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7037,
											"end": 7054,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6974,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 6974,
											"end": 7068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6974,
											"end": 7068,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 6974,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6965,
											"end": 7068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6965,
											"end": 7068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6781,
											"end": 7074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6704,
											"end": 7074,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6704,
											"end": 7074,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6704,
											"end": 7074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6704,
											"end": 7074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6704,
											"end": 7074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7080,
											"end": 7197,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 7080,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7189,
											"end": 7190,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7186,
											"end": 7187,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7510,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 7203,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7264,
											"end": 7268,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7352,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7343,
											"end": 7373,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7340,
											"end": 7396,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7340,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 7340,
											"end": 7396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 7376,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7340,
											"end": 7396,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 7340,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7414,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 7436,
											"end": 7442,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7414,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 7414,
											"end": 7443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7414,
											"end": 7443,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 7414,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7406,
											"end": 7443,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7406,
											"end": 7443,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7498,
											"end": 7502,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7492,
											"end": 7496,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7488,
											"end": 7503,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7510,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7510,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7510,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 7664,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7516,
											"end": 7664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7614,
											"end": 7620,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7609,
											"end": 7612,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7604,
											"end": 7607,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7621,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 7655,
											"end": 7656,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7652,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7644,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7653,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7630,
											"end": 7657,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 7664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 7664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 7664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 7664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 7752,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7788,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 7829,
											"end": 7835,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7788,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 7788,
											"end": 7836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7788,
											"end": 7836,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 7788,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7772,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 7772,
											"end": 7837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7772,
											"end": 7837,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7772,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7763,
											"end": 7837,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7763,
											"end": 7837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7860,
											"end": 7866,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7853,
											"end": 7858,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7846,
											"end": 7867,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7898,
											"end": 7902,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7891,
											"end": 7896,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7887,
											"end": 7903,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7936,
											"end": 7939,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7925,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7915,
											"end": 7940,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7912,
											"end": 8024,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7912,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 7912,
											"end": 8024,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7943,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7943,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 7943,
											"end": 8022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7943,
											"end": 8022,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7943,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7912,
											"end": 8024,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 7912,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8033,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 8080,
											"end": 8086,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8075,
											"end": 8078,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8033,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 8033,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8033,
											"end": 8087,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 8033,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7753,
											"end": 8093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7670,
											"end": 8093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7670,
											"end": 8093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8112,
											"end": 8450,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 8112,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8167,
											"end": 8172,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8216,
											"end": 8219,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8209,
											"end": 8213,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8197,
											"end": 8214,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8220,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8183,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 8183,
											"end": 8305,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8224,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8224,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 8224,
											"end": 8303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8224,
											"end": 8303,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8224,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8183,
											"end": 8305,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 8183,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8328,
											"end": 8348,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8366,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 8440,
											"end": 8443,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8432,
											"end": 8438,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8425,
											"end": 8429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8417,
											"end": 8423,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8366,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 8366,
											"end": 8444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8366,
											"end": 8444,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 8366,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8357,
											"end": 8444,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8357,
											"end": 8444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8173,
											"end": 8450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8112,
											"end": 8450,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8112,
											"end": 8450,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8112,
											"end": 8450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8112,
											"end": 8450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8112,
											"end": 8450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8616,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8618,
											"end": 8624,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8626,
											"end": 8632,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8640,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8648,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 8694,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 8679,
											"end": 8688,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8670,
											"end": 8677,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8666,
											"end": 8689,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8695,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8659,
											"end": 8779,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8659,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8659,
											"end": 8779,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 8698,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 8698,
											"end": 8777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 8777,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 8698,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8659,
											"end": 8779,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8659,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8818,
											"end": 8819,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8843,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 8888,
											"end": 8895,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8868,
											"end": 8877,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 8864,
											"end": 8886,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8843,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 8843,
											"end": 8896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8843,
											"end": 8896,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 8843,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8833,
											"end": 8896,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 8833,
											"end": 8896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8789,
											"end": 8906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 8947,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8971,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 9016,
											"end": 9023,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9007,
											"end": 9013,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9005,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9014,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8971,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 8971,
											"end": 9024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8971,
											"end": 9024,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 8971,
											"end": 9024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 9024,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 9024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8916,
											"end": 9034,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9101,
											"end": 9103,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9099,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9086,
											"end": 9104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9105,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9132,
											"end": 9150,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9124,
											"end": 9130,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9121,
											"end": 9151,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9235,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 9118,
											"end": 9235,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9154,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 9154,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 9154,
											"end": 9233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9154,
											"end": 9233,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 9154,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9235,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 9118,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9259,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 9329,
											"end": 9336,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9320,
											"end": 9326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9309,
											"end": 9318,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9305,
											"end": 9327,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9259,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 9259,
											"end": 9337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9259,
											"end": 9337,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 9259,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9337,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9044,
											"end": 9347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9416,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9403,
											"end": 9412,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9418,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9437,
											"end": 9443,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9434,
											"end": 9464,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9431,
											"end": 9548,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9431,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 9431,
											"end": 9548,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9467,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 9467,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 9467,
											"end": 9546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9467,
											"end": 9546,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 9467,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9431,
											"end": 9548,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 9431,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9572,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 9642,
											"end": 9649,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9633,
											"end": 9639,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9622,
											"end": 9631,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9640,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9572,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 9572,
											"end": 9650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9572,
											"end": 9650,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 9572,
											"end": 9650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9650,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9562,
											"end": 9650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9357,
											"end": 9660,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9727,
											"end": 9730,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9716,
											"end": 9725,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9712,
											"end": 9731,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9699,
											"end": 9732,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9759,
											"end": 9777,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9751,
											"end": 9757,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9748,
											"end": 9778,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9745,
											"end": 9862,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9745,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 9745,
											"end": 9862,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9781,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 9781,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 9781,
											"end": 9860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9781,
											"end": 9860,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 9781,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9745,
											"end": 9862,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 9745,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9940,
											"end": 9947,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9931,
											"end": 9937,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9920,
											"end": 9929,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 9938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 9886,
											"end": 9948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9886,
											"end": 9948,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9886,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9948,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9670,
											"end": 9958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 9965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8456,
											"end": 9965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 10282,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 9971,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10048,
											"end": 10052,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10156,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10130,
											"end": 10136,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10127,
											"end": 10157,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10124,
											"end": 10180,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10124,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 10124,
											"end": 10180,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10160,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 10160,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 10160,
											"end": 10178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10160,
											"end": 10178,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 10160,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10124,
											"end": 10180,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 10124,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10210,
											"end": 10214,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10198,
											"end": 10215,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10190,
											"end": 10215,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10190,
											"end": 10215,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10274,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10264,
											"end": 10268,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10260,
											"end": 10275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 10282,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 10282,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 10282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10401,
											"end": 10406,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10426,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 10442,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 10499,
											"end": 10505,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10442,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 10442,
											"end": 10506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10442,
											"end": 10506,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 10442,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10426,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 10426,
											"end": 10507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10426,
											"end": 10507,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 10426,
											"end": 10507,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10507,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10507,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10527,
											"end": 10532,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10556,
											"end": 10562,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10542,
											"end": 10563,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10583,
											"end": 10588,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10579,
											"end": 10595,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10572,
											"end": 10595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10572,
											"end": 10595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10643,
											"end": 10647,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10635,
											"end": 10641,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10631,
											"end": 10648,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10623,
											"end": 10629,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10619,
											"end": 10649,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10672,
											"end": 10675,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10664,
											"end": 10670,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10661,
											"end": 10676,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10658,
											"end": 10780,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10658,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 10658,
											"end": 10780,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10691,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 10691,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 10691,
											"end": 10770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10691,
											"end": 10770,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 10691,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10658,
											"end": 10780,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 10658,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10806,
											"end": 10812,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10823,
											"end": 10829,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10818,
											"end": 10821,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10815,
											"end": 10830,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10898,
											"end": 10901,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10927,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 10960,
											"end": 10963,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10948,
											"end": 10958,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10927,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 10927,
											"end": 10964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10927,
											"end": 10964,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 10927,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10922,
											"end": 10925,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10915,
											"end": 10965,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10994,
											"end": 10998,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10989,
											"end": 10992,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10985,
											"end": 10999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10978,
											"end": 10999,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10978,
											"end": 10999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10865,
											"end": 11009,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10844,
											"end": 10847,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10840,
											"end": 10854,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10833,
											"end": 10854,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10833,
											"end": 10854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 10789,
											"end": 11009,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10793,
											"end": 10814,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10407,
											"end": 11015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10407,
											"end": 11015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10305,
											"end": 11015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10305,
											"end": 11015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11408,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 11038,
											"end": 11408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11109,
											"end": 11114,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11158,
											"end": 11161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11155,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 11143,
											"end": 11149,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11139,
											"end": 11156,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11135,
											"end": 11162,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11125,
											"end": 11247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 11125,
											"end": 11247,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11166,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 11166,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 11166,
											"end": 11245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11166,
											"end": 11245,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 11166,
											"end": 11245,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11125,
											"end": 11247,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 11125,
											"end": 11247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11283,
											"end": 11289,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11270,
											"end": 11290,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 11308,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 11398,
											"end": 11401,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11390,
											"end": 11396,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11383,
											"end": 11387,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11375,
											"end": 11381,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11371,
											"end": 11388,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11308,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 11308,
											"end": 11402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11308,
											"end": 11402,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 11308,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11299,
											"end": 11402,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11299,
											"end": 11402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11115,
											"end": 11408,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11408,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11408,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11408,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11408,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11532,
											"end": 11538,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11540,
											"end": 11546,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11589,
											"end": 11591,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11577,
											"end": 11586,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11568,
											"end": 11575,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11564,
											"end": 11587,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11592,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11595,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 11595,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 11595,
											"end": 11674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11595,
											"end": 11674,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 11595,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 11557,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11743,
											"end": 11744,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11732,
											"end": 11741,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11728,
											"end": 11745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11715,
											"end": 11746,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 11773,
											"end": 11791,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11765,
											"end": 11771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11762,
											"end": 11792,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11795,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 11795,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 11795,
											"end": 11874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11795,
											"end": 11874,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 11795,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 11759,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11900,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 11970,
											"end": 11977,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11961,
											"end": 11967,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11950,
											"end": 11959,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11946,
											"end": 11968,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11900,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 11900,
											"end": 11978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11900,
											"end": 11978,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 11900,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11890,
											"end": 11978,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11890,
											"end": 11978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11686,
											"end": 11988,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12055,
											"end": 12057,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12044,
											"end": 12053,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12040,
											"end": 12058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12027,
											"end": 12059,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12078,
											"end": 12084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12075,
											"end": 12105,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12072,
											"end": 12189,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12072,
											"end": 12189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 12072,
											"end": 12189,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12108,
											"end": 12187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 12108,
											"end": 12187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 12108,
											"end": 12187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12108,
											"end": 12187,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 12108,
											"end": 12187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12072,
											"end": 12189,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 12072,
											"end": 12189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12213,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 12283,
											"end": 12290,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12274,
											"end": 12280,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12263,
											"end": 12272,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12259,
											"end": 12281,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12213,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 12213,
											"end": 12291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12213,
											"end": 12291,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 12213,
											"end": 12291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12203,
											"end": 12291,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12203,
											"end": 12291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11998,
											"end": 12301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11414,
											"end": 12308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11414,
											"end": 12308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12314,
											"end": 12428,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 12314,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12381,
											"end": 12387,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12409,
											"end": 12421,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12314,
											"end": 12428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12314,
											"end": 12428,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12314,
											"end": 12428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12314,
											"end": 12428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12434,
											"end": 12618,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 12434,
											"end": 12618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12533,
											"end": 12544,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12567,
											"end": 12573,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12562,
											"end": 12565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12555,
											"end": 12574,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12607,
											"end": 12611,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12602,
											"end": 12605,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12598,
											"end": 12612,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12612,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12612,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12434,
											"end": 12618,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12434,
											"end": 12618,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12434,
											"end": 12618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12434,
											"end": 12618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12434,
											"end": 12618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12624,
											"end": 12756,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 12624,
											"end": 12756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12691,
											"end": 12695,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12714,
											"end": 12717,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 12717,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 12717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12744,
											"end": 12748,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12739,
											"end": 12742,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12735,
											"end": 12749,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12727,
											"end": 12749,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12727,
											"end": 12749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12624,
											"end": 12756,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12624,
											"end": 12756,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12624,
											"end": 12756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12624,
											"end": 12756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12762,
											"end": 12870,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 12762,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 12857,
											"end": 12862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 12839,
											"end": 12863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12863,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 12839,
											"end": 12863,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12834,
											"end": 12837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12827,
											"end": 12864,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12762,
											"end": 12870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12762,
											"end": 12870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12762,
											"end": 12870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12876,
											"end": 13055,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 12876,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12945,
											"end": 12955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12966,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 13008,
											"end": 13011,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13000,
											"end": 13006,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12966,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 12966,
											"end": 13012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12966,
											"end": 13012,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 12966,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13044,
											"end": 13048,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13039,
											"end": 13042,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13035,
											"end": 13049,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13021,
											"end": 13049,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13021,
											"end": 13049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12876,
											"end": 13055,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12876,
											"end": 13055,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12876,
											"end": 13055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12876,
											"end": 13055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12876,
											"end": 13055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13061,
											"end": 13174,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 13061,
											"end": 13174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13131,
											"end": 13135,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13163,
											"end": 13167,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13158,
											"end": 13161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13154,
											"end": 13168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13146,
											"end": 13168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13146,
											"end": 13168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13061,
											"end": 13174,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13061,
											"end": 13174,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13061,
											"end": 13174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13061,
											"end": 13174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13210,
											"end": 13942,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 13210,
											"end": 13942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13329,
											"end": 13332,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13358,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 13406,
											"end": 13411,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13358,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 13358,
											"end": 13412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13358,
											"end": 13412,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 13358,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13428,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 13507,
											"end": 13513,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13502,
											"end": 13505,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13428,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 13428,
											"end": 13514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13428,
											"end": 13514,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 13428,
											"end": 13514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13421,
											"end": 13514,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13421,
											"end": 13514,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13538,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 13588,
											"end": 13593,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13538,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 13538,
											"end": 13594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13538,
											"end": 13594,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 13538,
											"end": 13594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13617,
											"end": 13624,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13648,
											"end": 13649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13658,
											"end": 13664,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13655,
											"end": 13656,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13652,
											"end": 13665,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13734,
											"end": 13740,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13728,
											"end": 13741,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13761,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 13820,
											"end": 13823,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13805,
											"end": 13818,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13761,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 13761,
											"end": 13824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13761,
											"end": 13824,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 13761,
											"end": 13824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13754,
											"end": 13824,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 13754,
											"end": 13824,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13847,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 13900,
											"end": 13906,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13847,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 13847,
											"end": 13907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13847,
											"end": 13907,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 13847,
											"end": 13907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13837,
											"end": 13907,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13837,
											"end": 13907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13693,
											"end": 13917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13680,
											"end": 13681,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13677,
											"end": 13678,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13673,
											"end": 13682,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13668,
											"end": 13682,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13668,
											"end": 13682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 13633,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13637,
											"end": 13651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13933,
											"end": 13936,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13926,
											"end": 13936,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13926,
											"end": 13936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13210,
											"end": 13942,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13210,
											"end": 13942,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13210,
											"end": 13942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13210,
											"end": 13942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13210,
											"end": 13942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13948,
											"end": 14321,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 13948,
											"end": 14321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14091,
											"end": 14095,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14131,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14118,
											"end": 14127,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14114,
											"end": 14132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14106,
											"end": 14132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14106,
											"end": 14132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14178,
											"end": 14187,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14172,
											"end": 14176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14168,
											"end": 14188,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14164,
											"end": 14165,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14153,
											"end": 14162,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14149,
											"end": 14166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14142,
											"end": 14189,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14206,
											"end": 14314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 14309,
											"end": 14313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14300,
											"end": 14306,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14206,
											"end": 14314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 14206,
											"end": 14314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14206,
											"end": 14314,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 14206,
											"end": 14314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14198,
											"end": 14314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14198,
											"end": 14314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13948,
											"end": 14321,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13948,
											"end": 14321,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13948,
											"end": 14321,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13948,
											"end": 14321,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13948,
											"end": 14321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14327,
											"end": 14443,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 14327,
											"end": 14443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14397,
											"end": 14418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 14412,
											"end": 14417,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14397,
											"end": 14418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 14397,
											"end": 14418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14397,
											"end": 14418,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 14397,
											"end": 14418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14390,
											"end": 14395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14387,
											"end": 14419,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14377,
											"end": 14437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 14377,
											"end": 14437,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14433,
											"end": 14434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14430,
											"end": 14431,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14423,
											"end": 14435,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14377,
											"end": 14437,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 14377,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14327,
											"end": 14443,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14327,
											"end": 14443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14449,
											"end": 14582,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 14449,
											"end": 14582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14492,
											"end": 14497,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14530,
											"end": 14536,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14517,
											"end": 14537,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 14508,
											"end": 14537,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14508,
											"end": 14537,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14546,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 14570,
											"end": 14575,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14546,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 14546,
											"end": 14576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14546,
											"end": 14576,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 14546,
											"end": 14576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14449,
											"end": 14582,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14449,
											"end": 14582,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14449,
											"end": 14582,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14449,
											"end": 14582,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14449,
											"end": 14582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14588,
											"end": 15056,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 14588,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14653,
											"end": 14659,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14661,
											"end": 14667,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 14712,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14698,
											"end": 14707,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14689,
											"end": 14696,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14685,
											"end": 14708,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14681,
											"end": 14713,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 14678,
											"end": 14797,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14678,
											"end": 14797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 14678,
											"end": 14797,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14716,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 14716,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 14716,
											"end": 14795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14716,
											"end": 14795,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 14716,
											"end": 14795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14678,
											"end": 14797,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 14678,
											"end": 14797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14836,
											"end": 14837,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 14906,
											"end": 14913,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14897,
											"end": 14903,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14886,
											"end": 14895,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14882,
											"end": 14904,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 14861,
											"end": 14914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14851,
											"end": 14914,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14851,
											"end": 14914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14807,
											"end": 14924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14963,
											"end": 14965,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14989,
											"end": 15039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 15031,
											"end": 15038,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15022,
											"end": 15028,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15011,
											"end": 15020,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15007,
											"end": 15029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14989,
											"end": 15039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 14989,
											"end": 15039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14989,
											"end": 15039,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 14989,
											"end": 15039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14979,
											"end": 15039,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14979,
											"end": 15039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14934,
											"end": 15049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14588,
											"end": 15056,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14588,
											"end": 15056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14588,
											"end": 15056,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14588,
											"end": 15056,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14588,
											"end": 15056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14588,
											"end": 15056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15062,
											"end": 15536,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 15062,
											"end": 15536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15130,
											"end": 15136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15138,
											"end": 15144,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15187,
											"end": 15189,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15175,
											"end": 15184,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15166,
											"end": 15173,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15162,
											"end": 15185,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15158,
											"end": 15190,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 15155,
											"end": 15274,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15155,
											"end": 15274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 15155,
											"end": 15274,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15193,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 15193,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 15193,
											"end": 15272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15193,
											"end": 15272,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 15193,
											"end": 15272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15155,
											"end": 15274,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 15155,
											"end": 15274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15313,
											"end": 15314,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15338,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 15383,
											"end": 15390,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15374,
											"end": 15380,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15363,
											"end": 15372,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15359,
											"end": 15381,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15338,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 15338,
											"end": 15391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15338,
											"end": 15391,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 15338,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15328,
											"end": 15391,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15328,
											"end": 15391,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15284,
											"end": 15401,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15440,
											"end": 15442,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15466,
											"end": 15519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 15511,
											"end": 15518,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15502,
											"end": 15508,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15491,
											"end": 15500,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15487,
											"end": 15509,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15466,
											"end": 15519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 15466,
											"end": 15519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15466,
											"end": 15519,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 15466,
											"end": 15519,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15456,
											"end": 15519,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15456,
											"end": 15519,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15411,
											"end": 15529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15062,
											"end": 15536,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15062,
											"end": 15536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15062,
											"end": 15536,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15062,
											"end": 15536,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15062,
											"end": 15536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15062,
											"end": 15536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 16631,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 15542,
											"end": 16631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15646,
											"end": 15652,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15662,
											"end": 15668,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15670,
											"end": 15676,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15678,
											"end": 15684,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15727,
											"end": 15730,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 15715,
											"end": 15724,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15706,
											"end": 15713,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 15702,
											"end": 15725,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15698,
											"end": 15731,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 15695,
											"end": 15815,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15695,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 15695,
											"end": 15815,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 15734,
											"end": 15813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 15734,
											"end": 15813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15813,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 15734,
											"end": 15813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15695,
											"end": 15815,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 15695,
											"end": 15815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15854,
											"end": 15855,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15879,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 15924,
											"end": 15931,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 15915,
											"end": 15921,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15904,
											"end": 15913,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 15900,
											"end": 15922,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15879,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 15879,
											"end": 15932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15879,
											"end": 15932,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 15879,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15869,
											"end": 15932,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15869,
											"end": 15932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15825,
											"end": 15942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15981,
											"end": 15983,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16007,
											"end": 16060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 16052,
											"end": 16059,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16043,
											"end": 16049,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16032,
											"end": 16041,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 16028,
											"end": 16050,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16007,
											"end": 16060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 16007,
											"end": 16060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16007,
											"end": 16060,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 16007,
											"end": 16060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15997,
											"end": 16060,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15997,
											"end": 16060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15952,
											"end": 16070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16109,
											"end": 16111,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16135,
											"end": 16188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 16180,
											"end": 16187,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16171,
											"end": 16177,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16160,
											"end": 16169,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16135,
											"end": 16188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 16135,
											"end": 16188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16135,
											"end": 16188,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 16135,
											"end": 16188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16125,
											"end": 16188,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16125,
											"end": 16188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16080,
											"end": 16198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16237,
											"end": 16239,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16263,
											"end": 16316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 16308,
											"end": 16315,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16305,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16288,
											"end": 16297,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 16284,
											"end": 16306,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16263,
											"end": 16316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 16263,
											"end": 16316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16263,
											"end": 16316,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 16263,
											"end": 16316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16253,
											"end": 16316,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16253,
											"end": 16316,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16208,
											"end": 16326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16393,
											"end": 16396,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 16382,
											"end": 16391,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16378,
											"end": 16397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16365,
											"end": 16398,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 16425,
											"end": 16443,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16417,
											"end": 16423,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16414,
											"end": 16444,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16411,
											"end": 16528,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16411,
											"end": 16528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 16411,
											"end": 16528,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16447,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 16447,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 16447,
											"end": 16526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16447,
											"end": 16526,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 16447,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16411,
											"end": 16528,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 16411,
											"end": 16528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16552,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 16606,
											"end": 16613,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16597,
											"end": 16603,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16586,
											"end": 16595,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 16582,
											"end": 16604,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16552,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 16552,
											"end": 16614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16552,
											"end": 16614,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 16552,
											"end": 16614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16542,
											"end": 16614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16542,
											"end": 16614,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16336,
											"end": 16624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 16631,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 16631,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 16631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 16631,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 16631,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 16631,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 16631,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 16631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 16631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16637,
											"end": 16817,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 16637,
											"end": 16817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16685,
											"end": 16762,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16682,
											"end": 16683,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16675,
											"end": 16763,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16782,
											"end": 16786,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 16779,
											"end": 16780,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 16772,
											"end": 16787,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16806,
											"end": 16810,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16803,
											"end": 16804,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16796,
											"end": 16811,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16823,
											"end": 17143,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 16823,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16867,
											"end": 16873,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16904,
											"end": 16905,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 16898,
											"end": 16902,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16894,
											"end": 16906,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 16884,
											"end": 16906,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16884,
											"end": 16906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16951,
											"end": 16952,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 16945,
											"end": 16949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16941,
											"end": 16953,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16972,
											"end": 16990,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16962,
											"end": 17043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 16962,
											"end": 17043,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17028,
											"end": 17032,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 17020,
											"end": 17026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17016,
											"end": 17033,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17006,
											"end": 17033,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17006,
											"end": 17033,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16962,
											"end": 17043,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 16962,
											"end": 17043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17090,
											"end": 17092,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17082,
											"end": 17088,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17079,
											"end": 17093,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 17059,
											"end": 17077,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17056,
											"end": 17094,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17053,
											"end": 17137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 17053,
											"end": 17137,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17109,
											"end": 17127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 17109,
											"end": 17127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 17109,
											"end": 17127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17109,
											"end": 17127,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 17109,
											"end": 17127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17053,
											"end": 17137,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 17053,
											"end": 17137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16874,
											"end": 17143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16823,
											"end": 17143,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16823,
											"end": 17143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16823,
											"end": 17143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16823,
											"end": 17143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17149,
											"end": 17267,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 17149,
											"end": 17267,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17236,
											"end": 17260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 17254,
											"end": 17259,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17236,
											"end": 17260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 17236,
											"end": 17260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17236,
											"end": 17260,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 17236,
											"end": 17260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17231,
											"end": 17234,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17224,
											"end": 17261,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17149,
											"end": 17267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17149,
											"end": 17267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17149,
											"end": 17267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17273,
											"end": 17605,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 17273,
											"end": 17605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17394,
											"end": 17398,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17432,
											"end": 17434,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17421,
											"end": 17430,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17417,
											"end": 17435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17409,
											"end": 17435,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17409,
											"end": 17435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17445,
											"end": 17516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 17513,
											"end": 17514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17502,
											"end": 17511,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17498,
											"end": 17515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17489,
											"end": 17495,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17445,
											"end": 17516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 17445,
											"end": 17516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17445,
											"end": 17516,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 17445,
											"end": 17516,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17526,
											"end": 17598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 17594,
											"end": 17596,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17583,
											"end": 17592,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17579,
											"end": 17597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17570,
											"end": 17576,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17526,
											"end": 17598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 17526,
											"end": 17598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17526,
											"end": 17598,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 17526,
											"end": 17598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17273,
											"end": 17605,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17273,
											"end": 17605,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17273,
											"end": 17605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17273,
											"end": 17605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17273,
											"end": 17605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17273,
											"end": 17605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17611,
											"end": 17943,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 17611,
											"end": 17943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17732,
											"end": 17736,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17770,
											"end": 17772,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17759,
											"end": 17768,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17755,
											"end": 17773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17747,
											"end": 17773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17747,
											"end": 17773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17783,
											"end": 17854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 17851,
											"end": 17852,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17840,
											"end": 17849,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17836,
											"end": 17853,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17827,
											"end": 17833,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17783,
											"end": 17854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 17783,
											"end": 17854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17783,
											"end": 17854,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 17783,
											"end": 17854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17864,
											"end": 17936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 17932,
											"end": 17934,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17921,
											"end": 17930,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17908,
											"end": 17914,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17864,
											"end": 17936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 17864,
											"end": 17936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17864,
											"end": 17936,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 17864,
											"end": 17936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17611,
											"end": 17943,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17611,
											"end": 17943,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17611,
											"end": 17943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17611,
											"end": 17943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17611,
											"end": 17943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17611,
											"end": 17943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17949,
											"end": 18129,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 17949,
											"end": 18129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17997,
											"end": 18074,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17994,
											"end": 17995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17987,
											"end": 18075,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18094,
											"end": 18098,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 18091,
											"end": 18092,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 18084,
											"end": 18099,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18118,
											"end": 18122,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18115,
											"end": 18116,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18108,
											"end": 18123,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18135,
											"end": 18357,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 18135,
											"end": 18357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18228,
											"end": 18232,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18266,
											"end": 18268,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18255,
											"end": 18264,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18251,
											"end": 18269,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18243,
											"end": 18269,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18243,
											"end": 18269,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18279,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 18347,
											"end": 18348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18336,
											"end": 18345,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18332,
											"end": 18349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18323,
											"end": 18329,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18279,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 18279,
											"end": 18350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18279,
											"end": 18350,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 18279,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18135,
											"end": 18357,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18135,
											"end": 18357,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18135,
											"end": 18357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18135,
											"end": 18357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18135,
											"end": 18357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18363,
											"end": 18916,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 18363,
											"end": 18916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18540,
											"end": 18544,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18578,
											"end": 18581,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 18567,
											"end": 18576,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18563,
											"end": 18582,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18555,
											"end": 18582,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18555,
											"end": 18582,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18592,
											"end": 18663,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 18660,
											"end": 18661,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18649,
											"end": 18658,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18645,
											"end": 18662,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18636,
											"end": 18642,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 18592,
											"end": 18663,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 18592,
											"end": 18663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18592,
											"end": 18663,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 18592,
											"end": 18663,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18673,
											"end": 18745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 18741,
											"end": 18743,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18730,
											"end": 18739,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18726,
											"end": 18744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18717,
											"end": 18723,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18673,
											"end": 18745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 18673,
											"end": 18745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18673,
											"end": 18745,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 18673,
											"end": 18745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18755,
											"end": 18827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 18823,
											"end": 18825,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18812,
											"end": 18821,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18808,
											"end": 18826,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18799,
											"end": 18805,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18755,
											"end": 18827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 18755,
											"end": 18827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18755,
											"end": 18827,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 18755,
											"end": 18827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18837,
											"end": 18909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 18905,
											"end": 18907,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18894,
											"end": 18903,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18890,
											"end": 18908,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18881,
											"end": 18887,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18837,
											"end": 18909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 18837,
											"end": 18909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18837,
											"end": 18909,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 18837,
											"end": 18909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18363,
											"end": 18916,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 18363,
											"end": 18916,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 18363,
											"end": 18916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18363,
											"end": 18916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18363,
											"end": 18916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18363,
											"end": 18916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18363,
											"end": 18916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18363,
											"end": 18916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18922,
											"end": 19102,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 18922,
											"end": 19102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18970,
											"end": 19047,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18967,
											"end": 18968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18960,
											"end": 19048,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19071,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 19064,
											"end": 19065,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19057,
											"end": 19072,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19091,
											"end": 19095,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 19088,
											"end": 19089,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19081,
											"end": 19096,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19108,
											"end": 19299,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 19108,
											"end": 19299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19148,
											"end": 19151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19167,
											"end": 19187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 19185,
											"end": 19186,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19167,
											"end": 19187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 19167,
											"end": 19187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19167,
											"end": 19187,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 19167,
											"end": 19187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19162,
											"end": 19187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19162,
											"end": 19187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19201,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 19219,
											"end": 19220,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19201,
											"end": 19221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 19201,
											"end": 19221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19201,
											"end": 19221,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 19201,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19196,
											"end": 19221,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19196,
											"end": 19221,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19244,
											"end": 19245,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19241,
											"end": 19242,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19237,
											"end": 19246,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19230,
											"end": 19246,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19230,
											"end": 19246,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19265,
											"end": 19268,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19262,
											"end": 19263,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19259,
											"end": 19269,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 19256,
											"end": 19292,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19256,
											"end": 19292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 19256,
											"end": 19292,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19272,
											"end": 19290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 19272,
											"end": 19290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 19272,
											"end": 19290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19272,
											"end": 19290,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 19272,
											"end": 19290,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19256,
											"end": 19292,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 19256,
											"end": 19292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19108,
											"end": 19299,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19108,
											"end": 19299,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19108,
											"end": 19299,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19108,
											"end": 19299,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19108,
											"end": 19299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19305,
											"end": 19939,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 19305,
											"end": 19939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19526,
											"end": 19530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19564,
											"end": 19566,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19553,
											"end": 19562,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19549,
											"end": 19567,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19541,
											"end": 19567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19541,
											"end": 19567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19613,
											"end": 19622,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19607,
											"end": 19611,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19603,
											"end": 19623,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19599,
											"end": 19600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19588,
											"end": 19597,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19584,
											"end": 19601,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19577,
											"end": 19624,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19641,
											"end": 19749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 19744,
											"end": 19748,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19735,
											"end": 19741,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19641,
											"end": 19749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 19641,
											"end": 19749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19641,
											"end": 19749,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 19641,
											"end": 19749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19633,
											"end": 19749,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19633,
											"end": 19749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19796,
											"end": 19805,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19790,
											"end": 19794,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19786,
											"end": 19806,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19781,
											"end": 19783,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19770,
											"end": 19779,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19766,
											"end": 19784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19759,
											"end": 19807,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19824,
											"end": 19932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 19927,
											"end": 19931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19918,
											"end": 19924,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19824,
											"end": 19932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 19824,
											"end": 19932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19824,
											"end": 19932,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 19824,
											"end": 19932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19816,
											"end": 19932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19816,
											"end": 19932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19305,
											"end": 19939,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 19305,
											"end": 19939,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19305,
											"end": 19939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19305,
											"end": 19939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19305,
											"end": 19939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19305,
											"end": 19939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19945,
											"end": 20043,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 19945,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19996,
											"end": 20002,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20030,
											"end": 20035,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20024,
											"end": 20036,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20014,
											"end": 20036,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20014,
											"end": 20036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19945,
											"end": 20043,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19945,
											"end": 20043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19945,
											"end": 20043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19945,
											"end": 20043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20049,
											"end": 20217,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 20049,
											"end": 20217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20132,
											"end": 20143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20166,
											"end": 20172,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20161,
											"end": 20164,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20154,
											"end": 20173,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20206,
											"end": 20210,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20201,
											"end": 20204,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20197,
											"end": 20211,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20182,
											"end": 20211,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20182,
											"end": 20211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20049,
											"end": 20217,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20049,
											"end": 20217,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20049,
											"end": 20217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20049,
											"end": 20217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20049,
											"end": 20217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20223,
											"end": 20596,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 20223,
											"end": 20596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20309,
											"end": 20312,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20337,
											"end": 20375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 20369,
											"end": 20374,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20337,
											"end": 20375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 20337,
											"end": 20375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20337,
											"end": 20375,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 20337,
											"end": 20375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20391,
											"end": 20461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 20454,
											"end": 20460,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20449,
											"end": 20452,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20391,
											"end": 20461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 20391,
											"end": 20461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20391,
											"end": 20461,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 20391,
											"end": 20461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20384,
											"end": 20461,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20384,
											"end": 20461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20470,
											"end": 20535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 20528,
											"end": 20534,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20523,
											"end": 20526,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20516,
											"end": 20520,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20509,
											"end": 20514,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20505,
											"end": 20521,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20470,
											"end": 20535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 20470,
											"end": 20535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20470,
											"end": 20535,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 20470,
											"end": 20535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20560,
											"end": 20589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 20582,
											"end": 20588,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20560,
											"end": 20589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 20560,
											"end": 20589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20560,
											"end": 20589,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 20560,
											"end": 20589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20555,
											"end": 20558,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20551,
											"end": 20590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20544,
											"end": 20590,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20544,
											"end": 20590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20313,
											"end": 20596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20223,
											"end": 20596,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20223,
											"end": 20596,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20223,
											"end": 20596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20223,
											"end": 20596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20223,
											"end": 20596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20602,
											"end": 21353,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 20602,
											"end": 21353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20825,
											"end": 20829,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20863,
											"end": 20866,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 20852,
											"end": 20861,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20848,
											"end": 20867,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20840,
											"end": 20867,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20840,
											"end": 20867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20877,
											"end": 20948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 20945,
											"end": 20946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20934,
											"end": 20943,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20930,
											"end": 20947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20921,
											"end": 20927,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 20877,
											"end": 20948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 20877,
											"end": 20948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20877,
											"end": 20948,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 20877,
											"end": 20948,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20958,
											"end": 21030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 21026,
											"end": 21028,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21015,
											"end": 21024,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21011,
											"end": 21029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21002,
											"end": 21008,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 20958,
											"end": 21030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 20958,
											"end": 21030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20958,
											"end": 21030,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 20958,
											"end": 21030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21040,
											"end": 21112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 21108,
											"end": 21110,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21097,
											"end": 21106,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21093,
											"end": 21111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21084,
											"end": 21090,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21040,
											"end": 21112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 21040,
											"end": 21112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21040,
											"end": 21112,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 21040,
											"end": 21112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21122,
											"end": 21194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 21190,
											"end": 21192,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 21179,
											"end": 21188,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21175,
											"end": 21193,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21166,
											"end": 21172,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21122,
											"end": 21194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 21122,
											"end": 21194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21122,
											"end": 21194,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 21122,
											"end": 21194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21242,
											"end": 21251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21236,
											"end": 21240,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21232,
											"end": 21252,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21226,
											"end": 21229,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 21215,
											"end": 21224,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21211,
											"end": 21230,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21204,
											"end": 21253,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21270,
											"end": 21346,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 21341,
											"end": 21345,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21332,
											"end": 21338,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21270,
											"end": 21346,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 21270,
											"end": 21346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21270,
											"end": 21346,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 21270,
											"end": 21346,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21262,
											"end": 21346,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21262,
											"end": 21346,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20602,
											"end": 21353,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 20602,
											"end": 21353,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 20602,
											"end": 21353,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20602,
											"end": 21353,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20602,
											"end": 21353,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20602,
											"end": 21353,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20602,
											"end": 21353,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20602,
											"end": 21353,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20602,
											"end": 21353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21359,
											"end": 21500,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 21359,
											"end": 21500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21415,
											"end": 21420,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21446,
											"end": 21452,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21440,
											"end": 21453,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 21431,
											"end": 21453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21431,
											"end": 21453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21462,
											"end": 21494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 21488,
											"end": 21493,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21462,
											"end": 21494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 21462,
											"end": 21494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21462,
											"end": 21494,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 21462,
											"end": 21494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21359,
											"end": 21500,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21359,
											"end": 21500,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21359,
											"end": 21500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21359,
											"end": 21500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21359,
											"end": 21500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21506,
											"end": 21855,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 21506,
											"end": 21855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21575,
											"end": 21581,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21624,
											"end": 21626,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21612,
											"end": 21621,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21603,
											"end": 21610,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21599,
											"end": 21622,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21595,
											"end": 21627,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 21592,
											"end": 21711,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 21592,
											"end": 21711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 21592,
											"end": 21711,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21630,
											"end": 21709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 21630,
											"end": 21709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 21630,
											"end": 21709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21630,
											"end": 21709,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 21630,
											"end": 21709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21592,
											"end": 21711,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 21592,
											"end": 21711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21750,
											"end": 21751,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21775,
											"end": 21838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 21830,
											"end": 21837,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21821,
											"end": 21827,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21810,
											"end": 21819,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21806,
											"end": 21828,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21775,
											"end": 21838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 21775,
											"end": 21838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21775,
											"end": 21838,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 21775,
											"end": 21838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21765,
											"end": 21838,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21765,
											"end": 21838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21721,
											"end": 21848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21506,
											"end": 21855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21506,
											"end": 21855,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21506,
											"end": 21855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21506,
											"end": 21855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21506,
											"end": 21855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21861,
											"end": 22914,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 21861,
											"end": 22914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22184,
											"end": 22188,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22222,
											"end": 22225,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 22211,
											"end": 22220,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22207,
											"end": 22226,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22199,
											"end": 22226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22199,
											"end": 22226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22236,
											"end": 22307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 22304,
											"end": 22305,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22293,
											"end": 22302,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22289,
											"end": 22306,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22280,
											"end": 22286,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 22236,
											"end": 22307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 22236,
											"end": 22307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22236,
											"end": 22307,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 22236,
											"end": 22307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22317,
											"end": 22389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 22385,
											"end": 22387,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22374,
											"end": 22383,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22370,
											"end": 22388,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22361,
											"end": 22367,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 22317,
											"end": 22389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 22317,
											"end": 22389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22317,
											"end": 22389,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 22317,
											"end": 22389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22436,
											"end": 22445,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22430,
											"end": 22434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22426,
											"end": 22446,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22421,
											"end": 22423,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22410,
											"end": 22419,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22406,
											"end": 22424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22399,
											"end": 22447,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22464,
											"end": 22572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 22567,
											"end": 22571,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22558,
											"end": 22564,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22464,
											"end": 22572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 22464,
											"end": 22572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22464,
											"end": 22572,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 22464,
											"end": 22572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22456,
											"end": 22572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22456,
											"end": 22572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22619,
											"end": 22628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22613,
											"end": 22617,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22609,
											"end": 22629,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22604,
											"end": 22606,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 22593,
											"end": 22602,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22589,
											"end": 22607,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22582,
											"end": 22630,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22647,
											"end": 22755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 22750,
											"end": 22754,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22741,
											"end": 22747,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22647,
											"end": 22755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 22647,
											"end": 22755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22647,
											"end": 22755,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 22647,
											"end": 22755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22639,
											"end": 22755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22639,
											"end": 22755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22803,
											"end": 22812,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22797,
											"end": 22801,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22793,
											"end": 22813,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22787,
											"end": 22790,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 22776,
											"end": 22785,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22772,
											"end": 22791,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22765,
											"end": 22814,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22831,
											"end": 22907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 22902,
											"end": 22906,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22893,
											"end": 22899,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22831,
											"end": 22907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 22831,
											"end": 22907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22831,
											"end": 22907,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 22831,
											"end": 22907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22823,
											"end": 22907,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22823,
											"end": 22907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21861,
											"end": 22914,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 21861,
											"end": 22914,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 21861,
											"end": 22914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21861,
											"end": 22914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21861,
											"end": 22914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21861,
											"end": 22914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21861,
											"end": 22914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21861,
											"end": 22914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21861,
											"end": 22914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								},
								"EAE80A2C7BF2C9D096E554E5E4405CF6AEFA68F606389F34D4CDA8A311083DED": "68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4a4c44536a722f6d657461646174615f626c6f636b636861696e2f6d61696e2f7b69647d2e6a736f6e"
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyCollectibles\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x6ee270ca7af958bf819ad3c736e6f0a0f0a23edcdffa0e8a9a3d1fbeca457388\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3324832aee8fa2a9f1d92f1d84eab1395fc203ab012b7effd45844fd2805a15a\",\"dweb:/ipfs/Qmd2W2mfTVp1Y6eEWX6EaDJg8YcV2tqrgcwEm9qMnBfsQS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "contracts/MyToken.sol:MyCollectibles",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "contracts/MyToken.sol:MyCollectibles",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "contracts/MyToken.sol:MyCollectibles",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1551
						],
						"Context": [
							1581
						],
						"ERC1155": [
							1187
						],
						"ERC165": [
							1715
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1368
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1727
						]
					},
					"id": 1188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1311,
							"src": "135:40:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "143:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1353,
							"src": "176:56:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1352,
										"src": "184:16:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1369,
							"src": "233:73:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1368,
										"src": "241:19:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1582,
							"src": "307:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1581,
										"src": "315:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1716,
							"src": "356:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1727,
										"src": "364:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 148,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1715,
										"src": "373:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1552,
							"src": "426:46:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1551,
										"src": "434:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 137,
							"src": "473:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 136,
										"src": "481:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"756:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1581,
										"src": "756:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"765:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1715,
										"src": "765:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "773:8:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1368,
										"src": "783:19:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 136,
										"src": "804:14:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:1"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1187,
							"linearizedBaseContracts": [
								1187,
								136,
								1368,
								1310,
								1715,
								1727,
								1581
							],
							"name": "ERC1155",
							"nameLocation": "745:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 168,
									"libraryName": {
										"id": 165,
										"name": "Arrays",
										"nameLocations": [
											"831:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1551,
										"src": "831:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:1",
									"typeName": {
										"baseType": {
											"id": 166,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 167,
										"nodeType": "ArrayTypeName",
										"src": "842:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 172,
									"libraryName": {
										"id": 169,
										"name": "Arrays",
										"nameLocations": [
											"863:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1551,
										"src": "863:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:1",
									"typeName": {
										"baseType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 171,
										"nodeType": "ArrayTypeName",
										"src": "874:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "890:76:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 177,
										"keyName": "id",
										"keyNameLocation": "906:2:1",
										"keyType": {
											"id": 173,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 176,
											"keyName": "account",
											"keyNameLocation": "928:7:1",
											"keyType": {
												"id": 174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "973:88:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "989:7:1",
										"keyType": {
											"id": 179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"keyName": "operator",
											"keyNameLocation": "1016:8:1",
											"keyType": {
												"id": 180,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 181,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "1182:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 185,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1283:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1301:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 192,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1293:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 197,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1263:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:1"
									},
									"scope": 1187,
									"src": "1251:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1714,
										1726
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1488:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1517:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 210,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "1537:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 209,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1310",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 214,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1574:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 216,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "1594:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1368_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1368_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 215,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1368",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1666:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 221,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1187_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1714,
															"src": "1642:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 207,
												"id": 226,
												"nodeType": "Return",
												"src": "1498:180:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 202,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1715,
												"src": "1456:6:1"
											},
											{
												"id": 203,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1727,
												"src": "1464:7:1"
											}
										],
										"src": "1447:25:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1407:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 199,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1482:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:1"
									},
									"scope": 1187,
									"src": "1380:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2159:28:1",
										"statements": [
											{
												"expression": {
													"id": 236,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "2176:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 235,
												"id": 237,
												"nodeType": "Return",
												"src": "2169:11:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2097:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2144:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:1"
									},
									"scope": 1187,
									"src": "2084:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2333:46:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 249,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "2350:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 251,
														"indexExpression": {
															"id": 250,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2360:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"id": 252,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "2364:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 254,
												"nodeType": "Return",
												"src": "2343:29:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:1",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2266:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2283:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2324:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:1"
									},
									"scope": 1187,
									"src": "2247:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2678:410:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 269,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2692:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 271,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2711:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "2688:121:1",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "2723:86:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 275,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "2770:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 277,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "2782:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 274,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2744:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "RevertStatement",
															"src": "2737:61:1"
														}
													]
												}
											},
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2819:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 285,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 286,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 291,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2866:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:1"
											},
											{
												"body": {
													"id": 321,
													"nodeType": "Block",
													"src": "2939:112:1",
													"statements": [
														{
															"expression": {
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 306,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "2953:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"id": 307,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "2967:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 312,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3010:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 310,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 260,
																					"src": "2982:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1550,
																				"src": "2982:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 316,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3037:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 314,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 263,
																					"src": "3014:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1537,
																				"src": "3014:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 309,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "2972:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 299,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2913:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 300,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2917:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"initializationExpression": {
													"assignments": [
														296
													],
													"declarations": [
														{
															"constant": false,
															"id": 296,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 322,
															"src": "2898:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 295,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 298,
													"initialValue": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:1",
														"subExpression": {
															"id": 303,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "2936:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:1"
											},
											{
												"expression": {
													"id": 323,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "3068:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 268,
												"id": 324,
												"nodeType": "Return",
												"src": "3061:20:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2569:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2604:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2660:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:1"
									},
									"scope": 1187,
									"src": "2536:552:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "3231:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "3260:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3274:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3284:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 334,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3241:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3183:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3201:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:1"
									},
									"scope": 1187,
									"src": "3156:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1279
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "3463:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 352,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3480:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 354,
														"indexExpression": {
															"id": 353,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "3499:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 356,
													"indexExpression": {
														"id": 355,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3508:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "3473:44:1"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3393:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3410:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3457:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:1"
									},
									"scope": 1187,
									"src": "3367:157:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3704:238:1",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "3714:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "3731:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3757:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 379,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "3765:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 382,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3793:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 383,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "3799:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 381,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "3776:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "IfStatement",
												"src": "3753:129:1",
												"trueBody": {
													"id": 392,
													"nodeType": "Block",
													"src": "3808:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 388,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "3858:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 389,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3866:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 387,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3829:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 391,
															"nodeType": "RevertStatement",
															"src": "3822:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3909:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3915:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3919:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 398,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3923:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 399,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3930:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 394,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "3891:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:1"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3617:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3631:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3643:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3670:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:1"
									},
									"scope": 1187,
									"src": "3591:351:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1309
									],
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4198:245:1",
										"statements": [
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "4208:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 419,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 421,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "4225:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 424,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4251:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 425,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "4259:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 428,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4287:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 429,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "4293:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 427,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4270:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4247:129:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4302:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "4352:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 435,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "4360:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 433,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4323:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4316:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4408:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4414:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4418:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 444,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4423:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4431:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "4385:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4054:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4076:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4096:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4126:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 412,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 413,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4159:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:1"
									},
									"scope": 1187,
									"src": "4014:429:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "5251:1174:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5265:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 465,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "5279:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "IfStatement",
												"src": "5261:117:1",
												"trueBody": {
													"id": 475,
													"nodeType": "Block",
													"src": "5294:84:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 469,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "5341:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 471,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "5353:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 468,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "5315:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 474,
															"nodeType": "RevertStatement",
															"src": "5308:59:1"
														}
													]
												}
											},
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 601,
														"src": "5388:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 477,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 479,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "5407:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:1"
											},
											{
												"body": {
													"id": 562,
													"nodeType": "Block",
													"src": "5471:650:1",
													"statements": [
														{
															"assignments": [
																494
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 494,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5485:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 499,
															"initialValue": {
																"arguments": [
																	{
																		"id": 497,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5521:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 495,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "5498:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "5498:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:1"
														},
														{
															"assignments": [
																501
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 501,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5537:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 500,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 506,
															"initialValue": {
																"arguments": [
																	{
																		"id": 504,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5579:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 502,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "5553:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "5553:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 507,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "5600:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 508,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 545,
															"nodeType": "IfStatement",
															"src": "5596:420:1",
															"trueBody": {
																"id": 544,
																"nodeType": "Block",
																"src": "5620:396:1",
																"statements": [
																	{
																		"assignments": [
																			514
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 514,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 544,
																				"src": "5638:19:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 520,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 515,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 178,
																					"src": "5660:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 517,
																				"indexExpression": {
																					"id": 516,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "5670:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 519,
																			"indexExpression": {
																				"id": 518,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "5674:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 521,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "5701:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 522,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "5715:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 532,
																		"nodeType": "IfStatement",
																		"src": "5697:129:1",
																		"trueBody": {
																			"id": 531,
																			"nodeType": "Block",
																			"src": "5722:104:1",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 525,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 452,
																								"src": "5778:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 526,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 514,
																								"src": "5784:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 527,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 501,
																								"src": "5797:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 528,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5804:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 524,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 101,
																							"src": "5751:26:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 530,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:1"
																				}
																			]
																		}
																	},
																	{
																		"id": 543,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:1",
																		"statements": [
																			{
																				"expression": {
																					"id": 541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 533,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 178,
																								"src": "5942:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 536,
																							"indexExpression": {
																								"id": 534,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5952:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 537,
																						"indexExpression": {
																							"id": 535,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 452,
																							"src": "5956:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 540,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 538,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 514,
																							"src": "5964:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 539,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 501,
																							"src": "5978:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 542,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:1"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 546,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "6034:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 547,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 561,
															"nodeType": "IfStatement",
															"src": "6030:81:1",
															"trueBody": {
																"id": 560,
																"nodeType": "Block",
																"src": "6052:59:1",
																"statements": [
																	{
																		"expression": {
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 552,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 178,
																						"src": "6070:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 555,
																					"indexExpression": {
																						"id": 553,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6080:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 556,
																				"indexExpression": {
																					"id": 554,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 454,
																					"src": "6084:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 557,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "6091:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 559,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5450:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 487,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5454:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"initializationExpression": {
													"assignments": [
														483
													],
													"declarations": [
														{
															"constant": false,
															"id": 483,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 563,
															"src": "5435:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 482,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 485,
													"initialValue": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:1",
														"subExpression": {
															"id": 490,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5468:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 492,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 564,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "6135:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "6343:76:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6376:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6386:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6392:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6396:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 596,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6401:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 591,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "6362:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "6357:51:1"
														}
													]
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "6131:288:1",
												"trueBody": {
													"id": 590,
													"nodeType": "Block",
													"src": "6152:185:1",
													"statements": [
														{
															"assignments": [
																569
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 569,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6166:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 574,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 570,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6179:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "6179:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:1"
														},
														{
															"assignments": [
																576
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 576,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6218:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 575,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 581,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 577,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6234:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "6234:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 583,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6296:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6306:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 585,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6312:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 586,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "6316:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 587,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "6320:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 582,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "6281:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 589,
															"nodeType": "EmitStatement",
															"src": "6276:50:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:1",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5161:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5175:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5187:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 455,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5209:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 458,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 459,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:1"
									},
									"scope": 1187,
									"src": "5144:1281:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "7195:499:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7213:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7219:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "7223:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 622,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "7228:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 618,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "7205:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 625,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "7249:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 626,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"nodeType": "IfStatement",
												"src": "7245:443:1",
												"trueBody": {
													"id": 675,
													"nodeType": "Block",
													"src": "7267:421:1",
													"statements": [
														{
															"assignments": [
																632
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 632,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 675,
																	"src": "7281:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 635,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 633,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "7300:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 636,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "7330:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "7571:107:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 665,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7625:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 666,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7635:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 667,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7641:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 668,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7645:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 669,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7650:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 670,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7658:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 664,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7589:35:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 672,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:1"
																	}
																]
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "7326:352:1",
															"trueBody": {
																"id": 663,
																"nodeType": "Block",
																"src": "7347:218:1",
																"statements": [
																	{
																		"assignments": [
																			641
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 641,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7365:10:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 640,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 646,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 642,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7378:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1537,
																				"src": "7378:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:1"
																	},
																	{
																		"assignments": [
																			648
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 648,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7421:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 647,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 653,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 649,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7437:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1537,
																				"src": "7437:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7514:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7524:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 657,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7530:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 658,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "7534:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 659,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 648,
																					"src": "7538:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 660,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7545:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 654,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "7483:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 662,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:1",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7049:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7071:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7091:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 608,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 609,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7121:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7154:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:1"
									},
									"scope": 1187,
									"src": "7004:690:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "8259:355:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "8273:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 693,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "8269:88:1",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "8291:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 699,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 698,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "8312:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 704,
															"nodeType": "RevertStatement",
															"src": "8305:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 707,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "8370:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 708,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "8366:88:1",
												"trueBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "8390:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 714,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 713,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "8411:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 719,
															"nodeType": "RevertStatement",
															"src": "8404:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													726,
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8464:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 724,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 725,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8486:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 727,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [
														{
															"id": 731,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "8532:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "8536:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "8513:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "8579:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "8585:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "8589:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 739,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "8594:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 740,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "8602:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 735,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8552:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:1"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:1",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8178:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8192:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8204:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8216:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8231:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:1"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:1"
									},
									"scope": 1187,
									"src": "8151:463:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "9194:266:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9208:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 761,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "9204:88:1",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "9226:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 767,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 766,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "9247:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 772,
															"nodeType": "RevertStatement",
															"src": "9240:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 775,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "9305:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 776,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "9301:88:1",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "9325:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 782,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 781,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "9346:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 787,
															"nodeType": "RevertStatement",
															"src": "9339:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "9425:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9431:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "9435:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 794,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "9440:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 795,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "9448:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 790,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "9398:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:1"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9056:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9078:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9098:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 750,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 751,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9128:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 753,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 754,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9161:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:1"
									},
									"scope": 1187,
									"src": "9015:445:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "10338:30:1",
										"statements": [
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 805,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "10348:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 806,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "10355:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:1"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10299:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:1"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:1"
									},
									"scope": 1187,
									"src": "10282:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "10828:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 822,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "10842:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 823,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "10838:88:1",
												"trueBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "10860:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 829,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 828,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "10881:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 834,
															"nodeType": "RevertStatement",
															"src": "10874:41:1"
														}
													]
												}
											},
											{
												"assignments": [
													841,
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10936:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 839,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 840,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10958:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 842,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 843,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [
														{
															"id": 846,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11004:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 847,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "11008:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "10985:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "11063:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11067:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 857,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "11072:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 858,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "11080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 850,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11024:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:1"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:1",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10761:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10773:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10785:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10800:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:1"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:1"
									},
									"scope": 1187,
									"src": "10746:346:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "11630:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "11644:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 877,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "11640:88:1",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "11662:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 883,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 882,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "11683:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 888,
															"nodeType": "RevertStatement",
															"src": "11676:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "11776:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "11780:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 898,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "11785:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 899,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "11793:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 891,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11737:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:1"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11543:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11555:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 866,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 867,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11577:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 869,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 870,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11602:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 872,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:1"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:1"
									},
									"scope": 1187,
									"src": "11523:282:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "12164:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "12178:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 914,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "IfStatement",
												"src": "12174:88:1",
												"trueBody": {
													"id": 926,
													"nodeType": "Block",
													"src": "12198:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 920,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 919,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12219:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 925,
															"nodeType": "RevertStatement",
															"src": "12212:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													932,
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12272:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 930,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 931,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12294:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 933,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 934,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": {
													"arguments": [
														{
															"id": 937,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "12340:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 938,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "12344:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "12321:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 942,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "12387:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 943,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "12405:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 948,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "12410:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 941,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12360:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:1"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:1",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12114:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12128:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12140:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:1"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:1"
									},
									"scope": 1187,
									"src": "12099:329:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "12874:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "12888:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 966,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "12884:88:1",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "12908:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 972,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 971,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12929:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "RevertStatement",
															"src": "12922:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 981,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "13008:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "13026:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 987,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "13031:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 980,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12981:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:1"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12804:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12818:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 957,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 958,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12840:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 960,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 961,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:1"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:1"
									},
									"scope": 1187,
									"src": "12784:265:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "13361:222:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1002,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "13375:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1003,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "13371:94:1",
												"trueBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "13399:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1009,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1008,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "13420:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1014,
															"nodeType": "RevertStatement",
															"src": "13413:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1017,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "13474:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1020,
															"indexExpression": {
																"id": 1018,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "13493:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1021,
														"indexExpression": {
															"id": 1019,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13500:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1022,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "13512:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1026,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "13550:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13557:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "13567:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1025,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "13535:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "EmitStatement",
												"src": "13530:46:1"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13296:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13311:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13329:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:1"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:1"
									},
									"scope": 1187,
									"src": "13268:315:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "13953:782:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1048,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "13967:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1098,
												"nodeType": "IfStatement",
												"src": "13963:766:1",
												"trueBody": {
													"id": 1097,
													"nodeType": "Block",
													"src": "13987:742:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1077,
																		"nodeType": "Block",
																		"src": "14103:206:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1070,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1066,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1064,
																						"src": "14125:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1067,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "14137:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1068,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:1",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1333,
																							"src": "14137:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1069,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1076,
																				"nodeType": "IfStatement",
																				"src": "14121:174:1",
																				"trueBody": {
																					"id": 1075,
																					"nodeType": "Block",
																					"src": "14182:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1072,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14273:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1071,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14250:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1073,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1074,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1078,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1065,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1064,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1078,
																				"src": "14086:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1063,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:1"
																	},
																	"src": "14077:232:1"
																},
																{
																	"block": {
																		"id": 1094,
																		"nodeType": "Block",
																		"src": "14338:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1082,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1080,
																							"src": "14360:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1083,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1084,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1092,
																					"nodeType": "Block",
																					"src": "14515:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14601:86:1",
																								"nodeType": "YulBlock",
																								"src": "14601:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14638:2:1",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14642:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14634:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:1"
																													},
																													"nativeSrc": "14634:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14657:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14651:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:1"
																													},
																													"nativeSrc": "14651:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14627:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:1"
																											},
																											"nativeSrc": "14627:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:1"
																										},
																										"nativeSrc": "14627:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1091,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:1"
																						}
																					]
																				},
																				"id": 1093,
																				"nodeType": "IfStatement",
																				"src": "14356:349:1",
																				"trueBody": {
																					"id": 1090,
																					"nodeType": "Block",
																					"src": "14380:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1087,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14487:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1086,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14464:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1088,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1089,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1095,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1081,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1080,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1095,
																				"src": "14317:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1079,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:1"
																	},
																	"src": "14310:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1057,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "14044:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1058,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "14054:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1059,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "14060:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1060,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "14064:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1061,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "14071:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1054,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "14022:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1053,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "14005:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:1",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1333,
																	"src": "14005:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1096,
															"nodeType": "TryStatement",
															"src": "14001:718:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:1",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13810:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13836:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13858:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13878:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13898:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13921:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:1"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:1"
									},
									"scope": 1187,
									"src": "13761:974:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "15140:824:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1118,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "15154:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1168,
												"nodeType": "IfStatement",
												"src": "15150:808:1",
												"trueBody": {
													"id": 1167,
													"nodeType": "Block",
													"src": "15174:784:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1147,
																		"nodeType": "Block",
																		"src": "15327:211:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1136,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1134,
																						"src": "15349:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1137,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "15361:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1138,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:1",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1351,
																							"src": "15361:39:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1146,
																				"nodeType": "IfStatement",
																				"src": "15345:179:1",
																				"trueBody": {
																					"id": 1145,
																					"nodeType": "Block",
																					"src": "15411:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1142,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15502:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1141,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15479:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1143,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1144,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1148,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1135,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1134,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1148,
																				"src": "15297:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1133,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:1"
																	},
																	"src": "15271:267:1"
																},
																{
																	"block": {
																		"id": 1164,
																		"nodeType": "Block",
																		"src": "15567:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1152,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1150,
																							"src": "15589:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1162,
																					"nodeType": "Block",
																					"src": "15744:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15830:86:1",
																								"nodeType": "YulBlock",
																								"src": "15830:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15867:2:1",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15871:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15863:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:1"
																													},
																													"nativeSrc": "15863:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15886:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15880:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:1"
																													},
																													"nativeSrc": "15880:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15856:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:1"
																											},
																											"nativeSrc": "15856:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:1"
																										},
																										"nativeSrc": "15856:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1161,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:1"
																						}
																					]
																				},
																				"id": 1163,
																				"nodeType": "IfStatement",
																				"src": "15585:349:1",
																				"trueBody": {
																					"id": 1160,
																					"nodeType": "Block",
																					"src": "15609:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1157,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15716:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1156,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15693:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1158,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1159,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1165,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1151,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1150,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1165,
																				"src": "15546:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1149,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:1"
																	},
																	"src": "15539:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "15236:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1128,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "15246:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1129,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "15252:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1130,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "15257:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "15265:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1124,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "15209:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1123,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "15192:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:1",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1351,
																	"src": "15192:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1166,
															"nodeType": "TryStatement",
															"src": "15188:760:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:1",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "14977:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15003:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15045:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15075:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1111,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1112,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15108:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:1"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:1"
									},
									"scope": 1187,
									"src": "14923:1041:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "16238:691:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16300:623:1",
													"nodeType": "YulBlock",
													"src": "16300:623:1",
													"statements": [
														{
															"nativeSrc": "16358:21:1",
															"nodeType": "YulAssignment",
															"src": "16358:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16374:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16368:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:1"
																},
																"nativeSrc": "16368:11:1",
																"nodeType": "YulFunctionCall",
																"src": "16368:11:1"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16358:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16436:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16444:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16429:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:1"
																},
																"nativeSrc": "16429:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16429:17:1"
															},
															"nativeSrc": "16429:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16567:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16575:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16563:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:1"
																		},
																		"nativeSrc": "16563:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:1"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16582:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:1"
																},
																"nativeSrc": "16556:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16556:35:1"
															},
															"nativeSrc": "16556:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:1"
														},
														{
															"nativeSrc": "16682:27:1",
															"nodeType": "YulAssignment",
															"src": "16682:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16696:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16704:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16692:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:1"
																},
																"nativeSrc": "16692:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16692:17:1"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16682:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16729:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16737:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16722:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:1"
																},
																"nativeSrc": "16722:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16722:17:1"
															},
															"nativeSrc": "16722:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16763:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16771:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:1"
																		},
																		"nativeSrc": "16759:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:1"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16778:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16752:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:1"
																},
																"nativeSrc": "16752:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16752:35:1"
															},
															"nativeSrc": "16752:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16889:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16899:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16907:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16895:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:1"
																		},
																		"nativeSrc": "16895:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16882:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:1"
																},
																"nativeSrc": "16882:31:1",
																"nodeType": "YulFunctionCall",
																"src": "16882:31:1"
															},
															"nativeSrc": "16882:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1173,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:1",
														"valueSize": 1
													},
													{
														"declaration": 1175,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:1",
														"valueSize": 1
													}
												],
												"id": 1184,
												"nodeType": "InlineAssembly",
												"src": "16291:632:1"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:1",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16117:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:1"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16188:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1177,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1178,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16213:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1180,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1181,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:1"
									},
									"scope": 1187,
									"src": "16080:849:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1188,
							"src": "727:16204:1",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "109:16823:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC165": [
							1727
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 1728,
							"src": "136:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1190,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1727,
										"src": "144:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1193,
										"name": "IERC165",
										"nameLocations": [
											"358:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1727,
										"src": "358:7:2"
									},
									"id": 1194,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1192,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1310,
							"linearizedBaseContracts": [
								1310,
								1727
							],
							"name": "IERC1155",
							"nameLocation": "346:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:2",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1207,
									"name": "TransferSingle",
									"nameLocation": "508:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "523:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "549:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "571:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "591:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "603:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:2"
									},
									"src": "502:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1222,
									"name": "TransferBatch",
									"nameLocation": "779:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "802:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "836:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "866:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "894:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1215,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1216,
													"nodeType": "ArrayTypeName",
													"src": "894:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "917:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1218,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1219,
													"nodeType": "ArrayTypeName",
													"src": "917:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:2"
									},
									"src": "773:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1231,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1119:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1144:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1170:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:2"
									},
									"src": "1098:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1238,
									"name": "URI",
									"nameLocation": "1545:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1549:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1563:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:2"
									},
									"src": "1539:44:2"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:2",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1785:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1802:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:2"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1837:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:2"
									},
									"scope": 1310,
									"src": "1766:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2078:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1250,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1251,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2115:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1253,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1254,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2167:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1257,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1258,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:2"
									},
									"scope": 1310,
									"src": "2045:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2471:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2489:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:2"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:2"
									},
									"scope": 1310,
									"src": "2444:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2685:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2702:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:2"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2743:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:2"
									},
									"scope": 1310,
									"src": "2659:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3696:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3710:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3722:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3734:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3749:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:2"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:2"
									},
									"scope": 1310,
									"src": "3670:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "3785:814:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4613:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4652:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4644:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4674:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4666:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4705:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4686:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4686:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1300,
													"nodeType": "ArrayTypeName",
													"src": "4686:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4737:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4718:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1302,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4718:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1303,
													"nodeType": "ArrayTypeName",
													"src": "4718:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4768:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4753:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4753:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:144:2"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4787:0:2"
									},
									"scope": 1310,
									"src": "4604:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1311,
							"src": "336:4454:2",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "110:4681:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1727
						]
					},
					"id": 1353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1728,
							"src": "144:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1313,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1727,
										"src": "152:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1316,
										"name": "IERC165",
										"nameLocations": [
											"357:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1727,
										"src": "357:7:3"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1315,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:3",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								1727
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:3",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1238:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1264:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1286:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1306:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1329:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:3"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1373:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:3"
									},
									"scope": 1352,
									"src": "1202:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:3",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2427:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2453:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2475:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1339,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1340,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2507:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1342,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1343,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2542:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:3"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2586:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:3"
									},
									"scope": 1352,
									"src": "2386:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1353,
							"src": "327:2269:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC1155MetadataURI": [
							1368
						]
					},
					"id": 1369,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1369,
							"sourceUnit": 1311,
							"src": "158:41:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1355,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "166:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1358,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "399:8:4"
									},
									"id": 1359,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:4"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1357,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:4",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1368,
							"linearizedBaseContracts": [
								1368,
								1310,
								1727
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:4",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "624:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:4"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "659:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:4"
									},
									"scope": 1368,
									"src": "611:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1369,
							"src": "366:310:4",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "132:545:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1551
						],
						"Math": [
							2781
						],
						"StorageSlot": [
							1691
						]
					},
					"id": 1552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1370,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1552,
							"sourceUnit": 1692,
							"src": "126:46:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1371,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1691,
										"src": "134:11:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1552,
							"sourceUnit": 2782,
							"src": "173:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1373,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2781,
										"src": "181:4:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1375,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:5",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1551,
							"linearizedBaseContracts": [
								1551
							],
							"name": "Arrays",
							"nameLocation": "284:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1378,
									"libraryName": {
										"id": 1376,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1691,
										"src": "303:11:5"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:5",
									"typeName": {
										"id": 1377,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "843:834:5",
										"statements": [
											{
												"assignments": [
													1390
												],
												"declarations": [
													{
														"constant": false,
														"id": 1390,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 1460,
														"src": "853:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1392,
												"initialValue": {
													"hexValue": "30",
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:5"
											},
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1460,
														"src": "878:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"expression": {
														"id": 1395,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "893:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1398,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "920:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1404,
												"nodeType": "IfStatement",
												"src": "916:48:5",
												"trueBody": {
													"id": 1403,
													"nodeType": "Block",
													"src": "931:33:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1388,
															"id": 1402,
															"nodeType": "Return",
															"src": "945:8:5"
														}
													]
												}
											},
											{
												"body": {
													"id": 1436,
													"nodeType": "Block",
													"src": "993:423:5",
													"statements": [
														{
															"assignments": [
																1409
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1409,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1436,
																	"src": "1007:11:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1408,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1415,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1412,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "1034:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1413,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "1039:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1410,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2781,
																		"src": "1021:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2781_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:5",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1955,
																	"src": "1021:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1417,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "1282:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1418,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "1289:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1416,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1482,
																				1503,
																				1524
																			],
																			"referencedDeclaration": 1524,
																			"src": "1269:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1596_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:5",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1595,
																	"src": "1269:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1421,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "1302:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1434,
																"nodeType": "Block",
																"src": "1360:46:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1428,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1390,
																				"src": "1378:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1429,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1409,
																					"src": "1384:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1430,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1433,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:5"
																	}
																]
															},
															"id": 1435,
															"nodeType": "IfStatement",
															"src": "1265:141:5",
															"trueBody": {
																"id": 1427,
																"nodeType": "Block",
																"src": "1311:43:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1423,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1394,
																				"src": "1329:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1424,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "1336:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1426,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1405,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "981:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1406,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "987:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1437,
												"nodeType": "WhileStatement",
												"src": "974:442:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1438,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "1533:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1442,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "1557:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1443,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1390,
																			"src": "1564:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1441,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1482,
																		1503,
																		1524
																	],
																	"referencedDeclaration": 1524,
																	"src": "1544:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1596_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:5",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1595,
															"src": "1544:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1448,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "1582:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1458,
													"nodeType": "Block",
													"src": "1636:35:5",
													"statements": [
														{
															"expression": {
																"id": 1456,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "1657:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1388,
															"id": 1457,
															"nodeType": "Return",
															"src": "1650:10:5"
														}
													]
												},
												"id": 1459,
												"nodeType": "IfStatement",
												"src": "1529:142:5",
												"trueBody": {
													"id": 1455,
													"nodeType": "Block",
													"src": "1591:39:5",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1451,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "1612:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1388,
															"id": 1454,
															"nodeType": "Return",
															"src": "1605:14:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:5",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "769:23:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1380,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1381,
													"nodeType": "ArrayTypeName",
													"src": "769:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "794:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:5"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "834:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:5"
									},
									"scope": 1551,
									"src": "745:932:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "1993:459:5",
										"statements": [
											{
												"assignments": [
													1474
												],
												"declarations": [
													{
														"constant": false,
														"id": 1474,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "2003:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1473,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:5"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:5",
													"nodeType": "YulBlock",
													"src": "2316:92:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:5"
																},
																"nativeSrc": "2330:19:5",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:5"
															},
															"nativeSrc": "2330:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:5"
														},
														{
															"nativeSrc": "2362:36:5",
															"nodeType": "YulAssignment",
															"src": "2362:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:5"
																		},
																		"nativeSrc": "2374:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:5"
																},
																"nativeSrc": "2370:28:5",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1465,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1474,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:5",
														"valueSize": 1
													}
												],
												"id": 1476,
												"nodeType": "InlineAssembly",
												"src": "2307:101:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1477,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "2424:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:5",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1613,
														"src": "2424:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1587_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1587_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1480,
												"nodeType": "Return",
												"src": "2417:28:5"
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1901:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1463,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1464,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1924:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:5"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1960:31:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1587_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1469,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:5",
															"1972:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1587,
														"src": "1960:23:5"
													},
													"referencedDeclaration": 1587,
													"src": "1960:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1587_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:5"
									},
									"scope": 1551,
									"src": "1879:573:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "2768:459:5",
										"statements": [
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "2778:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1494,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:5"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:5",
													"nodeType": "YulBlock",
													"src": "3091:92:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:5"
																},
																"nativeSrc": "3105:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:5"
															},
															"nativeSrc": "3105:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:5"
														},
														{
															"nativeSrc": "3137:36:5",
															"nodeType": "YulAssignment",
															"src": "3137:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:5"
																		},
																		"nativeSrc": "3149:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:5"
																},
																"nativeSrc": "3145:28:5",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1486,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1488,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1495,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:5",
														"valueSize": 1
													}
												],
												"id": 1497,
												"nodeType": "InlineAssembly",
												"src": "3082:101:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1498,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "3199:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:5",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1635,
														"src": "3199:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1593_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1593_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1493,
												"id": 1501,
												"nodeType": "Return",
												"src": "3192:28:5"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "2676:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1484,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1485,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "2699:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:5"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "2735:31:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1593_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1490,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:5",
															"2747:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1593,
														"src": "2735:23:5"
													},
													"referencedDeclaration": 1593,
													"src": "2735:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1593_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:5"
									},
									"scope": 1551,
									"src": "2654:573:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "3543:459:5",
										"statements": [
											{
												"assignments": [
													1516
												],
												"declarations": [
													{
														"constant": false,
														"id": 1516,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "3553:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1515,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1517,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:5"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:5",
													"nodeType": "YulBlock",
													"src": "3866:92:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:5"
																},
																"nativeSrc": "3880:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:5"
															},
															"nativeSrc": "3880:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:5"
														},
														{
															"nativeSrc": "3912:36:5",
															"nodeType": "YulAssignment",
															"src": "3912:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:5",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:5"
																		},
																		"nativeSrc": "3924:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:5"
																},
																"nativeSrc": "3920:28:5",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:5"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1507,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1516,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:5",
														"valueSize": 1
													}
												],
												"id": 1518,
												"nodeType": "InlineAssembly",
												"src": "3857:101:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1519,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "3974:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:5",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "3974:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1596_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1522,
												"nodeType": "Return",
												"src": "3967:28:5"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3451:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1505,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1506,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3474:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:5"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3510:31:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1512,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1511,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:5",
															"3522:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1596,
														"src": "3510:23:5"
													},
													"referencedDeclaration": 1596,
													"src": "3510:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:5"
									},
									"scope": 1551,
									"src": "3429:573:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "4303:98:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:5",
													"nodeType": "YulBlock",
													"src": "4322:73:5",
													"statements": [
														{
															"nativeSrc": "4336:49:5",
															"nodeType": "YulAssignment",
															"src": "4336:49:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:5"
																				},
																				"nativeSrc": "4353:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:5"
																				},
																				"nativeSrc": "4369:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:5"
																		},
																		"nativeSrc": "4349:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:5"
																},
																"nativeSrc": "4343:42:5",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:5"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1528,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1530,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1533,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:5",
														"valueSize": 1
													}
												],
												"id": 1535,
												"nodeType": "InlineAssembly",
												"src": "4313:82:5"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4232:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1526,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1527,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4254:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:5"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4290:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:5"
									},
									"scope": 1551,
									"src": "4204:197:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "4702:98:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:5",
													"nodeType": "YulBlock",
													"src": "4721:73:5",
													"statements": [
														{
															"nativeSrc": "4735:49:5",
															"nodeType": "YulAssignment",
															"src": "4735:49:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:5"
																				},
																				"nativeSrc": "4752:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:5"
																				},
																				"nativeSrc": "4768:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:5"
																		},
																		"nativeSrc": "4748:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:5"
																},
																"nativeSrc": "4742:42:5",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:5"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1541,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1543,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1546,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:5",
														"valueSize": 1
													}
												],
												"id": 1548,
												"nodeType": "InlineAssembly",
												"src": "4712:82:5"
											}
										]
									},
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:5",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4631:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1539,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1540,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4653:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:5"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "4689:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:5"
									},
									"scope": 1551,
									"src": "4603:197:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1552,
							"src": "276:4526:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1581
						]
					},
					"id": 1582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1554,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1581,
							"linearizedBaseContracts": [
								1581
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1559,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1561,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1581,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1568,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1570,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1581,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1576,
												"id": 1578,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1581,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1582,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1691
						]
					},
					"id": 1692,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1584,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:7",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1691,
							"linearizedBaseContracts": [
								1691
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1587,
									"members": [
										{
											"constant": false,
											"id": 1586,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1587,
											"src": "1300:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1585,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:7",
									"nodeType": "StructDefinition",
									"scope": 1691,
									"src": "1271:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1590,
									"members": [
										{
											"constant": false,
											"id": 1589,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1590,
											"src": "1355:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1588,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:7",
									"nodeType": "StructDefinition",
									"scope": 1691,
									"src": "1326:46:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1593,
									"members": [
										{
											"constant": false,
											"id": 1592,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1593,
											"src": "1407:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1591,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:7",
									"nodeType": "StructDefinition",
									"scope": 1691,
									"src": "1378:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1596,
									"members": [
										{
											"constant": false,
											"id": 1595,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1596,
											"src": "1462:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1594,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:7",
									"nodeType": "StructDefinition",
									"scope": 1691,
									"src": "1433:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1599,
									"members": [
										{
											"constant": false,
											"id": 1598,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1599,
											"src": "1516:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1597,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:7",
									"nodeType": "StructDefinition",
									"scope": 1691,
									"src": "1488:47:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1602,
									"members": [
										{
											"constant": false,
											"id": 1601,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1602,
											"src": "1568:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1600,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:7",
									"nodeType": "StructDefinition",
									"scope": 1691,
									"src": "1541:45:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "1768:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:7",
													"nodeType": "YulBlock",
													"src": "1830:38:7",
													"statements": [
														{
															"nativeSrc": "1844:14:7",
															"nodeType": "YulAssignment",
															"src": "1844:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:7",
																"nodeType": "YulIdentifier",
																"src": "1854:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1609,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1605,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:7",
														"valueSize": 1
													}
												],
												"id": 1611,
												"nodeType": "InlineAssembly",
												"src": "1821:47:7"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:7",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "1708:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:7"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "1745:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1587_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1608,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1607,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1587,
														"src": "1745:11:7"
													},
													"referencedDeclaration": 1587,
													"src": "1745:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1587_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:7"
									},
									"scope": 1691,
									"src": "1684:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "2056:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:7",
													"nodeType": "YulBlock",
													"src": "2118:38:7",
													"statements": [
														{
															"nativeSrc": "2132:14:7",
															"nodeType": "YulAssignment",
															"src": "2132:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:7",
																"nodeType": "YulIdentifier",
																"src": "2142:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1620,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1616,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:7",
														"valueSize": 1
													}
												],
												"id": 1622,
												"nodeType": "InlineAssembly",
												"src": "2109:47:7"
											}
										]
									},
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:7",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "1996:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1615,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:7"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "2033:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1590_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1618,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1590,
														"src": "2033:11:7"
													},
													"referencedDeclaration": 1590,
													"src": "2033:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1590_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:7"
									},
									"scope": 1691,
									"src": "1972:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "2344:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:7",
													"nodeType": "YulBlock",
													"src": "2406:38:7",
													"statements": [
														{
															"nativeSrc": "2420:14:7",
															"nodeType": "YulAssignment",
															"src": "2420:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:7",
																"nodeType": "YulIdentifier",
																"src": "2430:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1631,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1627,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:7",
														"valueSize": 1
													}
												],
												"id": 1633,
												"nodeType": "InlineAssembly",
												"src": "2397:47:7"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:7",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "2284:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1626,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:7"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "2321:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1593_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1629,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1593,
														"src": "2321:11:7"
													},
													"referencedDeclaration": 1593,
													"src": "2321:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1593_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:7"
									},
									"scope": 1691,
									"src": "2260:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "2632:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:7",
													"nodeType": "YulBlock",
													"src": "2694:38:7",
													"statements": [
														{
															"nativeSrc": "2708:14:7",
															"nodeType": "YulAssignment",
															"src": "2708:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:7",
																"nodeType": "YulIdentifier",
																"src": "2718:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1642,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1638,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:7",
														"valueSize": 1
													}
												],
												"id": 1644,
												"nodeType": "InlineAssembly",
												"src": "2685:47:7"
											}
										]
									},
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:7",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "2572:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1637,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:7"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "2609:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1641,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1640,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1596,
														"src": "2609:11:7"
													},
													"referencedDeclaration": 1596,
													"src": "2609:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1596_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:7"
									},
									"scope": 1691,
									"src": "2548:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "2917:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:7",
													"nodeType": "YulBlock",
													"src": "2979:38:7",
													"statements": [
														{
															"nativeSrc": "2993:14:7",
															"nodeType": "YulAssignment",
															"src": "2993:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:7",
																"nodeType": "YulIdentifier",
																"src": "3003:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1653,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1649,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:7",
														"valueSize": 1
													}
												],
												"id": 1655,
												"nodeType": "InlineAssembly",
												"src": "2970:47:7"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:7",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2858:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1648,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:7"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "2895:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1599_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1652,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1651,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1599,
														"src": "2895:10:7"
													},
													"referencedDeclaration": 1599,
													"src": "2895:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1599_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:7"
									},
									"scope": 1691,
									"src": "2835:188:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "3225:112:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:7",
													"nodeType": "YulBlock",
													"src": "3287:44:7",
													"statements": [
														{
															"nativeSrc": "3301:20:7",
															"nodeType": "YulAssignment",
															"src": "3301:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:7",
																"nodeType": "YulIdentifier",
																"src": "3311:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1664,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1660,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1666,
												"nodeType": "InlineAssembly",
												"src": "3278:53:7"
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:7",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "3158:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1659,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:7"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "3203:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1599_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1663,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1662,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1599,
														"src": "3203:10:7"
													},
													"referencedDeclaration": 1599,
													"src": "3203:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1599_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:7"
									},
									"scope": 1691,
									"src": "3135:202:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "3513:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:7",
													"nodeType": "YulBlock",
													"src": "3575:38:7",
													"statements": [
														{
															"nativeSrc": "3589:14:7",
															"nodeType": "YulAssignment",
															"src": "3589:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:7",
																"nodeType": "YulIdentifier",
																"src": "3599:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1675,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1671,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:7",
														"valueSize": 1
													}
												],
												"id": 1677,
												"nodeType": "InlineAssembly",
												"src": "3566:47:7"
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:7",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3455:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1670,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:7"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3492:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1602_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1673,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1602,
														"src": "3492:9:7"
													},
													"referencedDeclaration": 1602,
													"src": "3492:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1602_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:7"
									},
									"scope": 1691,
									"src": "3433:186:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "3816:112:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:7",
													"nodeType": "YulBlock",
													"src": "3878:44:7",
													"statements": [
														{
															"nativeSrc": "3892:20:7",
															"nodeType": "YulAssignment",
															"src": "3892:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:7",
																"nodeType": "YulIdentifier",
																"src": "3902:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1686,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1682,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1688,
												"nodeType": "InlineAssembly",
												"src": "3869:53:7"
											}
										]
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:7",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "3751:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:7"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "3795:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1602_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1685,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1684,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1602,
														"src": "3795:9:7"
													},
													"referencedDeclaration": 1602,
													"src": "3795:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1602_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:7"
									},
									"scope": 1691,
									"src": "3729:199:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1692,
							"src": "1245:2685:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1715
						],
						"IERC165": [
							1727
						]
					},
					"id": 1716,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1693,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1695,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1716,
							"sourceUnit": 1728,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1694,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1727,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1697,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1727,
										"src": "687:7:8"
									},
									"id": 1698,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1696,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1715,
							"linearizedBaseContracts": [
								1715,
								1727
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1726
									],
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1706,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1708,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1727_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1727_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1707,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1727",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1705,
												"id": 1712,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1700,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1703,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1715,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1716,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1727
						]
					},
					"id": 1728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1717,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1718,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1727,
							"linearizedBaseContracts": [
								1727
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1720,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1727,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1728,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2781
						]
					},
					"id": 2782,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1730,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2781,
							"linearizedBaseContracts": [
								2781
							],
							"name": "Math",
							"nameLocation": "211:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1733,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:10"
									},
									"src": "277:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1738,
									"members": [
										{
											"id": 1734,
											"name": "Floor",
											"nameLocation": "336:5:10",
											"nodeType": "EnumValue",
											"src": "336:5:10"
										},
										{
											"id": 1735,
											"name": "Ceil",
											"nameLocation": "379:4:10",
											"nodeType": "EnumValue",
											"src": "379:4:10"
										},
										{
											"id": 1736,
											"name": "Trunc",
											"nameLocation": "421:5:10",
											"nodeType": "EnumValue",
											"src": "421:5:10"
										},
										{
											"id": 1737,
											"name": "Expand",
											"nameLocation": "451:6:10",
											"nodeType": "EnumValue",
											"src": "451:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:10",
									"nodeType": "EnumDefinition",
									"src": "312:169:10"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "661:140:10",
										"statements": [
											{
												"id": 1768,
												"nodeType": "UncheckedBlock",
												"src": "671:124:10",
												"statements": [
													{
														"assignments": [
															1751
														],
														"declarations": [
															{
																"constant": false,
																"id": 1751,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1768,
																"src": "695:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1750,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1755,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1752,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "707:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1753,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "711:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1756,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "730:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1757,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "734:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1763,
														"nodeType": "IfStatement",
														"src": "726:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1761,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1749,
															"id": 1762,
															"nodeType": "Return",
															"src": "737:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1765,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1766,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1749,
														"id": 1767,
														"nodeType": "Return",
														"src": "768:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "646:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:10"
									},
									"scope": 2781,
									"src": "585:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "984:113:10",
										"statements": [
											{
												"id": 1796,
												"nodeType": "UncheckedBlock",
												"src": "994:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1782,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "1022:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1783,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "1026:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1789,
														"nodeType": "IfStatement",
														"src": "1018:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1781,
															"id": 1788,
															"nodeType": "Return",
															"src": "1029:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1791,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "1074:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1792,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "1078:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1794,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1781,
														"id": 1795,
														"nodeType": "Return",
														"src": "1060:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "924:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:10"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "969:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "975:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:10"
									},
									"scope": 2781,
									"src": "908:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "1283:417:10",
										"statements": [
											{
												"id": 1838,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1810,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "1551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1817,
														"nodeType": "IfStatement",
														"src": "1547:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1815,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1809,
															"id": 1816,
															"nodeType": "Return",
															"src": "1559:16:10"
														}
													},
													{
														"assignments": [
															1819
														],
														"declarations": [
															{
																"constant": false,
																"id": 1819,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1838,
																"src": "1589:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1818,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1823,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1820,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1821,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "1605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1824,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "1624:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1825,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "1628:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1827,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "1633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1833,
														"nodeType": "IfStatement",
														"src": "1620:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1831,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1809,
															"id": 1832,
															"nodeType": "Return",
															"src": "1636:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1835,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "1681:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1836,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1809,
														"id": 1837,
														"nodeType": "Return",
														"src": "1667:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1223:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1234:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:10"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1268:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1274:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:10"
									},
									"scope": 2781,
									"src": "1207:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "1887:114:10",
										"statements": [
											{
												"id": 1866,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1852,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "1925:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1859,
														"nodeType": "IfStatement",
														"src": "1921:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1857,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1851,
															"id": 1858,
															"nodeType": "Return",
															"src": "1933:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1861,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1843,
																		"src": "1978:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1862,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1845,
																		"src": "1982:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1864,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1851,
														"id": 1865,
														"nodeType": "Return",
														"src": "1964:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1827:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1838:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:10"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1872:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1878:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:10"
									},
									"scope": 2781,
									"src": "1811:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "2198:114:10",
										"statements": [
											{
												"id": 1894,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1880,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "2236:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1887,
														"nodeType": "IfStatement",
														"src": "2232:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1885,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1879,
															"id": 1886,
															"nodeType": "Return",
															"src": "2244:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1889,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "2289:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1890,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1873,
																		"src": "2293:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1892,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1879,
														"id": 1893,
														"nodeType": "Return",
														"src": "2275:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2138:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2149:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:10"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2183:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2189:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:10"
									},
									"scope": 2781,
									"src": "2122:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "2449:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1906,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "2466:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1907,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "2470:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1910,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1901,
														"src": "2478:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:10",
													"trueExpression": {
														"id": 1909,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "2474:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1905,
												"id": 1912,
												"nodeType": "Return",
												"src": "2459:20:10"
											}
										]
									},
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2395:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2406:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:10"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2440:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:10"
									},
									"scope": 2781,
									"src": "2382:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "2624:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1924,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "2641:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1925,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "2645:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1928,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "2653:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:10",
													"trueExpression": {
														"id": 1927,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1917,
														"src": "2649:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1923,
												"id": 1930,
												"nodeType": "Return",
												"src": "2634:20:10"
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2570:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:10"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "2615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:10"
									},
									"scope": 2781,
									"src": "2557:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "2845:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1942,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "2900:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1943,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1937,
																	"src": "2904:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1945,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1946,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "2910:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1947,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1937,
																		"src": "2914:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1949,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1941,
												"id": 1953,
												"nodeType": "Return",
												"src": "2892:28:10"
											}
										]
									},
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "2791:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "2802:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:10"
									},
									"returnParameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "2836:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:10"
									},
									"scope": 2781,
									"src": "2774:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1988,
										"nodeType": "Block",
										"src": "3219:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1965,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "3233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1973,
												"nodeType": "IfStatement",
												"src": "3229:127:10",
												"trueBody": {
													"id": 1972,
													"nodeType": "Block",
													"src": "3241:115:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1968,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "3340:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1969,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1960,
																	"src": "3344:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1964,
															"id": 1971,
															"nodeType": "Return",
															"src": "3333:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1974,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "3444:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1978,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "3458:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1981,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1982,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1960,
																"src": "3467:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1964,
												"id": 1987,
												"nodeType": "Return",
												"src": "3437:35:10"
											}
										]
									},
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "3165:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "3176:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:10"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "3210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:10"
									},
									"scope": 2781,
									"src": "3148:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "3901:4018:10",
										"statements": [
											{
												"id": 2113,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:10",
												"statements": [
													{
														"assignments": [
															2002
														],
														"declarations": [
															{
																"constant": false,
																"id": 2002,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2113,
																"src": "4232:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2001,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2006,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2003,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "4248:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2004,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1994,
																"src": "4252:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:10"
													},
													{
														"assignments": [
															2008
														],
														"declarations": [
															{
																"constant": false,
																"id": 2008,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2113,
																"src": "4312:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2007,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2009,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:10"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:10",
															"nodeType": "YulBlock",
															"src": "4392:122:10",
															"statements": [
																{
																	"nativeSrc": "4410:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:10"
																				},
																				"nativeSrc": "4433:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:10"
																		},
																		"nativeSrc": "4420:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:10",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:10",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:10"
																				},
																				"nativeSrc": "4470:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:10"
																				},
																				"nativeSrc": "4486:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:10"
																		},
																		"nativeSrc": "4466:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2008,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1992,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1994,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:10",
																"valueSize": 1
															}
														],
														"id": 2010,
														"nodeType": "InlineAssembly",
														"src": "4383:131:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2011,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2008,
																"src": "4595:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2019,
														"nodeType": "IfStatement",
														"src": "4591:368:10",
														"trueBody": {
															"id": 2018,
															"nodeType": "Block",
															"src": "4607:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2014,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2002,
																			"src": "4925:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2015,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "4933:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2000,
																	"id": 2017,
																	"nodeType": "Return",
																	"src": "4918:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2020,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "5065:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2021,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2008,
																"src": "5080:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2027,
														"nodeType": "IfStatement",
														"src": "5061:88:10",
														"trueBody": {
															"id": 2026,
															"nodeType": "Block",
															"src": "5087:62:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2023,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "5112:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2025,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															2029
														],
														"declarations": [
															{
																"constant": false,
																"id": 2029,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2113,
																"src": "5404:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2028,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2030,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:10"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:10",
															"nodeType": "YulBlock",
															"src": "5444:291:10",
															"statements": [
																{
																	"nativeSrc": "5513:38:10",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:10"
																		},
																		"nativeSrc": "5526:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:10",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:10"
																				},
																				"nativeSrc": "5653:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nativeSrc": "5642:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:10",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:10"
																		},
																		"nativeSrc": "5700:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1996,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2008,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2008,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2029,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2029,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2029,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1992,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1994,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:10",
																"valueSize": 1
															}
														],
														"id": 2031,
														"nodeType": "InlineAssembly",
														"src": "5435:300:10"
													},
													{
														"assignments": [
															2033
														],
														"declarations": [
															{
																"constant": false,
																"id": 2033,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2113,
																"src": "5939:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2032,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2040,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2034,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "5954:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2036,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "5973:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2038,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:10"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:10",
															"nodeType": "YulBlock",
															"src": "6008:362:10",
															"statements": [
																{
																	"nativeSrc": "6073:37:10",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:10"
																		},
																		"nativeSrc": "6088:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:10",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:10"
																		},
																		"nativeSrc": "6186:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:10",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:10"
																						},
																						"nativeSrc": "6333:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:10"
																				},
																				"nativeSrc": "6329:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:10"
																		},
																		"nativeSrc": "6325:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1996,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1996,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2033,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2033,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2033,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2033,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2033,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:10",
																"valueSize": 1
															}
														],
														"id": 2041,
														"nodeType": "InlineAssembly",
														"src": "5999:371:10"
													},
													{
														"expression": {
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2042,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "6436:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2043,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "6445:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2044,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2033,
																	"src": "6453:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2047,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:10"
													},
													{
														"assignments": [
															2049
														],
														"declarations": [
															{
																"constant": false,
																"id": 2049,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2113,
																"src": "6775:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2048,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2056,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2051,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "6798:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2053,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:10"
													},
													{
														"expression": {
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2057,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7031:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2059,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "7046:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2060,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "7060:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2064,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:10"
													},
													{
														"expression": {
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2065,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7100:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2067,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "7115:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2068,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "7129:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2072,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:10"
													},
													{
														"expression": {
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2073,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7170:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2075,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "7185:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2076,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "7199:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2080,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:10"
													},
													{
														"expression": {
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2081,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7240:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2083,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "7255:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2084,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "7269:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2088,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:10"
													},
													{
														"expression": {
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2089,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7310:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2091,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "7325:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2092,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "7339:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2096,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:10"
													},
													{
														"expression": {
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2097,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "7381:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2099,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "7396:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2100,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "7410:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2104,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:10"
													},
													{
														"expression": {
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2105,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1999,
																"src": "7851:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2106,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "7860:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2107,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "7868:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2110,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:10"
													},
													{
														"expression": {
															"id": 2111,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "7896:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2000,
														"id": 2112,
														"nodeType": "Return",
														"src": "7889:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "3819:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "3830:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "3841:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:10"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "3885:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:10"
									},
									"scope": 2781,
									"src": "3803:4116:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "8161:192:10",
										"statements": [
											{
												"assignments": [
													2131
												],
												"declarations": [
													{
														"constant": false,
														"id": 2131,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2157,
														"src": "8171:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2137,
												"initialValue": {
													"arguments": [
														{
															"id": 2133,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "8195:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2134,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "8198:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2135,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "8201:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2132,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2115,
															2158
														],
														"referencedDeclaration": 2115,
														"src": "8188:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2139,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "8244:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1738",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1738",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2138,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2780,
															"src": "8227:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1738_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2142,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2118,
																	"src": "8264:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2143,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "8267:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2144,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "8270:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2141,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2154,
												"nodeType": "IfStatement",
												"src": "8223:101:10",
												"trueBody": {
													"id": 2153,
													"nodeType": "Block",
													"src": "8288:36:10",
													"statements": [
														{
															"expression": {
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2149,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "8302:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2152,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2155,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2131,
													"src": "8340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2129,
												"id": 2156,
												"nodeType": "Return",
												"src": "8333:13:10"
											}
										]
									},
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "8067:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "8078:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "8089:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "8110:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2123,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "8110:8:10"
													},
													"referencedDeclaration": 1738,
													"src": "8110:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:10"
									},
									"returnParameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "8152:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:10"
									},
									"scope": 2781,
									"src": "8051:302:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2269,
										"nodeType": "Block",
										"src": "8644:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2166,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "8658:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2172,
												"nodeType": "IfStatement",
												"src": "8654:45:10",
												"trueBody": {
													"id": 2171,
													"nodeType": "Block",
													"src": "8666:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2165,
															"id": 2170,
															"nodeType": "Return",
															"src": "8680:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2174
												],
												"declarations": [
													{
														"constant": false,
														"id": 2174,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2269,
														"src": "9378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2183,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2177,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "9406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2176,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2437,
																			2472
																		],
																		"referencedDeclaration": 2437,
																		"src": "9401:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2181,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:10"
											},
											{
												"id": 2268,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:10",
												"statements": [
													{
														"expression": {
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2184,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "9839:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2185,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "9849:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2186,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "9858:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2187,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "9862:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2190,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2194,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:10"
													},
													{
														"expression": {
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2195,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "9888:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2196,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "9898:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2197,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "9907:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2198,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "9911:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2201,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2205,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:10"
													},
													{
														"expression": {
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2206,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "9937:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2207,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "9947:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2210,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2208,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "9956:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2209,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "9960:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2212,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2216,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:10"
													},
													{
														"expression": {
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2217,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "9986:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2218,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "9996:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2219,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "10005:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2220,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "10009:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2223,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2227,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:10"
													},
													{
														"expression": {
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2228,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "10035:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2229,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "10045:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2230,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "10054:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2231,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "10058:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2238,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:10"
													},
													{
														"expression": {
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2239,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "10084:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2240,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "10094:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2241,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "10103:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2242,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "10107:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2245,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2249,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:10"
													},
													{
														"expression": {
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2250,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "10133:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2251,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "10143:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2252,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2161,
																					"src": "10152:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2253,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "10156:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2256,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2260,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2262,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "10193:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2263,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2161,
																		"src": "10201:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2264,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "10205:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2261,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1932,
																"src": "10189:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2165,
														"id": 2267,
														"nodeType": "Return",
														"src": "10182:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "8601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:10"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "8635:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:10"
									},
									"scope": 2781,
									"src": "8587:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2304,
										"nodeType": "Block",
										"src": "10405:164:10",
										"statements": [
											{
												"id": 2303,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:10",
												"statements": [
													{
														"assignments": [
															2282
														],
														"declarations": [
															{
																"constant": false,
																"id": 2282,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2303,
																"src": "10439:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2286,
														"initialValue": {
															"arguments": [
																{
																	"id": 2284,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2273,
																	"src": "10461:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2283,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2270,
																	2305
																],
																"referencedDeclaration": 2270,
																"src": "10456:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2287,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2282,
																"src": "10484:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2289,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2276,
																						"src": "10511:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2288,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2780,
																					"src": "10494:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1738_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2291,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2282,
																						"src": "10524:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2292,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2282,
																						"src": "10533:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2294,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2273,
																					"src": "10542:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2300,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2280,
														"id": 2302,
														"nodeType": "Return",
														"src": "10477:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2271,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "10343:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "10354:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2275,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2274,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "10354:8:10"
													},
													"referencedDeclaration": 1738,
													"src": "10354:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:10"
									},
									"returnParameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "10396:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:10"
									},
									"scope": 2781,
									"src": "10329:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2436,
										"nodeType": "Block",
										"src": "10760:922:10",
										"statements": [
											{
												"assignments": [
													2314
												],
												"declarations": [
													{
														"constant": false,
														"id": 2314,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2436,
														"src": "10770:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2316,
												"initialValue": {
													"hexValue": "30",
													"id": 2315,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:10"
											},
											{
												"id": 2433,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2317,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "10826:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2331,
														"nodeType": "IfStatement",
														"src": "10822:99:10",
														"trueBody": {
															"id": 2330,
															"nodeType": "Block",
															"src": "10844:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2322,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "10862:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2325,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:10"
																},
																{
																	"expression": {
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2326,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "10893:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2329,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2332,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "10938:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2346,
														"nodeType": "IfStatement",
														"src": "10934:96:10",
														"trueBody": {
															"id": 2345,
															"nodeType": "Block",
															"src": "10955:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2337,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "10973:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2340,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:10"
																},
																{
																	"expression": {
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2341,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11003:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2344,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2347,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "11047:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2361,
														"nodeType": "IfStatement",
														"src": "11043:96:10",
														"trueBody": {
															"id": 2360,
															"nodeType": "Block",
															"src": "11064:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2352,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "11082:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2355,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:10"
																},
																{
																	"expression": {
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2356,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11112:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2359,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2362,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "11156:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2376,
														"nodeType": "IfStatement",
														"src": "11152:96:10",
														"trueBody": {
															"id": 2375,
															"nodeType": "Block",
															"src": "11173:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2367,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "11191:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2370,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:10"
																},
																{
																	"expression": {
																		"id": 2373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2371,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11221:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2374,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "11265:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2391,
														"nodeType": "IfStatement",
														"src": "11261:93:10",
														"trueBody": {
															"id": 2390,
															"nodeType": "Block",
															"src": "11281:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2382,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "11299:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2385,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:10"
																},
																{
																	"expression": {
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2386,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11328:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2389,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2392,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "11371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2406,
														"nodeType": "IfStatement",
														"src": "11367:93:10",
														"trueBody": {
															"id": 2405,
															"nodeType": "Block",
															"src": "11387:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2397,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "11405:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2400,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:10"
																},
																{
																	"expression": {
																		"id": 2403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2401,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11434:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2404,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2407,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "11477:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2421,
														"nodeType": "IfStatement",
														"src": "11473:93:10",
														"trueBody": {
															"id": 2420,
															"nodeType": "Block",
															"src": "11493:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2412,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "11511:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2415,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:10"
																},
																{
																	"expression": {
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2416,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11540:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2419,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2422,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "11583:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2432,
														"nodeType": "IfStatement",
														"src": "11579:64:10",
														"trueBody": {
															"id": 2431,
															"nodeType": "Block",
															"src": "11599:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2427,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "11617:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2430,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2434,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2314,
													"src": "11669:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2312,
												"id": 2435,
												"nodeType": "Return",
												"src": "11662:13:10"
											}
										]
									},
									"documentation": {
										"id": 2306,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "10713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:10"
									},
									"returnParameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "10751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:10"
									},
									"scope": 2781,
									"src": "10699:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2471,
										"nodeType": "Block",
										"src": "11915:168:10",
										"statements": [
											{
												"id": 2470,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:10",
												"statements": [
													{
														"assignments": [
															2449
														],
														"declarations": [
															{
																"constant": false,
																"id": 2449,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2470,
																"src": "11949:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2448,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2453,
														"initialValue": {
															"arguments": [
																{
																	"id": 2451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "11971:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2450,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2437,
																	2472
																],
																"referencedDeclaration": 2437,
																"src": "11966:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2454,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2449,
																"src": "11998:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2456,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2443,
																						"src": "12025:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2455,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2780,
																					"src": "12008:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1738_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2460,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2458,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2459,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2449,
																						"src": "12043:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2461,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2440,
																					"src": "12052:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2467,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2447,
														"id": 2469,
														"nodeType": "Return",
														"src": "11991:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2438,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "11849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "11864:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2441,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "11864:8:10"
													},
													"referencedDeclaration": 1738,
													"src": "11864:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:10"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "11906:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:10"
									},
									"scope": 2781,
									"src": "11835:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2600,
										"nodeType": "Block",
										"src": "12276:854:10",
										"statements": [
											{
												"assignments": [
													2481
												],
												"declarations": [
													{
														"constant": false,
														"id": 2481,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2600,
														"src": "12286:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2480,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2483,
												"initialValue": {
													"hexValue": "30",
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:10"
											},
											{
												"id": 2597,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2484,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "12342:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2500,
														"nodeType": "IfStatement",
														"src": "12338:103:10",
														"trueBody": {
															"id": 2499,
															"nodeType": "Block",
															"src": "12361:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2489,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "12379:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2494,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:10"
																},
																{
																	"expression": {
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2495,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "12414:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2498,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2501,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "12458:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2517,
														"nodeType": "IfStatement",
														"src": "12454:103:10",
														"trueBody": {
															"id": 2516,
															"nodeType": "Block",
															"src": "12477:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2506,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "12495:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2511,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:10"
																},
																{
																	"expression": {
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2512,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "12530:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2515,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2518,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "12574:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2534,
														"nodeType": "IfStatement",
														"src": "12570:103:10",
														"trueBody": {
															"id": 2533,
															"nodeType": "Block",
															"src": "12593:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2523,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "12611:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2528,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:10"
																},
																{
																	"expression": {
																		"id": 2531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2529,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "12646:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2532,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2535,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "12690:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2551,
														"nodeType": "IfStatement",
														"src": "12686:100:10",
														"trueBody": {
															"id": 2550,
															"nodeType": "Block",
															"src": "12708:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2540,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "12726:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2545,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:10"
																},
																{
																	"expression": {
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2546,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "12760:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2549,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2552,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "12803:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2568,
														"nodeType": "IfStatement",
														"src": "12799:100:10",
														"trueBody": {
															"id": 2567,
															"nodeType": "Block",
															"src": "12821:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "12839:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2562,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:10"
																},
																{
																	"expression": {
																		"id": 2565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2563,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "12873:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2566,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2569,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "12916:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2585,
														"nodeType": "IfStatement",
														"src": "12912:100:10",
														"trueBody": {
															"id": 2584,
															"nodeType": "Block",
															"src": "12934:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2574,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "12952:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2579,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:10"
																},
																{
																	"expression": {
																		"id": 2582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2580,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "12986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2583,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2586,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "13029:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2596,
														"nodeType": "IfStatement",
														"src": "13025:66:10",
														"trueBody": {
															"id": 2595,
															"nodeType": "Block",
															"src": "13047:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2591,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "13065:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2594,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2598,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2481,
													"src": "13117:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2479,
												"id": 2599,
												"nodeType": "Return",
												"src": "13110:13:10"
											}
										]
									},
									"documentation": {
										"id": 2473,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "12229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:10"
									},
									"returnParameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "12267:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:10"
									},
									"scope": 2781,
									"src": "12214:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2635,
										"nodeType": "Block",
										"src": "13365:170:10",
										"statements": [
											{
												"id": 2634,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:10",
												"statements": [
													{
														"assignments": [
															2613
														],
														"declarations": [
															{
																"constant": false,
																"id": 2613,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2634,
																"src": "13399:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2612,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2617,
														"initialValue": {
															"arguments": [
																{
																	"id": 2615,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2604,
																	"src": "13422:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2614,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2601,
																	2636
																],
																"referencedDeclaration": 2601,
																"src": "13416:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2618,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2613,
																"src": "13449:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2620,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2607,
																						"src": "13476:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2619,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2780,
																					"src": "13459:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1738_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2624,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2622,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2623,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2613,
																						"src": "13495:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2625,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2604,
																					"src": "13504:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2631,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2611,
														"id": 2633,
														"nodeType": "Return",
														"src": "13442:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2602,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "13299:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "13314:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2605,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "13314:8:10"
													},
													"referencedDeclaration": 1738,
													"src": "13314:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:10"
									},
									"returnParameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "13356:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:10"
									},
									"scope": 2781,
									"src": "13284:251:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2722,
										"nodeType": "Block",
										"src": "13855:600:10",
										"statements": [
											{
												"assignments": [
													2645
												],
												"declarations": [
													{
														"constant": false,
														"id": 2645,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2722,
														"src": "13865:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2644,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2647,
												"initialValue": {
													"hexValue": "30",
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:10"
											},
											{
												"id": 2719,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "13921:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2662,
														"nodeType": "IfStatement",
														"src": "13917:98:10",
														"trueBody": {
															"id": 2661,
															"nodeType": "Block",
															"src": "13939:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2653,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2639,
																			"src": "13957:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2656,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:10"
																},
																{
																	"expression": {
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2657,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2645,
																			"src": "13988:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2660,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2663,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "14032:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2677,
														"nodeType": "IfStatement",
														"src": "14028:95:10",
														"trueBody": {
															"id": 2676,
															"nodeType": "Block",
															"src": "14049:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2668,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2639,
																			"src": "14067:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2671,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:10"
																},
																{
																	"expression": {
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2672,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2645,
																			"src": "14097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2675,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2678,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "14140:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2692,
														"nodeType": "IfStatement",
														"src": "14136:95:10",
														"trueBody": {
															"id": 2691,
															"nodeType": "Block",
															"src": "14157:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2683,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2639,
																			"src": "14175:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2686,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:10"
																},
																{
																	"expression": {
																		"id": 2689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2687,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2645,
																			"src": "14205:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2690,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2693,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "14248:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2707,
														"nodeType": "IfStatement",
														"src": "14244:95:10",
														"trueBody": {
															"id": 2706,
															"nodeType": "Block",
															"src": "14265:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2698,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2639,
																			"src": "14283:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2701,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:10"
																},
																{
																	"expression": {
																		"id": 2704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2702,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2645,
																			"src": "14313:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2705,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2708,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "14356:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2718,
														"nodeType": "IfStatement",
														"src": "14352:64:10",
														"trueBody": {
															"id": 2717,
															"nodeType": "Block",
															"src": "14372:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2713,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2645,
																			"src": "14390:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2716,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2720,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2645,
													"src": "14442:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2643,
												"id": 2721,
												"nodeType": "Return",
												"src": "14435:13:10"
											}
										]
									},
									"documentation": {
										"id": 2637,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "13808:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:10"
									},
									"returnParameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "13846:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:10"
									},
									"scope": 2781,
									"src": "13792:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2760,
										"nodeType": "Block",
										"src": "14692:177:10",
										"statements": [
											{
												"id": 2759,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:10",
												"statements": [
													{
														"assignments": [
															2735
														],
														"declarations": [
															{
																"constant": false,
																"id": 2735,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2759,
																"src": "14726:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2734,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2739,
														"initialValue": {
															"arguments": [
																{
																	"id": 2737,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "14750:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2736,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2723,
																	2761
																],
																"referencedDeclaration": 2723,
																"src": "14743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2740,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2735,
																"src": "14777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2742,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2729,
																						"src": "14804:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1738",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2741,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2780,
																					"src": "14787:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1738_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2749,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2744,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2747,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2745,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2735,
																									"src": "14823:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2746,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2748,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2750,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2726,
																					"src": "14838:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2756,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2733,
														"id": 2758,
														"nodeType": "Return",
														"src": "14770:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2724,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "14626:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "14641:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2728,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2727,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "14641:8:10"
													},
													"referencedDeclaration": 1738,
													"src": "14641:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:10"
									},
									"returnParameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "14683:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:10"
									},
									"scope": 2781,
									"src": "14610:259:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2779,
										"nodeType": "Block",
										"src": "15067:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2772,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2765,
																	"src": "15090:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1738",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1738",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2770,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2769,
												"id": 2778,
												"nodeType": "Return",
												"src": "15077:31:10"
											}
										]
									},
									"documentation": {
										"id": 2762,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "15019:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1738",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2763,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "15019:8:10"
													},
													"referencedDeclaration": 1738,
													"src": "15019:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1738",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:10"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "15061:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2767,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:10"
									},
									"scope": 2781,
									"src": "14993:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2782,
							"src": "203:14914:10",
							"usedErrors": [
								1733
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:10"
				},
				"id": 10
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Arrays": [
							1551
						],
						"Context": [
							1581
						],
						"ERC1155": [
							1187
						],
						"ERC165": [
							1715
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1368
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1727
						],
						"MyCollectibles": [
							2818
						]
					},
					"id": 2819,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2783,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2784,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2819,
							"sourceUnit": 1188,
							"src": "58:59:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2785,
										"name": "ERC1155",
										"nameLocations": [
											"146:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1187,
										"src": "146:7:11"
									},
									"id": 2786,
									"nodeType": "InheritanceSpecifier",
									"src": "146:7:11"
								}
							],
							"canonicalName": "MyCollectibles",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2818,
							"linearizedBaseContracts": [
								2818,
								1187,
								136,
								1368,
								1310,
								1715,
								1727,
								1581
							],
							"name": "MyCollectibles",
							"nameLocation": "128:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2816,
										"nodeType": "Block",
										"src": "261:229:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2793,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "277:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "281:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "277:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "289:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "3130",
															"id": 2796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "309:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														{
															"hexValue": "",
															"id": 2797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "328:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2792,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "271:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "271:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2799,
												"nodeType": "ExpressionStatement",
												"src": "271:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2801,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "347:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "351:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "347:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "32",
															"id": 2803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "359:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														{
															"hexValue": "3230",
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "387:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														{
															"hexValue": "",
															"id": 2805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "406:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2800,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "341:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "341:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2807,
												"nodeType": "ExpressionStatement",
												"src": "341:68:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2809,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "425:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "429:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "425:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "33",
															"id": 2811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "437:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														{
															"hexValue": "3230",
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "461:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														{
															"hexValue": "",
															"id": 2813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "480:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2808,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "419:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "419:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2815,
												"nodeType": "ExpressionStatement",
												"src": "419:64:11"
											}
										]
									},
									"id": 2817,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4a4c44536a722f6d657461646174615f626c6f636b636861696e2f6d61696e2f7b69647d2e6a736f6e",
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "182:77:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_eae80a2c7bf2c9d096e554e5e4405cf6aefa68f606389f34d4cda8a311083ded",
														"typeString": "literal_string \"https://raw.githubusercontent.com/JLDSjr/metadata_blockchain/main/{id}.json\""
													},
													"value": "https://raw.githubusercontent.com/JLDSjr/metadata_blockchain/main/{id}.json"
												}
											],
											"id": 2790,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2788,
												"name": "ERC1155",
												"nameLocations": [
													"174:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1187,
												"src": "174:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "174:86:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:2:11"
									},
									"returnParameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "261:0:11"
									},
									"scope": 2818,
									"src": "160:330:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2819,
							"src": "119:373:11",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "32:460:11"
				},
				"id": 11
			}
		}
	}
}